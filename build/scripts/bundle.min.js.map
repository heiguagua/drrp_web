{"version":3,"sources":["app.js","config.js","common/dashboard.js","common/login.js","common/main.js","department/audit.js","department/inventory.js","department/main.js","department/requirement.js","department/share.js","department/user.js","inventory/detail.js","inventory/main.js","requirement/detail.js","requirement/main.js"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","$provide","html5Mode","interceptors","push","$q","request","withCredentials","requestError","rejection","response","responseError","otherwise","state","url","templateUrl","controller","cache","Config","constant","path","Dashboard","$scope","Http","getInventory","skip","limit","then","result","data","head","status","Inventories","body","getRequirement","Requirements","QInventoryOverview","getInventoryOverview","endTime","QRequirementOverview","getRequirementOverview","startTime","QInventoryStatistic","getInventoryStatistic","getDepartments","Bureaus","factory","$http","API","params","get","directive","restrict","template","link","scope","element","attr","inventoryOverview","myChart","echarts","init","find","option","tooltip","trigger","formatter","series","name","type","selectedMode","radius","label","normal","position","labelLine","show","value","INVENTORY_DEPT_NUM","MONTH_INVENTORY_DEPT_NUM","selected","INVENTORY_NUM","setOption","requirementOverview","REQUIREMENT_DEPT_NUM","MONTH_REQUIREMENT_DEPT_NUM","REQUIREMENT_NUM","DEPARTMENT","INVENTORY","REQUIREMENT","legend","xAxis","yAxis","min","max","interval","axisLabel","Login","$rootScope","$state","submit","username","password","login","USERNAME","PASSWORD","User","console","log","go","Main","Tab","switcher","target","Actived","dashboard","inventory","requirement","department","active","Audit","getAuditList","_httpParams","auditList","getAuditTotal","auditTotal","getShareLevelFilter","shareLevelList","getSpatialFilter","areaPeriodList","getAuditStatusFilter","auditStatusList","shareLvSelection","getAuListBySl","item","idx","indexOf","SYS_DICT_ID","SHARE_LEVEL","areaSelection","getAuListByAP","splice","AREA_DATA_LEVEL","statusSelection","getAuListBySta","AUDITNAME","AUDIT_STATUS","getShareLevelAll","getSpatialAll","getStatusAll","$stateParams","depName","DEP_NAME","auditId","AUDITID","getAuditDetail","AuditDetail","submitAudit","AUDITOR","PERSON_NAME","auditInfo","_","assign","AuditInfo","ID","updateAuditDetail","alert","reload","put","DInventory","getDepartmentInvntList","getDepartInvntList","depIvntList","getInventoryDepTotal","ivntDepTotal","shareLvMainSelection","getIvntListBySl","areaMainSelection","getIvntListByAP","DICTID","$uibModal","Component","step1","step2","step3","step4","progress","loginUser","SHARE_FREQUENCY","DATA_LEVEL","QUOTA_TYPE","DATA_SHOW_FORMAT","SECRET_FLAG","LEVEL_AUTH","inventoryAttrList","DataExamps","exampTitles","submitObject","Date","prototype","format","fmt","o","%m","this","getMonth","%d","getDate","%H","getHours","%M","getMinutes","%S","getSeconds","test","replace","RegExp","$1","getFullYear","substr","getTime","slice","k","length","shareFreqSelection","dataLevelSelection","shareFreqArrShow","toggleShareFreqSelection","itemId","itemName","Modal","Quota","toggleDataLevelSelection","idxModal","DICT_NAME","getSystemDictByCatagory","DICT_CATEGORY","shareFrequencyList","dataLevelList","getDepartmentList","deptList","deptListModal","depShow","depShowModal","showHideDeps","ev","dataInfo","shareLevel","backToStep1","toStep3","backToStep2","toStep4","ExampDatas","backToStep3","toStep2","isValid","step1_data","data_info_add_configs","sys_dicts","union","forEach","sys_dict","dataInfoId","dataName","sysDictId","shareDeps","map","outputDeptList","publishTime","depId","DEP_ID","dataInfoAddConfigs","window","popAttrAddModal","quotaTypeList","dataShowFormatList","secretFlagList","popModal","outputModalDeptList","areaDataLevelStr","invntModalData","areaDataLevel","createTime","step2_data","dataQuota","index","step2_obj","showOrder","dataCells","step3_data","addExampData","ExampModal","ExampData","rowDatas","dataObj","rowKey","dataQuotaValue","dataValue","dataQuotaId","quotaName","dataExamples","addFormSubmit","step4_data","dataOtherInfo","DataOtherInfo","saveInventory","popup2","opened","openDatePicker","post","service","popAlert","info","Alerts","message","timeout","CloseAlert","modalInstance","open","animation","confirm","close","cancel","dismiss","Department","getFirstDayMonth","now","getNowDate","starTime","getInventoryTotal","inventoryTotal","TOTAL","startDate","endDate","inventoryMonthTotal","getShareTotal","shareTotal","shareMonthTotal","getRequirementTotal","requirementTotal","requirementMonthTotal","getUnauditTotal","unauditTotal","getInventoryList","unauditInventoryList","getResponseList","responseList","responseTotal","total","DepartmentReq","getReqList","getDepartmentRequirementList","requirementList","publishReq","req","updateReq","REQUIREMENT_NAME","REQUIREMENT_DESC","LINKMAN","EMAIL","deleteReq","getReqDetail","ReqDetail","REQUIREMENT_ID","DepartmentShare","getDepartmentShareList","inventoryList","depShareList","countAll","NUMBER","countByShareLevel","countBySpatial","shareLvShareSelection","areaShareSelection","SystemUser","getUserList","users","addUserModal","sysUser","saveUser","updateUser","user","deleteUser","InventoryDetail","httpParams","inventoryID","dataId","getInventoryDetail","detail","indicatorList","indicators","examplesList","examples","Inventory","getAll","getShareDictWithInventoryNum","shareDict","getAreaDictWithInventoryNum","areaDict","getDepWithInventoryNum","departments","updateVisitCount","RequirementDetail","requirementID","requireDetail","requireResponseList","list","pushResponse","postParams","RESPONSE_CONTENT","addRequireResponse","RequirementMain","Requirement","getStatistic","statistic","getRequirementList"],"mappings":"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","file":"bundle.min.js","sourcesContent":["'use strict';\n/* Bootstrap Application */\nvar app = angular.module('app', [\n  'Config',\n  'ui.router',\n  'ui.bootstrap',\n  'isteven-multi-select',\n  'Login',\n  'Main',\n  'Dashboard',\n  'Department',\n  'Inventory',\n  'InventoryDetail',\n  'Department.Inventory',\n  'Department.Audit',\n  'Department.SystemUser',\n  'Department.Requirement',\n  'RequirementMain',\n  'RequirementDetail',\n  'DepartmentShare'\n]);\n\napp.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider', '$provide',\n  function($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider, $provide) {\n    /** URL Location Mode */\n    $locationProvider.html5Mode(false);\n    /** HTTP Interceptor */\n    $httpProvider.interceptors.push(['$q',\n      function($q) {\n        return {\n          'request': function(config) {\n            config.withCredentials = true;\n            return config;\n          },\n          'requestError': function(rejection) {\n            return response;\n          },\n          'response': function(response) {\n            return response;\n          },\n          'responseError': function(rejection) {\n            return rejection;\n          }\n        };\n      }\n    ]);\n    /** Config Router */\n    $urlRouterProvider.otherwise('/login');\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        templateUrl: 'views/common/login.html',\n        controller: 'Login.Controller.Main'\n      })\n      .state('main', {\n        url: '/main',\n        templateUrl: 'views/common/main.html',\n        controller: 'Main.Controller.Main'\n      })\n      .state('main.dashboard', {\n        url: '/dashboard',\n        templateUrl: 'views/common/dashboard.html',\n        controller: 'Dashboard.Controller.Main'\n      })\n      .state('main.inventory', {\n        url: '/inventory',\n        templateUrl: 'views/inventory/main.html',\n        controller: 'Inventory.Controller.Main'\n      })\n      .state('main.inventory.list', {\n        url: '/list',\n        templateUrl: 'views/inventory/list.html',\n        controller: 'Inventory.Controller.Main'\n      })\n      .state('main.inventory.detail', {\n        url: '/detail/:inventoryID',\n        templateUrl: 'views/inventory/detail.html',\n        controller: 'InventoryDetail.Controller.Main'\n      })\n      .state('main.requirement', {\n        url: '/requirement',\n        templateUrl: 'views/requirement/main.html',\n        controller: 'RequirementMain.Controller.Main'\n      })\n      .state('main.requirement.detail', {\n        url: '/detail/:requirementID',\n        templateUrl: 'views/requirement/detail.html',\n        controller: 'RequirementDetail.Controller.Main'\n      })\n      .state('main.department', {\n        url: '/department',\n        templateUrl: 'views/department/main.html',\n        controller: 'Department.Controller.Main'\n      })\n      .state('main.department.inventory', {\n        url: '/inventory',\n        templateUrl: 'views/department/inventory.html',\n        controller: 'Department.Inventory.Controller.Main'\n      })\n      .state('main.department.inventory.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/inventory-publish.html',\n        controller: 'Department.Inventory.Controller.publish'\n      })\n      .state('main.department.share', {\n        url: '/share',\n        templateUrl: 'views/department/share.html',\n        controller: 'DepartmentShare.Controller.Main'\n      })\n      .state('main.department.requirement', {\n        url: '/requirement',\n        templateUrl: 'views/department/requirement.html',\n        controller: 'Department.Requirement.Controller.Main'\n      })\n      .state('main.department.requirement.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/requirement-publish.html'\n      })\n      .state('main.department.requirement.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/requirement-detail.html',\n        controller: 'Department.Requirement.Controller.detail'\n      })\n      .state('main.department.audit', {\n        url: '/audit',\n        cache:'false', \n        templateUrl: 'views/department/audit.html',\n        controller: 'Department.Audit.Controller.Main'\n      })\n      .state('main.department.audit.info', {\n        url: '/info?AUDITID',\n        templateUrl: 'views/department/audit-info.html',\n        controller: 'Department.Audit.Controller.info'\n      })\n      .state('main.department.user', {\n        url: '/user',\n        templateUrl: 'views/department/user.html',\n        controller: 'Department.SystemUser.Controller.Main'\n      })\n  }\n]);\n","'use strict';\n/* Application Configration */\nvar Config = angular.module('Config', []);\n\nConfig.constant('API', {\n  path: 'http://192.168.13.224:8080/drrp/api' //测试组\n  // path:'http://localhost:5001/api' //本机测试\n  // path: 'http://172.16.1.81:8080/api' //周爽\n  // path: 'http://172.16.1.77:8080/api' //吴陶冶\n  //   path: 'http://172.16.1.78:8080/api' //米兵\n\n});\n","'use strict';\nvar Dashboard = angular.module('Dashboard', ['ui.router']);\n\n/** Dashboard Controller */\nDashboard.controller('Dashboard.Controller.Main', ['$scope', 'Dashboard.Service.Http',\n  function($scope, Http) {\n    // Datas List\n    Http.getInventory({\n      skip: 0,\n      limit: 6\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Inventories = result.data.body;\n      }\n    });\n    Http.getRequirement({\n      skip: 0,\n      limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Requirements = result.data.body;\n      }\n    });\n    // Echarts Graph\n    $scope.QInventoryOverview = Http.getInventoryOverview({\n      endTime: 0,\n      endTime: 10\n    });\n    $scope.QRequirementOverview = Http.getRequirementOverview({\n      startTime: 0,\n      endTime: 10\n    });\n    $scope.QInventoryStatistic = Http.getInventoryStatistic({\n      skip: 0,\n      limit: 10\n    });\n    // Bureaus logo grid\n    Http.getDepartments().then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Bureaus = result.data.body;\n      }\n    });\n\n  }\n])\n\n/* HTTP Factory */\nDashboard.factory('Dashboard.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getInventory(params) {\n      return $http.get(\n        path + '/inventory', {params: params}\n      )\n    };\n    function getInventoryOverview(params) {\n      return $http.get(\n        path + '/inventory/overview', {params: params}\n      )\n    };\n    function getRequirement(params) {\n      return $http.get(\n        path + '/requirement', {params: params}\n      )\n    };\n    function getRequirementOverview(params) {\n      return $http.get(\n        path + '/requirement/overview', {params: params}\n      )\n    };\n    function getInventoryStatistic(params) {\n      return $http.get(\n        path + '/inventory/statistic', {params: params}\n      )\n    };\n    function getDepartments() {\n      return $http.get(\n        path + '/dep'\n      )\n    }\n    return {\n      getInventory: getInventory,\n      getInventoryOverview: getInventoryOverview,\n      getRequirement: getRequirement,\n      getRequirementOverview: getRequirementOverview,\n      getInventoryStatistic: getInventoryStatistic,\n      getDepartments: getDepartments\n    }\n  }\n]);\n\n/** Dashboard Directive */\nDashboard.directive('wiservInventoryOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:240px;'></div>\",\n      link: function(scope, element, attr) {\n        scope.QInventoryOverview.then(function(result) {\n          if (200 == result.data.head.status) {\n            var inventoryOverview = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '清单提供部门',\n                type: 'pie',\n                selectedMode: 'single',\n                radius: [0, '30%'],\n                label: {\n                  normal: {\n                    position: 'inner'\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: inventoryOverview.INVENTORY_DEPT_NUM,\n                  name: '清单提供部门'\n                }, {\n                  value: inventoryOverview.MONTH_INVENTORY_DEPT_NUM,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '清单总数',\n                type: 'pie',\n                radius: ['40%', '55%'],\n                data: [{\n                  value: inventoryOverview.INVENTORY_NUM,\n                  name: '清单总数'\n                }, {\n                  value: inventoryOverview.INVENTORY_DEPT_NUM,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservRequirementOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:240px;'></div>\",\n      link: function(scope, element, attr) {\n        scope.QRequirementOverview.then(function(result) {\n          if (200 == result.data.head.status) {\n            var requirementOverview = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '清单提供部门',\n                type: 'pie',\n                selectedMode: 'single',\n                radius: [0, '30%'],\n                label: {\n                  normal: {\n                    position: 'inner'\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: requirementOverview.REQUIREMENT_DEPT_NUM,\n                  name: '清单提供部门'\n                }, {\n                  value: requirementOverview.MONTH_REQUIREMENT_DEPT_NUM,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '清单总数',\n                type: 'pie',\n                radius: ['40%', '55%'],\n                data: [{\n                  value: requirementOverview.REQUIREMENT_NUM,\n                  name: '清单总数'\n                }, {\n                  value: requirementOverview.REQUIREMENT_DEPT_NUM,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservStatisticChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:100%;height:240px;'></div>\",\n      link: function(scope, element, attr) {\n        scope.QInventoryStatistic.then(function(result) {\n          var DEPARTMENT = result.data.body[0];\n          var INVENTORY = result.data.body[1];\n          var REQUIREMENT = result.data.body[2];\n          var myChart = echarts.init((element.find('div'))[0]);\n          var option = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['清单', '需求']\n            },\n            xAxis: [{\n              type: 'category',\n              name: '数量',\n              data: DEPARTMENT.DEPARTMENT\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '单位',\n              min: 0,\n              max: 30,\n              interval: 30,\n              axisLabel: {\n                formatter: '{value} 个'\n              }\n            }],\n            series: [{\n              name: '清单',\n              type: 'bar',\n              data: INVENTORY.INVENTORY\n            }, {\n              name: '需求',\n              type: 'bar',\n              data: REQUIREMENT.REQUIREMENT\n            }]\n          };\n          myChart.setOption(option);\n        });\n\n      }\n    };\n  }\n]);\n","'use strict';\nvar Login = angular.module('Login', ['ui.router']);\n\n/** Main Controller */\nLogin.controller('Login.Controller.Main', ['$rootScope', '$scope', '$state', 'Login.Service.Http',\n  function($rootScope, $scope, $state, Http) {\n    $scope.Login = {};\n\n    $scope.Login.submit = function() {\n      var username = $scope.Login.username;\n      var password = $scope.Login.password;\n      Http.login({\n        USERNAME: username,\n        PASSWORD: password\n      }).then(function(result) {\n        $rootScope.User = result.data.body[0];\n        console.log(result.data.body[0]);\n        if(200 == result.data.head.status){\n          $state.go(\"main.dashboard\");\n        }\n        else{\n          $state.go(\"login\");\n        }\n      });\n    }\n  }\n\n\n])\n\n\n/* HTTP Factory */\nLogin.factory('Login.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function login(params) {\n      return $http.get(\n        path + '/login', {\n          params: params\n        }\n      )\n    };\n    return {\n      login: login\n    }\n  }\n]);\n","'use strict';\nvar Main = angular.module('Main', ['ui.router']);\n\n/** Main Controller */\nMain.controller('Main.Controller.Main', ['$scope',\n  function($scope) {\n    $scope.Tab = {};\n    $scope.Tab.switcher = function(target){\n      switch (target) {\n        case 'dashboard': $scope.Tab.Actived = {};\n          $scope.Tab.Actived.dashboard = 'active'; break;\n        case 'inventory': $scope.Tab.Actived = {};\n          $scope.Tab.Actived.inventory = 'active'; break;\n        case 'requirement': $scope.Tab.Actived = {};\n          $scope.Tab.Actived.requirement = 'active'; break;\n        case 'department': $scope.Tab.Actived = {};\n          $scope.Tab.Actived.department = 'active'; break;\n      }\n    };\n    $scope.Tab.active = 'active';\n  }\n]);\n","'use strict';\nvar Audit = angular.module('Department.Audit', ['ui.router']);\n\n/** Main Controller */\nAudit.controller('Department.Audit.Controller.Main', ['$rootScope', '$scope', '$q','Department.Audit.Service.Http',\n  function($rootScope, $scope, $q ,Http) {\n    var _httpParams = {};\n    console.log($rootScope.User);\n\n    // init\n    getAuditList(_httpParams);\n\n    Http.getAuditTotal().then(function(result) {\n      $scope.auditTotal = result.data.body[0].INVENTORY_NUM;\n    });\n\n    Http.getShareLevelFilter().then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSpatialFilter().then(function(result) {\n      $scope.areaPeriodList = result.data.body;\n    });\n\n    Http.getAuditStatusFilter().then(function(result) {\n      $scope.auditStatusList = result.data.body;\n    });\n\n    function getAuditList(_httpParams) {\n      Http.getAuditList(_httpParams).then(function(result){\n        $scope.auditList = result.data.body;\n      //  $scope.Paging.totalItems = data.head.total;\n      });\n    }\n\n    // filter by share level\n    $scope.shareLvSelection = [];\n    $scope.getAuListBySl = function(item) {\n      var idx = $scope.shareLvSelection.indexOf(item.SYS_DICT_ID);\n      if (idx > -1) {\n        $scope.shareLvSelection = [];\n      }\n      else {\n        $scope.shareLvSelection = item.SYS_DICT_ID;\n      }\n      _httpParams.SHARE_LEVEL = $scope.shareLvSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaSelection = [];\n    $scope.getAuListByAP = function(item) {\n      var idx = $scope.areaSelection.indexOf(item.SYS_DICT_ID);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaSelection.push(item.SYS_DICT_ID);\n      }\n      console.log($scope.areaSelection);\n\n      _httpParams.AREA_DATA_LEVEL = $scope.areaSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n        getAuditList(_httpParams);\n    }\n\n    // filter by audit status\n    $scope.statusSelection = [];\n    $scope.getAuListBySta = function(item) {\n      var idx = $scope.statusSelection.indexOf(item.AUDITNAME);\n      if (idx > -1) {\n        $scope.statusSelection = [];\n      }\n      else {\n        $scope.statusSelection = item.AUDITNAME;\n      }\n      _httpParams.AUDIT_STATUS = item.AUDIT_STATUS;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList(_httpParams);\n    }\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvSelection = [];\n      _httpParams.SHARE_LEVEL = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList(_httpParams);\n    }\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaSelection = [];\n      _httpParams.AREA_DATA_LEVEL = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList(_httpParams);\n    }\n\n    // get status all\n    $scope.getStatusAll = function() {\n      $scope.statusSelection = [];\n      _httpParams.AUDIT_STATUS = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList(_httpParams);\n    }\n  }\n])\n\n\nAudit.controller('Department.Audit.Controller.info', ['$rootScope' ,'$scope', '$state', '$q','Department.Audit.Service.Http', '$stateParams',\n  function($rootScope, $scope, $state, $q ,Http ,$stateParams) {\n    // login Department\n    $scope.depName = $rootScope.User.DEP_NAME;\n    var auditId = $stateParams.AUDITID;\n    Http.getAuditDetail({\n      \"AUDITID\": auditId\n    }).then(function(result) {\n      $scope.AuditDetail = result.data.body[0];\n    });\n\n    $scope.submitAudit = function() {\n      var AUDITOR = $rootScope.User.PERSON_NAME;\n      var auditInfo = _.assign($scope.AuditInfo, {\"AUDITOR\": AUDITOR}, {\"ID\": auditId});\n      console.log(auditInfo);\n      Http.updateAuditDetail(auditInfo).then(function(result) {\n        if (200 == result.data.head.status) {\n          alert('审核成功');\n          var idx = $scope.auditList.indexOf(auditId);\n          $state.go(\"main.department.audit\",{}, { reload: true });\n        }\n        else{\n          alert('审核失败');\n        }\n      });\n    }\n  }])\n\n/* HTTP */\nAudit.factory('Department.Audit.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getAuditTotal(params) {\n      return $http.get(\n        path + '/openInventory/countAll',\n        {\n          params:params\n        }\n      )\n    };\n\n    function getShareLevelFilter(params) {\n      return $http.get(\n        path + '/openInventory/countByShareLevel',\n        {\n          params:params\n        }\n      )\n    }\n\n    function getSpatialFilter(params) {\n      return $http.get(\n        path + '/openInventory/countBySpatial',\n        {\n          params:params\n        }\n      )\n    }\n\n    function getAuditStatusFilter(params) {\n      return $http.get(\n        path + '/openInventory/countByAuditStatus',{\n          params:params\n        }\n      )\n    }\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/openInventory/inventoryList', {\n          params:params\n        }\n      )\n    }\n\n    function getAuditDetail(params) {\n      return $http.get(\n        path + '/openInventory/openInventoryInfo', {\n          params:params\n        }\n      )\n    }\n\n    function updateAuditDetail(data) {\n      return $http.put(\n        path + '/openInventory/updateAuditStatus', {\n          data:data\n        }\n      )\n    }\n    return {\n      getAuditTotal: getAuditTotal,\n      getShareLevelFilter: getShareLevelFilter,\n      getSpatialFilter: getSpatialFilter,\n      getAuditStatusFilter: getAuditStatusFilter,\n      getAuditList: getAuditList,\n      getAuditDetail: getAuditDetail,\n      updateAuditDetail: updateAuditDetail\n    }\n  }\n]);\n","'use strict';\nvar DInventory = angular.module('Department.Inventory', ['ui.router']);\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.Main', ['$scope', '$q', 'Department.Inventory.Service.Http',\n  function($scope, $q, Http) {\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    // init\n    getDepartmentInvntList(_httpParams);\n\n    Http.getInventoryDepTotal().then(function(result) {\n      $scope.ivntDepTotal = result.data.body[0].INVENTORY_NUM;\n      $scope.depName = result.data.body[0].DEP_NAME;\n    });\n\n    Http.getShareLevelFilter().then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSpatialFilter().then(function(result) {\n      $scope.areaPeriodList = result.data.body;\n    });\n\n\n    function getDepartmentInvntList(_httpParams) {\n      Http.getDepartInvntList(_httpParams).then(function(result) {\n        $scope.depIvntList = result.data.body;\n        //  $scope.Paging.totalItems = data.head.total;\n      });\n    }\n\n    // filter by share level\n    $scope.shareLvMainSelection = [];\n    $scope.getIvntListBySl = function(item) {\n      var idx = $scope.shareLvMainSelection.indexOf(item.SYS_DICT_ID);\n      if (idx > -1) {\n        $scope.shareLvMainSelection = [];\n      } else {\n        $scope.shareLvMainSelection = item.SYS_DICT_ID;\n      }\n      _httpParams.SHARE_LEVEL = $scope.shareLvMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentInvntList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaMainSelection = [];\n    $scope.getIvntListByAP = function(item) {\n      var idx = $scope.areaMainSelection.indexOf(item.DICTID);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaMainSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaMainSelection.push(item.SYS_DICT_ID);\n      }\n      console.log($scope.areaMainSelection);\n\n      _httpParams.AREA_DATA_LEVEL = $scope.areaMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentInvntList(_httpParams);\n    }\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvMainSelection = [];\n      _httpParams.SHARE_LEVEL = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentInvntList(_httpParams);\n    }\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaMainSelection = [];\n      _httpParams.AREA_DATA_LEVEL = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentInvntList(_httpParams);\n    }\n\n\n  }\n])\n\nDInventory.controller('Department.Inventory.Controller.publish', ['$rootScope', '$scope', '$q', '$uibModal', 'Department.Inventory.Service.Component', 'Department.Inventory.Service.Http',\n  function($rootScope, $scope, $q, $uibModal, Component, Http) {\n    $scope.step1 = {};\n    $scope.step2 = {};\n    $scope.step3 = {};\n    $scope.step4 = {};\n    $scope.step1.show = true;\n    $scope.step2.show = false;\n    $scope.step3.show = false;\n    $scope.step4.show = false;\n    $scope.progress = 0;\n    $scope.loginUser = $rootScope.User;\n\n\n    const SHARE_FREQUENCY = 1;\n    const DATA_LEVEL = 2;\n    const SHARE_LEVEL = 3;\n    const QUOTA_TYPE = 4;\n    const DATA_SHOW_FORMAT = 6;\n    const SECRET_FLAG = 5;\n    const LEVEL_AUTH = '250375bd-02f0-11e6-a52a-5cf9dd40ad7e';\n    $scope.inventoryAttrList = [];\n    $scope.DataExamps = [];\n\n    $scope.exampTitles = [];\n\n    $scope.submitObject = {};\n\n    Date.prototype.format = function(fmt) { //author: meizz\n      var o = {\n        \"%m\": this.getMonth() + 1 + '', //月份\n        \"%d\": this.getDate() + '', //日\n        \"%H\": this.getHours() + '', //小时\n        \"%M\": this.getMinutes() + '', //分\n        \"%S\": this.getSeconds() + '', //秒\n        //\"q+\" : Math.floor((this.getMonth()+3)/3), //季度\n      };\n      // 年份  2015\n      if (/(%Y)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\"));\n\n      // 两位年份  15\n      if (/(%y)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(2));\n\n      //getTime返回的是以毫秒为单位的，转为秒\n      if (/(%s)/.test(fmt))\n      //fmt=fmt.replace(RegExp.$1, this.getTime()/1);\n        fmt = fmt.replace(RegExp.$1, (this.getTime() + '').slice(0, 10));\n\n      for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n          fmt = fmt.replace(RegExp.$1, (o[k].length == 2 ? o[k] : '0' + o[k]));\n        }\n      return fmt;\n    }\n\n    // init\n    $scope.shareFreqSelection = [];\n    $scope.dataLevelSelection = [];\n    $scope.shareFreqArrShow = [];\n    // toggle selection for a given item by name\n    $scope.toggleShareFreqSelection = function toggleShareFreqSelection(itemId, itemName) {\n      var idx = $scope.shareFreqSelection.indexOf(itemId);\n\n      // is currently selected\n      if (idx > -1) {\n        $scope.shareFreqSelection.splice(itemId, 1);\n        $scope.shareFreqArrShow.splice(itemName, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.shareFreqSelection.push(itemId);\n        $scope.shareFreqArrShow.push(itemName);\n      }\n    };\n\n    $scope.Modal = {};\n    $scope.Modal.Quota = {};\n    $scope.Modal.Quota.dataLevelSelection = [];\n\n    $scope.toggleDataLevelSelection = function toggleDataLevelSelection(item) {\n      var idx = $scope.dataLevelSelection.indexOf(item.ID);\n      var idxModal = $scope.Modal.Quota.dataLevelSelection.indexOf(item.DICT_NAME);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelSelection.push(item.ID);\n      }\n\n      if (idxModal > -1) {\n        $scope.Modal.Quota.dataLevelSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.Modal.Quota.dataLevelSelection.push(item.DICT_NAME);\n      }\n    };\n\n    Http.getSystemDictByCatagory({\n      'DICT_CATEGORY': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'DICT_CATEGORY': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'DICT_CATEGORY': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      $scope.deptListModal = result.data.body;\n    });\n\n    // show or hide department\n    $scope.depShow = false;\n    $scope.depShowModal = false;\n    $scope.showHideDeps = function(ev) {\n      if (LEVEL_AUTH == $scope.dataInfo.shareLevel) {\n        $scope.depShow = true;\n      } else {\n        $scope.depShow = false;\n      }\n      if ('授权开放' == $scope.Modal.Quota.shareLevel) {\n        $scope.depShowModal = true;\n      } else {\n        $scope.depShowModal = false;\n      }\n      console.log($scope.depShow);\n    }\n\n\n    $scope.backToStep1 = function() {\n      $scope.step1.show = true;\n      $scope.step2.show = false;\n      $scope.progress = 0;\n    }\n\n    $scope.toStep3 = function() {\n      if (!$scope.inventoryAttrList || $scope.inventoryAttrList.length == 0) {\n        alert('请先添加指标属性！');\n        return;\n      }\n      $scope.step3.show = true;\n      $scope.step2.show = false;\n      $scope.progress = 50;\n\n      $scope.DataExamps = $scope.inventoryAttrList;\n    }\n\n    $scope.backToStep2 = function() {\n      $scope.step2.show = true;\n      $scope.step3.show = false;\n      $scope.progress = 25;\n    }\n\n    $scope.toStep4 = function() {\n      if (!$scope.ExampDatas || $scope.ExampDatas.length == 0) {\n        alert('请先添加示例数据！');\n        return;\n      }\n      $scope.step4.show = true;\n      $scope.step3.show = false;\n      $scope.progress = 75;\n\n\n    }\n\n    $scope.backToStep3 = function() {\n      $scope.step3.show = true;\n      $scope.step4.show = false;\n      $scope.progress = 50;\n    }\n\n    $scope.toStep2 = function(isValid) {\n      if (isValid) {\n        $scope.step2.show = true;\n        $scope.step1.show = false;\n        $scope.progress = 25;\n\n        $scope.step1_data = {};\n        var data_info_add_configs = [];\n\n\n        var sys_dicts = _.union($scope.shareFreqSelection, $scope.dataLevelSelection);\n        _(sys_dicts).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.dataInfoId = $scope.dataInfo.dataName\n          sys_dict.sysDictId = value;\n          data_info_add_configs.push(sys_dict);\n        });\n\n        var shareDeps = [];\n        if ($scope.dataInfo.shareLevel == LEVEL_AUTH) { // 指定部门开放\n          shareDeps = _.map($scope.outputDeptList, 'ID');\n        }\n        if (shareDeps.length == 0) {\n          shareDeps = \"0\";\n        }\n\n        $scope.dataInfo.publishTime = $scope.dataInfo.publishTime.format('%Y-%m-%d');\n      //  if($scope.dataInfo.areaPeri)\n        $scope.dataInfo = _.assign($scope.dataInfo, {\n          'shareDeps': shareDeps\n        }, {\n          'depId': $rootScope.User.DEP_ID\n        });\n\n        $scope.step1_data = _.assign({\n          'dataInfo': $scope.dataInfo\n        }, {\n          'dataInfoAddConfigs': data_info_add_configs\n        });\n\n        window.console.log($scope.step1_data);\n      }\n    };\n\n    // pop add attribute modal\n    $scope.popAttrAddModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.Modal.Quota = {}; // Clean scope of modal\n      $scope.Modal.Quota.dataLevelSelection = [];\n\n      // Get system dict\n      Http.getSystemDictByCatagory({\n        'DICT_CATEGORY': QUOTA_TYPE\n      }).then(function(result) {\n        $scope.quotaTypeList = result.data.body;\n      });\n      Http.getSystemDictByCatagory({\n        'DICT_CATEGORY': DATA_SHOW_FORMAT\n      }).then(function(result) {\n        $scope.dataShowFormatList = result.data.body;\n      });\n      Http.getSystemDictByCatagory({\n        'DICT_CATEGORY': SECRET_FLAG\n      }).then(function(result) {\n        $scope.secretFlagList = result.data.body;\n      });\n\n\n      Component.popModal($scope, '添加', 'add-indicator-modal').result.then(function() {\n        var shareDeps = [];\n        if ($scope.Modal.Quota.shareLevel == LEVEL_AUTH) { // 指定部门开放\n          shareDeps = _.map($scope.outputModalDeptList, 'ID');\n        }\n        if (shareDeps.length == 0) {\n          shareDeps = \"0\";\n        }\n\n        // format areaDataLevel to string\n        var areaDataLevelStr = '';\n        _.forEach($scope.Modal.Quota.dataLevelSelection, function(value) {\n          areaDataLevelStr = areaDataLevelStr + value + \",\";\n        })\n\n        var invntModalData = _.assign({\n          \"areaDataLevel\": areaDataLevelStr\n        }, {\n          \"shareDeps\": shareDeps\n        }, {\n          \"createTime\": new Date()\n        },$scope.Modal.Quota);\n\n        $scope.inventoryAttrList.push(invntModalData);\n\n        $scope.step2_data = {};\n        $scope.dataQuota = [];\n\n\n        _.forEach($scope.inventoryAttrList, function(item, index) {\n          item.dataLevelSelection = null;\n          var step2_obj = _.assign({\n            'dataInfoId': $scope.dataInfo.dataName\n          }, item, {\n            'showOrder': index + 1\n          });\n          $scope.dataQuota.push(step2_obj);\n        });\n        $scope.step2_data.dataQuota = $scope.dataQuota;\n      });\n    }\n\n    $scope.ExampDatas = [];\n    $scope.dataCells = [];\n    $scope.step3_data = {};\n    $scope.addExampData = function() {\n      $scope.ExampModal = {}; // Clean scope of modal\n      $scope.ExampModal.ExampData = {}; // Clean scope of modal\n\n      $scope.rowDatas = [];\n\n\n      Component.popModal($scope, '添加', 'add-example-modal').result.then(function() {\n        window.console.log($scope.step2_data.dataQuota);\n        _.forEach($scope.step2_data.dataQuota, function(item, index) {\n          var dataObj = _.assign({\n            'rowKey': item.showOrder\n          }, {\n            'dataQuotaValue': item.dataValue\n          }, {\n            'dataQuotaId': item.quotaName\n          })\n          $scope.rowDatas.push(dataObj);\n          $scope.dataCells.push(dataObj);\n        })\n        $scope.ExampDatas.push($scope.rowDatas);\n\n        $scope.step3_data.dataExamples = $scope.dataCells;\n      });\n    }\n\n    // total submit\n    $scope.addFormSubmit = function() {\n      $scope.step4_data = {};\n      $scope.step4_data.dataOtherInfo =\n        _.assign({\n          'dataInfoId': $scope.dataInfo.dataName\n        }, $scope.DataOtherInfo);\n\n      $scope.submitObject = _.assign($scope.step1_data, $scope.step2_data, $scope.step3_data, $scope.step4_data);\n\n      console.log($scope.submitObject);\n      // $scope.submitObject.dataLevelSelection = null;\n      Http.saveInventory($scope.submitObject).then(function(result) {\n        console.log(result.data.head);\n        if (200 == result.data.head.status) {\n          $scope.progress = 100;\n          alert('添加成功');\n        }\n      })\n    }\n\n    // Datepicker\n    $scope.popup2 = {\n      opened: false\n    };\n    $scope.openDatePicker = function() {\n      $scope.popup2.opened = true;\n    };\n  }\n])\n\n/* HTTP */\nDInventory.factory('Department.Inventory.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function saveInventory(data) {\n      return $http.post(\n        path + '/inventory', {\n          data: data\n        }\n      )\n    };\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/dict', {\n          params: params\n        }\n      )\n    };\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/dep/'\n      )\n    }\n\n    function getInventoryDepTotal() {\n      return $http.get(\n        path + '/inventory/getDepWithInventoryNumByDep'\n      )\n    }\n\n    function getDepartInvntList(params) {\n      return $http.get(\n        path + '/inventory/inventoryListByDep', {\n          params: params\n        }\n      )\n    }\n\n    function getShareLevelFilter(params) {\n      return $http.get(\n        path + '/inventory/getShareDictWithInventoryNumByDep', {\n          params: params\n        }\n      )\n    }\n\n    function getSpatialFilter(params) {\n      return $http.get(\n        path + '/inventory/getAreaDictWithInventoryNumByDep', {\n          params: params\n        }\n      )\n    }\n    return {\n      saveInventory: saveInventory,\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getDepartmentList: getDepartmentList,\n      getDepartInvntList: getDepartInvntList,\n      getShareLevelFilter: getShareLevelFilter,\n      getSpatialFilter: getSpatialFilter,\n      getInventoryDepTotal: getInventoryDepTotal\n    }\n  }\n]);\n\n\n\n/* Component */\nDInventory.service('Department.Inventory.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        templateUrl: templateUrl + '.html',\n        scope: scope\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Department = angular.module('Department', ['ui.router']);\n\n/** Main Controller */\nDepartment.controller('Department.Controller.Main', ['$scope', '$q','Department.Service.Http',\n  function($scope, $q ,Http) {\n    var starTime = getFirstDayMonth();\n    var endTime = getNowDate();\n\n    // get current month\n    function getFirstDayMonth() {\n      var now = new Date();\n      return \"\" + now.getFullYear() + \"-\" + (now.getMonth() + 1) + '-01 00:00:00';\n    }\n    function getNowDate() {\n      var now = new Date();\n      return \"\" + now.getFullYear() + \"-\" + (now.getMonth() + 1) + \"-\" + now.getDate() + ' 23:59:59';\n    }\n\n    Http.getInventoryTotal(null).then(function(result) {\n      $scope.inventoryTotal = result.data.body[0].TOTAL;\n    });\n    Http.getInventoryTotal({\n      startDate: starTime,\n      endDate: endTime\n    }).then(function(result) {\n      $scope.inventoryMonthTotal = result.data.body[0].TOTAL;\n    });\n\n    Http.getShareTotal().then(function(result) {\n      $scope.shareTotal = result.data.body[0].TOTAL\n    });\n    Http.getShareTotal({\n      startDate: starTime,\n      endDate: endTime\n    }).then(function(result) {\n      $scope.shareMonthTotal = result.data.body[0].TOTAL\n    });\n\n    Http.getRequirementTotal().then(function(result) {\n      $scope.requirementTotal = result.data.body[0].TOTAL;\n    });\n    Http.getRequirementTotal({\n      startDate: starTime,\n      endDate: endTime\n    }).then(function(result) {\n      $scope.requirementMonthTotal = result.data.body[0].TOTAL;\n    });\n\n    Http.getUnauditTotal().then(function(result) {\n      $scope.unauditTotal = result.data.body[0].TOTAL;\n    });\n\n    Http.getInventoryList({\n      skip: 0,\n      limit: 6\n    }).then(function(result) {\n      $scope.unauditInventoryList = result.data.body;\n    })\n\n    Http.getResponseList({\n      skip: 0,\n      limit: 6\n    }).then(function(result) {\n      $scope.responseList = result.data.body;\n      $scope.responseTotal = result.data.head.total;\n    })\n  }\n])\n\n\n/* HTTP */\nDepartment.factory('Department.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getInventoryTotal(params) {\n      return $http.get(\n        path + '/inventoryTotal/department',\n        {params: params}\n      )\n    };\n\n    function getShareTotal(params) {\n      return $http.get(\n        path + '/shareTotal/department',\n        {params: params}\n      )\n    };\n\n    function getRequirementTotal(params) {\n      return $http.get(\n        path + '/requirementTotal/department',\n        {params: params}\n      )\n    }\n\n    function getUnauditTotal(){\n      return $http.get(\n        path + '/dataAuditInfoTotal/department'\n      )\n    }\n\n    function getInventoryList(params){\n      return $http.get(\n        path + '/inventory/department', {params: params}\n      )\n    }\n\n    function getResponseList(params) {\n      return $http.get(\n        path + '/requirementResponse/department', {params: params}\n      )\n    }\n    return {\n      getInventoryTotal: getInventoryTotal,\n      getShareTotal: getShareTotal,\n      getRequirementTotal: getRequirementTotal,\n      getUnauditTotal: getUnauditTotal,\n      getInventoryList: getInventoryList,\n      getResponseList: getResponseList\n    }\n  }\n]);\n","'use strict';\nvar DepartmentReq = angular.module('Department.Requirement', ['ui.router']);\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.Main', ['$rootScope', '$scope', '$stateParams', 'Department.Inventory.Service.Component', 'Department.Requirement.Service.Http',\n  function($rootScope, $scope, $stateParams, Component, Http) {\n    // init\n    getReqList();\n\n    function getReqList() {\n      Http.getDepartmentRequirementList({\n        \"skip\": 0,\n        \"limit\": 10\n      }).then(function(result) {\n        $scope.requirementList = result.data.body;\n      })\n    }\n\n    $scope.publishReq = function() {\n      $scope.Modal = {};\n      $scope.req = {};\n      Component.popModal($scope, '发布', 'add-req-modal').result.then(function() {\n        Http.publishReq($scope.req).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('发布成功');\n            getReqList();\n          } else {\n            alert('发布失败');\n          }\n        })\n      });\n    }\n\n    $scope.updateReq = function(item) {\n      $scope.Modal = {};\n      $scope.req = item;\n\n      Component.popModal($scope, '修改', 'add-req-modal').result.then(function() {\n        Http.updateReq({\n          \"ID\" : $scope.req.ID,\n          \"REQUIREMENT_NAME\" : $scope.req.REQUIREMENT_NAME,\n          \"REQUIREMENT_DESC\" : $scope.req.REQUIREMENT_DESC,\n          \"LINKMAN\" : $scope.req.LINKMAN,\n          \"EMAIL\":$scope.req.EMAIL\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getReqList();\n          } else {\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n    $scope.deleteReq = function(ID) {\n      Http.deleteReq(ID).then(function(result) {\n        if (200 == result.data.head.status) {\n          alert('删除成功');\n          getReqList();\n        } else {\n          alert('删除失败');\n        }\n      })\n    }\n\n  }\n])\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.detail', ['$scope', '$stateParams', 'Department.Requirement.Service.Http',\n  function( $scope, $stateParams, Http) {\n    console.log($stateParams.ID);\n    Http.getReqDetail({\n      \"ID\": $stateParams.ID\n    }).then(function(result) {\n      $scope.ReqDetail = result.data.body[0];\n    }).then(function(){\n      Http.getResponseList({\n        \"REQUIREMENT_ID\": $stateParams.ID\n      }).then(function(result) {\n        $scope.responseList = result.data.body;\n      })\n    })\n  }])\n\n/* HTTP Factory */\nDepartmentReq.factory('Department.Requirement.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/requirement/getRequirementListByDep', {\n          params: params\n        }\n      )\n    };\n\n    function publishReq(data) {\n      return $http.post(\n        path + '/requirement', {\n          data: data\n        }\n      )\n    }\n\n    function updateReq(data) {\n      return $http.put(\n        path + '/requirement/' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteReq(data) {\n      return $http.delete(\n        path + '/requirement/' , {\n          data:{\"ID\":data}\n        }\n      )\n    }\n\n    function getReqDetail(params) {\n      return $http.get(\n        path + '/requirement/requireDetail', {\n          params: params\n        }\n      )\n    }\n\n    function getResponseList(params) {\n      return $http.get(\n        path + '/requirement/requireResponseList', {\n          params: params\n        }\n      )\n    }\n    return {\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      publishReq: publishReq,\n      updateReq: updateReq,\n      deleteReq: deleteReq,\n      getReqDetail: getReqDetail,\n      getResponseList: getResponseList\n    }\n  }\n]);\n\n\n/* Component */\nDepartmentReq.service('Department.Requirement.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        templateUrl: templateUrl + '.html',\n        scope: scope\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar DepartmentShare = angular.module('DepartmentShare', ['ui.router']);\n\n/** InventoryDetail Controller */\nDepartmentShare.controller('DepartmentShare.Controller.Main', ['$rootScope', '$scope', '$stateParams', 'DepartmentShare.Service.Http',\n  function($rootScope, $scope, $stateParams, Http) {\n    $scope.DepartmentShare = {};\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    //init\n    getDepartmentShareList(_httpParams);\n\n    function getDepartmentShareList(_httpParams) {\n      Http.inventoryList(_httpParams).then(function(result) {\n        $scope.depShareList = result.data.body;\n        //  $scope.Paging.totalItems = data.head.total;\n      });\n    }\n\n    Http.countAll().then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.DepartmentShare.countAll = result.data.body[0].NUMBER;\n      }\n    });\n\n    Http.countByShareLevel().then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.countBySpatial().then(function(result) {\n      $scope.areaPeriodList = result.data.body;\n    });\n\n    // filter by share level\n    $scope.shareLvShareSelection = [];\n    $scope.getIvntListBySl = function(item) {\n      var idx = $scope.shareLvShareSelection.indexOf(item.SYS_DICT_ID);\n      if (idx > -1) {\n        $scope.shareLvShareSelection = [];\n      } else {\n        $scope.shareLvShareSelection = item.SYS_DICT_ID;\n      }\n      _httpParams.SHARE_LEVEL = $scope.shareLvShareSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaShareSelection = [];\n    $scope.getIvntListByAP = function(item) {\n      var idx = $scope.areaShareSelection.indexOf(item.SYS_DICT_ID);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaShareSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaShareSelection.push(item.SYS_DICT_ID);\n      }\n      console.log($scope.areaShareSelection);\n\n      _httpParams.AREA_DATA_LEVEL = $scope.areaShareSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvShareSelection = [];\n      _httpParams.SHARE_LEVEL = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaShareSelection = [];\n      _httpParams.AREA_DATA_LEVEL = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n  }\n])\n\n/* HTTP Factory */\nDepartmentShare.factory('DepartmentShare.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function countAll(params) {\n      return $http.get(\n        path + '/shareInventory/countAll', {params: params}\n      )\n    };\n    function countByShareLevel(params) {\n      return $http.get(\n        path + '/shareInventory/countByShareLevel', {params: params}\n      )\n    };\n    function countBySpatial(params) {\n      return $http.get(\n        path + '/shareInventory/countBySpatial', {params: params}\n      )\n    };\n    function inventoryList(params) {\n      return $http.get(\n        path + '/shareInventory/inventoryList', {params: params}\n      )\n    };\n    return {\n      countAll: countAll,\n      countByShareLevel: countByShareLevel,\n      countBySpatial: countBySpatial,\n      inventoryList: inventoryList\n    }\n  }\n]);\n","'use strict';\nvar SystemUser = angular.module('Department.SystemUser', ['ui.router']);\n\n/** Main Controller */\nSystemUser.controller('Department.SystemUser.Controller.Main', ['$scope', '$q', 'Department.SystemUser.Service.Http', 'Department.SystemUser.Service.Component', '$uibModal',\n  function($scope, $q, Http, Component, $uibModal) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n\n    function getUserList() {\n      Http.getUserList().then(function(result) {\n        $scope.users = result.data.body;\n      });\n    }\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n    });\n\n    // init\n    getUserList();\n\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n\n      Component.popModal($scope, '添加', 'add-user-modal').result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n            getUserList();\n          }\n          else{\n            alert('添加失败');\n          }\n        })\n      });\n\n    }\n\n    $scope.updateUser = function(user) {\n      user.DEP_NAME = null;\n      $scope.sysUser = user;\n      Component.popModal($scope, '修改', 'add-user-modal').result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getUserList();\n          }\n          else{\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n    $scope.deleteUser = function(user) {\n      console.log(user);\n      Http.deleteUser(user).then(function(result) {\n        console.log(result.data);\n        if (200 == result.data.head.status) {\n          alert('删除成功');\n          getUserList();\n        }\n        else{\n          alert('删除失败！');\n        }\n        getUserList();\n      })\n    }\n\n\n  }\n])\n\n\n/* HTTP */\nSystemUser.factory('Department.SystemUser.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getUserList() {\n      return $http.get(\n        path + '/user'\n      )\n    };\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/user', {\n          data: data\n        }\n      )\n    };\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/dep/'\n      )\n    }\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/user/' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/user', {\n            data: {\"ID\":data.ID}\n        }\n      )\n    }\n    return {\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser\n    }\n  }\n]);\n\n/* Component */\nSystemUser.service('Department.SystemUser.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        templateUrl: templateUrl + '.html',\n        scope: scope\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar InventoryDetail = angular.module('InventoryDetail', ['ui.router']);\n\n/** InventoryDetail Controller */\nInventoryDetail.controller('InventoryDetail.Controller.Main', ['$rootScope', '$scope', '$stateParams', 'InventoryDetail.Service.Http',\n  function($rootScope, $scope, $stateParams, Http) {\n    $scope.InventoryDetail = {};\n    var httpParams = {ID: $stateParams.inventoryID};\n    var _httpParams = {dataId: $stateParams.inventoryID};\n    Http.getInventoryDetail(httpParams).then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.InventoryDetail.detail = result.data.body[0];\n      }\n    });\n    Http.indicatorList(_httpParams).then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.InventoryDetail.indicators = result.data.body;\n      }\n    });\n    Http.examplesList(_httpParams).then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.InventoryDetail.examples = result.data.body;\n      }\n    });\n  }\n])\n\n/* HTTP Factory */\nInventoryDetail.factory('InventoryDetail.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getInventoryDetail(params) {\n      return $http.get(\n        path + '/inventory/getInventoryDetail', {params: params}\n      )\n    };\n    function indicatorList(params) {\n      return $http.get(\n        path + '/indicator/indicatorList', {params: params}\n      )\n    };\n    function examplesList(params) {\n      return $http.get(\n        path + '/examples/examplesList', {params: params}\n      )\n    };\n    return {\n      getInventoryDetail: getInventoryDetail,\n      indicatorList: indicatorList,\n      examplesList: examplesList\n    }\n  }\n]);\n","'use strict';\nvar Inventory = angular.module('Inventory', ['ui.router']);\n\n/** Main Controller */\nInventory.controller('Inventory.Controller.Main', ['$scope', '$state', 'Inventory.Service.Http',\n  function($scope, $state, Http) {\n    $scope.Inventory = {};\n    // Get department list\n    Http.getDepWithInventoryNum().then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.Inventory.departments = result.data.body;\n      }\n    });\n    // Init another datas\n    getAll();\n    // Switch current scope\n    $scope.Inventory.switcher = function(target){\n      var httpParams = {DEP_ID: target}\n      getAll(httpParams);\n    }\n\n    // Promise all\n    function getAll(httpParams){\n      Http.getShareDictWithInventoryNum(httpParams).then(function(result) {\n        if(200 == result.data.head.status){\n          $scope.Inventory.shareDict = result.data.body;\n        }\n      });\n      Http.getAreaDictWithInventoryNum(httpParams).then(function(result) {\n        if(200 == result.data.head.status){\n          $scope.Inventory.areaDict = result.data.body;\n        }\n      });\n      Http.getShareDictWithInventoryNum(httpParams).then(function(result) {\n        if(200 == result.data.head.status){\n          $scope.Inventory.shareDict = result.data.body;\n        }\n      });\n      Http.inventoryList(httpParams).then(function(result) {\n        if(200 == result.data.head.status){\n          $scope.Inventory.inventoryList = result.data.body;\n        }\n      });\n    };\n\n  }\n])\n\n/* HTTP Factory */\nInventory.factory('Inventory.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDepWithInventoryNum(params) {\n      return $http.get(\n        path + '/inventory/getDepWithInventoryNum'\n      )\n    };\n    function getShareDictWithInventoryNum(params) {\n      return $http.get(\n        path + '/inventory/getShareDictWithInventoryNum', {params: params}\n      )\n    };\n    function getAreaDictWithInventoryNum(params) {\n      return $http.get(\n        path + '/inventory/getAreaDictWithInventoryNum', {params: params}\n      )\n    };\n    function inventoryList(params) {\n      return $http.get(\n        path + '/inventory/inventoryList', {params: params}\n      )\n    };\n    function updateVisitCount(params) {\n      return $http.put(\n        path + '/inventory/updateVisitCount', {data: data}\n      )\n    };\n    return {\n      getDepWithInventoryNum: getDepWithInventoryNum,\n      getShareDictWithInventoryNum: getShareDictWithInventoryNum,\n      getAreaDictWithInventoryNum: getAreaDictWithInventoryNum,\n      inventoryList: inventoryList,\n      updateVisitCount: updateVisitCount\n    }\n  }\n]);\n","'use strict';\nvar RequirementDetail = angular.module('RequirementDetail', ['ui.router']);\n\n/** InventoryDetail Controller */\nRequirementDetail.controller('RequirementDetail.Controller.Main', ['$rootScope', '$scope', '$stateParams', 'RequirementDetail.Service.Http',\n  function($rootScope, $scope, $stateParams, Http) {\n    var httpParams = {ID: $stateParams.requirementID};\n    var _httpParams = {REQUIREMENT_ID: $stateParams.requirementID};\n    $scope.RequirementDetail = {};\n    Http.requireDetail(httpParams).then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.RequirementDetail.detail = result.data.body[0];\n      }\n    });\n    Http.requireResponseList(_httpParams).then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.RequirementDetail.list = result.data.body;\n      }\n    });\n\n    $scope.RequirementDetail.pushResponse = function(){\n      if($scope.RequirementDetail.response){\n        var postParams = {REQUIREMENT_ID: $stateParams.requirementID, RESPONSE_CONTENT: $scope.RequirementDetail.response};\n        Http.addRequireResponse(postParams).then(function(result) {\n          if(200 == result.data.head.status){\n            Http.requireResponseList({REQUIREMENT_ID: $stateParams.requirementID}).then(function(result) {\n              if(200 == result.data.head.status){\n                $scope.RequirementDetail.list = result.data.body;\n              }\n            });\n          }\n        });\n      }\n      else{\n        alert('请输入回复内容！');\n      }\n    }\n  }\n])\n\n/* HTTP Factory */\nRequirementDetail.factory('RequirementDetail.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function requireDetail(params) {\n      return $http.get(\n        path + '/requirement/requireDetail', {params: params}\n      )\n    };\n    function requireResponseList(params) {\n      return $http.get(\n        path + '/requirement/requireResponseList', {params: params}\n      )\n    };\n    function addRequireResponse(data) {\n      return $http.post(\n        path + '/requirement/addRequireResponse', {data: data}\n      )\n    };\n    return {\n      requireDetail: requireDetail,\n      requireResponseList: requireResponseList,\n      addRequireResponse: addRequireResponse\n    }\n  }\n]);\n","'use strict';\nvar RequirementMain = angular.module('RequirementMain', ['ui.router']);\n\n/** InventoryMain Controller */\nRequirementMain.controller('RequirementMain.Controller.Main', ['$scope', '$stateParams', 'RequirementMain.Service.Http',\n  function($scope, $stateParams, Http) {\n    var httpParams = {};\n    $scope.Requirement = {};\n    Http.getStatistic(httpParams).then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.Requirement.statistic = result.data.body[0];\n      }\n    });\n    Http.getRequirementList(httpParams).then(function(result) {\n      if(200 == result.data.head.status){\n        $scope.Requirement.list = result.data.body;\n      }\n    });\n  }\n]);\n\n/* HTTP Factory */\nRequirementMain.factory('RequirementMain.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getStatistic(params) {\n      return $http.get(\n        path + '/requirement/statistic', {params: params}\n      )\n    };\n    function getRequirementList(params) {\n      return $http.get(\n        path + '/requirement/requirementList', {params: params}\n      )\n    };\n    return {\n      getStatistic: getStatistic,\n      getRequirementList: getRequirementList\n    }\n  }\n]);\n"],"sourceRoot":"/source/"}