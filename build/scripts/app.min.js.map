{"version":3,"sources":["app.js","config.js","admin/department.js","admin/main.js","admin/user.js","common/dashboard.js","common/login.js","common/main.js","data-quota/detail.js","data-quota/list.js","data-quota/main.js","department/audit.js","department/inventory.js","department/main.js","department/requirement.js","department/share.js","department/user.js"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","$httpProvider","$provide","interceptors","push","$q","request","withCredentials","requestError","rejection","response","when","result","data","head","status","sessionStorage","message","window","location","href","responseError","otherwise","state","url","templateUrl","controller","cache","reload","params","item","run","$rootScope","$on","event","toState","toParams","fromState","fromParams","name","token","Config","constant","path","AdminDepartment","$scope","$stateParams","Http","Component","$uibModal","$state","getDepartmentList","_httpParams","then","AdminDepartments","body","getDepTotal","depTotal","number","Paging","totalItems","Modal","previousDepNames","areaNames","maxSize","itemsPerPage","limit","skip","pageChanged","currentPage","AllDepartments","getSysDict","dict_category","types","placeholder","dep_sn","order_by","dep_name","dep_short_name","dep_en_name","contacts","contact_phone","addDepartmentModal","department","parent_id","area_code","dep_type","promise","popModal","opened","TypeArea","index","_","findIndex","o","id","department1","validDepName","depName","deps","i","length","validPhone","reg","test","saveDepartment","alert","updateDepartment","AdminDep","remove","dep","deleteDepartment","flag","confirm","go","searchDepartment","sysdepname","total","factory","$http","API","get","post","put","service","popAlert","scope","info","Alerts","type","timeout","CloseAlert","splice","modalInstance","open","animation","backdrop","size","isValid","close","cancel","dismiss","Admin","$cookies","User","JSON","parse","titleName","AdminUser","getUserList","users","getUserTotal","dep_id","LoginUser","tatol","UserTotal","deptList","password","password1","personName","organization","organization_code","phone","email","remark","addUserModal","sysUser","prom","validUser","user","username","getUserOrganizationCode","validPword","validEmail","invalid","saveUser","updateUser","deleteUser","Password","password_1","password_2","password_3","password_pre","p2","validPword1","validatePassword","UpdatePassword","searchUser","sysusername","Dashboard","getDepartments","Bureaus","DataquotaSummary","getDataquotaSummary","DataRequirementSummary","getDataRequirementSummary","SummaryDataQuota","SummaryRequirement","getDataQuotaNew","NewIndicators","getDataRequirementNew","Requirements","select","param","departmentID","resource_dep_id","getDataQuota","followDepIndicators","results","getUserDep","followDeps","followDepId","directive","restrict","template","link","element","attr","summary","myChart","echarts","init","find","option","tooltip","trigger","formatter","series","radius","label","normal","position","textStyle","color","labelLine","show","value","dep_resource","month_increment_dpet_resource","selected","total_resource","month_increment_resource","setOption","department_number","department_number_inc","requiement_number","requiement_number_inc","QInventoryStatistic","DEPARTMENT","INVENTORY","REQUIREMENT","legend","xAxis","yAxis","min","max","interval","axisLabel","Login","alerts","msg","closeAlert","removeItem","submit","valid","loginSubmitted","login","loginUser","stringify","console","log","sessionToken","loginError","Main","DataQuotaDetail","getDataQuotaDetailByDepID","getDataQuotaExampleByDepID","resource_id","DataQuotaExample","DataQuotaList","StateParams","getDataQuotaList","DataQuotas","DataQuotasTotal","count","getDataQuotaListByFilter","httpParams","currentDepID","initPaging","assign","currentDepName","currentDep","resourceFormatActiveAll","ShareLevelActiveAll","openToSocietyActiveAll","ShareFrequencyActiveAll","DataLevelActiveAll","isScretActiveAll","Retrieval","searchTarget","resource_name","TargetDataQuotaName","DataQuotaApplyInfo","data_quota_id","getDataQuotaApplyInfo","info_resource_id","SHARE_FREQUENCY","DATA_LEVEL","SHARE_LEVEL","RESOURCE_FORMAT","SOCIAL_OPEN_FLAG","SECRET_FLAG","getSystemDictByCatagory","resourceFormats","openToSocietys","isScrets","ShareLevels","ShareFrequencys","DataLevels","filterParams","resourceFormatFilter","resourceFormatActive","re_format","ShareLevelFilter","ShareLevelActive","share_level","openToSocietyFilter","openToSocietyActive","social_open_flag","update_period","ShareFrequencyActive","ShareFrequencyFilter","area_level","DataLevelActive","DataLevelFilter","isScretFilter","isScretActive","issecret","DataQuota","scrollTo","treeOptions","nodeChildren","dirSelectable","injectClasses","ul","li","liSelected","iExpanded","iCollapsed","iLeaf","labelSelected","menu","list","Audit","getAuditList","auditPromise","auditList","InfoResource","searchInfoResourceByName","resource_name_filter","TabItemShow","TabRequireShow","AuditInfo","audit_opinion","InfoResourceDetail","InfoItemShow","getInfoItemList","InfoItems","submitAudit","audit_status","audit_id","updateAuditDetail","auditError","getInfoResourceDetail","getQuotaRequirement","DInventory","getDeptInfoResourceList","getDepartInfoResList","infoResourceList","DepartInfoResource","secretFlagList","shareFrequencyList","shareLevelList","resourceFormatList","dataLevelList","socialOpenList","getResFormatAll","resFormatMainSelection","getShareLevelAll","shareLvMainSelection","getSocialOpenAll","socialOpenMainSelection","getShareFreqAll","shareFreqSelection","getSecretFlagAll","secretFlagMainSelection","getInfoResourceByResFormat","idx","indexOf","getInfoResourceListBySF","getInfoResourceListBySl","getInfoResourceListBySO","dict_code","getInfoResourceListBySecFlag","getSpatialAll","areaMainSelection","getInfoResourceListByAP","searchDeptInfoResourceByName","deleteInfoResource","resourceId","deleteConfirm","resourceid","RESOURCE_CATEGORY","SHARE_TYPE","SHARE_METHOD","ITEM_TYPE","LEVEL_AUTH","LEVEL_ALL_OPEN","RESOURCE_FORMAT_DATA","RESOURCE_FORMAT_OTHER","SHARE_METHOD_OTHER","DEP_ID","DEP_NAME","ORG_NAME","ORG_CODE","alias","rel_category","secret_flag","meter_unit","calculate_method","resource_format_other","share_method_other","social_open_limit","linkman","ResourceItemList","ResourceItemConfigList","resNameExist","checkResName","res","isexists","parent","itemNameExist","checkItemName","ResourceItem","item_name","resourceCategoryList","shareTypeList","shareMethodList","itemTypeList","addInfoResource","submitted","InfoResourceAddObj","InfoResource_RelationConfig","InfoResourceApplyInfo","resItemAddBtn","dataLevelSelection","forEach","sys_dict","InfoResourceId","sys_dict_id","obj_type","shareDeps","map","outputDeptList","share_dep","apply_dep","item_ord","InfoItem_RelationConfig","InfoItem","saveInfoResource","resItemUpdateBtn","getResourceAreaLevel","getResourceUpdatePeriod","getResourceShareDeps","authDepts","depShow","allItem","authItem","ticked","resource_format","updateInfoResource","editItems","itemConfig","InfoItemId","shareFreqDictName","dict_name","update_period_name","ResItemListShow","addResourceItem","shareFreqEmpty","itemAdded","shareFreqItemSelection","shareFreqItemObjSelection","item_type","$watch","n","item_type_name","secret_flag_name","updateItem","itemUpdated","secretFlag","itemType","copy","deleteItem","deleteFlag","showHideDeps","ev","socialOpenFlag","shareMethodOtherShow","showHideShareMethodOther","share_method","resFormatOtherShow","showHideResAddBtn","toggleDataLevelSelection","toggleShareFreqSelection","toggleShareFreqItemSelection","updateInfoItem","getItemUpdatePeriod","$parse","attrs","model","fileModel","modelSetter","parentIvntObj","bind","rgx","fileSuffix","files","ext","substring","lastIndexOf","fileNameError","$apply","Department","$sce","toFollowDep","depSelect","followDeptList","parentObj","outputAllDeptList","followDep","follow_dep_id","followDepts","userdep","mainAuditPromise","toAuditList","auditTotal","getDeptRequirementConfirmList","_httpConfirmParams","response_dep_id","mainReqPromise","getDepartmentRequirementList","requireToConfirmList","reqTotal","getDepDataQuotaTotal","Count","auditMore","reqMore","getFollowDepList","uniq","getDepartmentFollowList","deptAllList","icon","outItem","$broadcast","openFn","DepartmentReq","getDeptRequirementList","reqPromise","requirementList","DeptRequirement","toggleDataLevelReqSelection","dataLevelReqSelection","publishReq","DepRequirment","_httpPublishParams","dataRelationConfig","reqParent","req_sys_dict","datarequiementId","requiement_name","res_dep_id","dataRequiement","publishRequirement","searchDeptReqByName","req_name_filter","deleteReq","deleteRequirement","requiement_id","updateReq","getReqUpdatePeriod","getReqAreaLevel","updateRequirementInfo","reqConfirmPromise","requirementConfirmList","DeptRequirementConfirm","searchDeptReqConfirmByName","depInfoResourceList","toConfirm","ReqDetail","ReqResponse","errorMsg","dataQuotaIdNull","popModalConfirm","updateRequirement","saveReqResponse","saveResult","ID","getReqDetail","getResponseList","modalInstanceConfirm","error","DepartmentShare","getDepartmentShareList","sharePromise","shareInfoResourceList","depShareList","getQuotaDetail","followDepartment","cancelFollowDepartment","SystemUser","DepUserTotal","fig","getUser"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n/* Bootstrap Application */\nvar app = angular.module('app', [\n  'Config',\n  'ui.router',\n  'ui.bootstrap',\n  'treeControl',\n  'isteven-multi-select',\n  'Login',\n  'Main',\n  'Dashboard',\n  'Admin',\n  'Admin.User',\n  'Admin.Department',\n  'Department',\n  'DataQuota',\n  'DataQuotaList',\n  'DataQuotaDetail',\n  'Department.Inventory',\n  'Department.Audit',\n  'Department.Requirement',\n  'DepartmentShare'\n]);\n\napp.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$provide',\n  function($stateProvider, $urlRouterProvider, $httpProvider, $provide) {\n    /** HTTP Interceptor */\n    $httpProvider.interceptors.push(['$q',\n      function($q) {\n        return {\n          'request': function(config) {\n            config.withCredentials = true;\n            return config;\n          },\n          'requestError': function(rejection) {\n            return rejection;\n          },\n          'response': function(response) {\n            $q.when(response, function(result){\n              if( response.data && typeof response.data==='object'){\n                if(result.data.head.status===300){\n                  sessionStorage.message = '登陆超时，请重新登陆！';\n                  window.location.href='/';\n                };\n              };\n            });\n            return response;\n          },\n          'responseError': function(rejection) {\n            return rejection;\n          }\n        };\n      }\n    ]);\n    /** Config Router */\n    $urlRouterProvider.otherwise('/login');\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        templateUrl: 'views/common/login.html',\n        controller: 'Login.Controller.Main'\n      })\n      .state('main', {\n        url: '/main',\n        templateUrl: 'views/common/main.html',\n        controller: 'Main.Controller.Main'\n      })\n      .state('main.dashboard', {\n        url: '/dashboard',\n        templateUrl: 'views/common/dashboard.html',\n        controller: 'Dashboard.Controller.Main'\n      })\n      .state('main.admin', {\n        url: '/admin',\n        templateUrl: 'views/admin/main.html',\n        controller: 'Admin.Controller.Main'\n      })\n      .state('main.admin.department', {\n        url: '/dashboard',\n        templateUrl: 'views/admin/department.html',\n        controller: 'Admin.Department.Controller.Main'\n      })\n      .state('main.admin.user', {\n        url: '/user',\n        templateUrl: 'views/admin/user.html',\n        controller: 'Admin.User.Controller.Main'\n      })\n      .state('main.data-quota', {\n        url: '/data-quota',\n        templateUrl: 'views/data-quota/main.html',\n        controller: 'DataQuota.Controller.Main'\n      })\n      .state('main.data-quota.list', {\n        url: '/list/:resource_dep_id/:dep_name',\n        templateUrl: 'views/data-quota/list.html',\n        controller: 'DataQuotaList.Controller.Main'\n      })\n      .state('main.data-quota.detail', {\n        url: '/detail/:resource_id',\n        templateUrl: 'views/data-quota/detail.html',\n        controller: 'DataQuotaDetail.Controller.Main'\n      })\n      .state('main.department', {\n        url: '/department',\n        templateUrl: 'views/department/main.html'\n      })\n      .state('main.department.summary', {\n        url: '/summary',\n        cache:'false',\n        reload: true,\n        templateUrl: 'views/department/summary.html',\n        controller: 'Department.Controller.Main'\n      })\n      .state('main.department.inventory', {\n        url: '/inventory',\n        cache:'false',\n        templateUrl: 'views/department/inventory.html',\n        controller: 'Department.Inventory.Controller.Main'\n      })\n      .state('main.department.inventory.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/inventory-publish.html',\n        controller: 'Department.Inventory.Controller.publish'\n      })\n      .state('main.department.inventory.update', {\n        url: '/update/{item:json}',\n        params:{\n          item:null\n        },\n        templateUrl: 'views/department/inventory-update.html',\n        controller: 'Department.Inventory.Controller.publish'\n      })\n      .state('main.department.detail', {\n        url: '/detail/{item:json}',\n        params:{\n          item:null\n        },\n        cache:'false',\n        templateUrl: 'views/department/inventory-detail.html',\n        controller: 'Department.Inventory.Controller.detail'\n      })\n      .state('main.department.share', {\n        url: '/share',\n        templateUrl: 'views/department/share.html',\n        controller: 'DepartmentShare.Controller.Main'\n      })\n      .state('main.department.share.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/share-detail.html',\n        controller: 'DepartmentShare.Controller.detail'\n      })\n      .state('main.department.requirementConfirm', {\n        url: '/requirement-confirm',\n        templateUrl: 'views/department/requirement-confirm.html',\n        controller: 'Department.Requirement.Controller.confirm'\n      })\n      .state('main.department.requirement', {\n        url: '/requirement',\n        templateUrl: 'views/department/requirement.html',\n        controller: 'Department.Requirement.Controller.Main'\n      })\n      .state('main.department.requirement.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/requirement-publish.html'\n      })\n      .state('main.department.requirement.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/requirement-detail.html',\n        controller: 'Department.Requirement.Controller.detail'\n      })\n      .state('main.department.audit', {\n        url: '/audit',\n        cache:'false',\n        templateUrl: 'views/department/audit.html',\n        controller: 'Department.Audit.Controller.Main'\n      })\n      .state('main.department.audit.info', {\n        url: '/info/{item:json}',\n        params:{\n          item:null\n        },\n        templateUrl: 'views/department/audit-info.html',\n        controller: 'Department.Audit.Controller.info'\n      })\n\n  }\n]);\n\napp.run(['$rootScope', function($rootScope){\n  $rootScope.$on('$stateChangeStart',\n    function(event, toState, toParams, fromState, fromParams){\n      if(toState.name!=='login'){\n        if(!sessionStorage.token){\n          window.location.href='/';\n        };\n      };\n    });\n}]);\n","'use strict';\n/* Application Configration */\nvar Config = angular.module('Config', []);\n\nConfig.constant('API', {\n  // path: 'http://localhost:8080/drrp/api' //发布\n   path: 'http://172.16.1.78:8080/api' //测试\n  //path: 'http://192.168.9.43:8080/api' //老版测试\n  // path: 'http://localhost:5001/api' //本机\n});\n","'use strict';\nvar AdminDepartment = angular.module('Admin.Department', ['ui.router']);\n\n/** DepartmentReq Controller */\nAdminDepartment.controller('Admin.Department.Controller.Main', ['$rootScope', '$scope', '$stateParams','AdminDepartment.Service.Http', 'AdminDepartment.Service.Component', '$uibModal', '$state',\n  function($rootScope, $scope, $stateParams, Http, Component, $uibModal, $state) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.previousDepNames = [];\n    $scope.areaNames = [];\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentList(_httpParams);\n    }\n    //pagination\n    function getDepartmentList(_httpParams) {\n      Http.getDepartmentList(_httpParams).then(function(result) {\n        $scope.AdminDepartments = result.data.body;\n      });\n    }\n\n    // init\n    getDepartmentList(_httpParams);\n    function getDepTotal(){\n      Http.getDepTotal({\n      }).then(function(result) {\n        $scope.depTotal = result.data.body[0].number;\n        $scope.Paging.totalItems = $scope.depTotal;\n      });\n    }\n    getDepTotal();\n    Http.getDepartmentList().then(function(result) {\n      $scope.AllDepartments = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"7\"\n    }).then(function(result) {\n      $scope.types = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"9\"\n    }).then(function(result) {\n      $scope.areaNames = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.dep_sn = \"必填\";\n    $scope.placeholder.order_by = \"必填\";\n    $scope.placeholder.dep_name = \"必填\";\n    $scope.placeholder.dep_short_name = \"必填\";\n    $scope.placeholder.dep_en_name = \"必填\";\n    $scope.placeholder.contacts = \"必填\";\n    $scope.placeholder.contact_phone = \"必填\";\n\n    // add Department\n    $scope.addDepartmentModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.department = {}; // Clean scope of modal\n      $scope.department.dep_en_name=\"anquanting.png\";\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      var promise = Component.popModal($scope, '添加', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n      });\n      promise.result.then(function() {\n        Http.saveDepartment($scope.department).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('添加失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getDepartmentList(_httpParams);\n          getDepTotal();\n        })\n      });\n    }\n    $scope.updateDepartment = function(AdminDep) {\n      $scope.department = AdminDep;\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      $scope.department.dep_en_name=\"anquanting.png\";\n      _.remove($scope.AllDepartments, function(dep) {\n        return (dep.dep_name == AdminDep.dep_name);\n     });\n      var promise = Component.popModal($scope, '修改', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n\n      });\n      promise.result.then(function() {\n        Http.updateDepartment($scope.department).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getDepartmentList(_httpParams);\n        })\n    });\n    }\n\n    $scope.deleteDepartment = function(AdminDep) {\n      var flag = confirm(\"确定要删除吗？\");\n      if (flag) {\n        Http.deleteDepartment(AdminDep).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n          }\n          else{\n            alert('删除失败！');\n          }\n          $state.go(\"main.admin.department\", {}, {\n            reload: true\n          });\n        })\n      }\n    }\n\n    //search department\n    $scope.searchDepartment = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.sysdepname = $scope.dep_name;\n      if($scope.dep_name==null){\n        getDepTotal();\n        getDepartmentList(_httpParams);\n      }else{\n        Http.getDepartmentList(_httpParams).then(function(result) {\n          if(result.data.head.total >=1){\n            $scope.AdminDepartments = result.data.body;\n            $scope.depTotal = result.data.head.total;\n            $scope.Paging.totalItems =  $scope.depTotal;\n          }else {\n            alert(\"系统没有查到'\"+$scope.dep_name+\"'这个部门，请重新输入\");\n            $scope.dep_name = \"\";\n            $state.go(\"main.admin.department\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n\n\n/* HTTP */\nAdminDepartment.factory('AdminDepartment.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params:params\n        }\n      )\n    };\n\n    function getDepTotal() {\n      return $http.get(\n        path + '/sys_dep/count'\n      )\n    };\n    function saveDepartment(data) {\n      return $http.post(\n        path + '/sys_dep', {\n          data: data\n        }\n      )\n    };\n    function getSysDict(params){\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    }\n    function updateDepartment(data) {\n      return $http.put(\n        path + '/sys_dep' , {\n          data: data\n        }\n      )\n    }\n    function deleteDepartment(data) {\n      return $http.delete(\n        path + '/sys_dep', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n\n    return {\n      getDepartmentList: getDepartmentList,\n      getDepTotal: getDepTotal,\n      saveDepartment: saveDepartment,\n      getSysDict: getSysDict,\n      updateDepartment: updateDepartment,\n      deleteDepartment: deleteDepartment\n    }\n  }\n]);\n\n/* Component */\nAdminDepartment.service('AdminDepartment.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.department\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Admin = angular.module('Admin', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdmin.controller('Admin.Controller.Main', ['$cookies', '$scope', '$stateParams',\n  function($cookies, $scope, $stateParams) {\n       var User = JSON.parse($cookies.get('User'));\n       if(User.id === \"e147f177-1e83-11e6-ac02-507b9d1b58bb\"){\n         $scope.titleName =\"用户/部门管理\";\n       }else{\n         $scope.titleName = \"用户管理\";\n       }\n  }\n])\n","'use strict';\nvar AdminUser = angular.module('Admin.User', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdminUser.controller('Admin.User.Controller.Main', ['$cookies', '$scope', '$q', '$stateParams','AdminUser.Service.Http', 'AdminUser.Service.Component','$uibModal','$state',\n  function($cookies, $scope, $q, $stateParams, Http, Component, $uibModal, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_id);\n    var dep_name= ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_name);\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit =10;\n    _httpParams.skip = 0;\n    _httpParams.dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : dep_id);\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getUserList(_httpParams);\n    }\n\n\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n    function getUserList(_httpParams) {\n      Http.getUserList(_httpParams).then(function(result) {\n        $scope.users = result.data.body;\n      });\n    }\n    function getUserTotal(){\n      Http.getUserTotal({\n        \"dep_id\" : dep_id\n      }).then(function(result) {\n        if (LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') {\n          var tatol =  result.data.body[0].number - 1 ;\n          $scope.UserTotal = tatol;\n        }else {\n          $scope.UserTotal = result.data.body[0].number;\n        }\n        $scope.Paging.totalItems = $scope.UserTotal;\n      });\n    }\n    // init\n    getUserTotal();\n    getUserList(_httpParams);\n\n    //department\n    Http.getDepartmentList({\n      'dep_name': dep_name\n    }).then(function(result) {\n      $scope.deptList = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.name = \"必填\";\n    $scope.placeholder.password = \"必填\";\n    $scope.placeholder.password1 = \"必填\";\n    $scope.placeholder.personName = \"必填\";\n    $scope.placeholder.organization = \"必填\";\n    $scope.placeholder.organization_code = \"必填，根据机构名称自动生成\";\n    $scope.placeholder.phone = \"必填\";\n    $scope.placeholder.email = \"必填\";\n    $scope.placeholder.remark = \"\";\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n      $scope.sysUser.remark = \"\";\n      var prom = Component.popModal($scope, '添加', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.organization = function(){\n          $scope.placeholder.organization = \"必填\";\n          $scope.placeholder.organization_code = \"必填\";\n          $scope.organization = false;\n          var organization = $scope.sysUser.organization ;\n          if(organization){\n            Http.getUserOrganizationCode({\n              \"organization\":organization\n            }).then(function (result){\n              if(200 == result.data.head.status){\n                $scope.sysUser.organization_code = result.data.body[0].organization_code ;\n              }else{\n                $scope.placeholder.organization = \"机构名称不对\";\n                $scope.organization = true;\n                $scope.sysUser.organization = \"\";\n                $scope.placeholder.organization_code = \"没有相对应的机构编码\";\n              }\n            });\n          }\n        }\n        $scope.Modal.validPword = function (){\n          $scope.placeholder.password1 =\"必填\";\n          $scope.validPword = false;\n          if($scope.sysUser.password!=$scope.sysUser.password1&&$scope.sysUser.password1!=null){\n            $scope.validPword = true;\n            $scope.placeholder.password1 =\"两次输入的密码不同,请重新输入\";\n            $scope.sysUser.password1 =\"\";\n          }\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&($scope.sysUser.phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('保存数据库失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n\n\n\n    }\n    $scope.updateUser = function(user) {\n      $scope.sysUser = user;\n      $scope.sysUser.password1 =0;\n      $scope.sysUser.password = 0;\n      $scope.sysUser.remark = ((user.remark) ?user.remark : \"\");\n      var prom = Component.popModal($scope, '修改', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.organization = function(){\n          $scope.placeholder.organization = \"必填\";\n          $scope.placeholder.organization_code = \"必填\";\n          $scope.organization = false;\n          var organization = $scope.sysUser.organization ;\n          if(organization){\n            Http.getUserOrganizationCode({\n              \"organization\":organization\n            }).then(function (result){\n              if(200 == result.data.head.status){\n                $scope.sysUser.organization_code = result.data.body[0].organization_code ;\n              }else{\n                $scope.placeholder.organization = \"机构名称不对\";\n                $scope.organization = true;\n                $scope.sysUser.organization = \"\";\n                $scope.placeholder.organization_code = \"没有相对应的机构编码\";\n              }\n            });\n          }\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&$scope.sysUser.phone!=null){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getUserList(_httpParams);\n        })\n      });\n    }\n    $scope.deleteUser = function(user) {\n      if(user.id!=LoginUser.id){\n        var flag = confirm(\"确定要删除吗？\");\n        if (flag) {\n          Http.deleteUser(user).then(function(result) {\n            _httpParams.limit = 10;\n            _httpParams.skip = 0;\n            $scope.Paging.currentPage = 0 ;\n            if (200 == result.data.head.status) {\n              alert('删除成功');\n              getUserTotal();\n              getUserList(_httpParams);\n            }\n            else{\n              alert('删除失败！');\n            }\n            $state.go(\"main.admin.user\", {}, {\n              reload: true\n            });\n          })\n        }\n      }else{\n        alert(\"当前登录用户不能删除！\");\n      }\n    }\n\n    $scope.Password = function(user) {\n      $scope.placeholder.password_1 = \"必填\";\n      $scope.placeholder.password_2 = \"必填\";\n      $scope.placeholder.password_3 = \"必填\";\n      var id = 0;\n      id = user.id;\n      $scope.Modal.password_pre = \"\";\n      $scope.Modal.p2 = \"\";\n      $scope.Modal.password = \"\";\n      $scope.password_1 = false;\n      $scope.password_2 = false;\n      $scope.password_3 = false;\n      var prom = Component.popModal($scope, '密码', 'update-password-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validPword1 = function (){\n          $scope.password_1 = false;\n          $scope.placeholder.password_1 =\"必填\";\n          Http.validatePassword({\n            \"id\":id,\n            \"password\":$scope.Modal.password_pre\n          }).then(function(result) {\n            if(result.data.head.total == 0) {\n              $scope.password_1 = true;\n              $scope.placeholder.password_1 =\"原密码不对,请重新输入\";\n              $scope.Modal.password_pre = \"\";\n            }\n          });\n        }\n        $scope.Modal.validPword = function (){\n             $scope.password_3 = false;\n             $scope.placeholder.password_3 =\"必填\";\n             if($scope.Modal.p2!=$scope.Modal.password){\n               $scope.password_3 = true;\n               $scope.placeholder.password_3 = \"两次输入的密码不同,请重新输入\";\n               $scope.Modal.password =\"\";\n             }\n        }\n      });\n\n      prom.result.then(function() {\n        Http.UpdatePassword({\n          \"id\": id,\n          \"password\":$scope.Modal.password\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n    }\n\n    //search user\n    $scope.searchUser = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.dep_id = dep_id;\n      _httpParams.sysusername = $scope.username;\n      if($scope.username==null){\n        getUserTotal();\n        getUserList(_httpParams);\n      }else{\n        Http.getUserList(_httpParams).then(function(result) {\n          if(result.data.head.total >= 1){\n            $scope.users = result.data.body;\n            $scope.UserTotal = result.data.head.total;\n            $scope.Paging.totalItems = $scope.UserTotal;\n          }else{\n            alert(\"系统没有查到'\"+$scope.username+\"'这个用户名，请重新输入\");\n            $state.go(\"main.admin.user\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n/* HTTP */\nAdminUser.factory('AdminUser.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getUserOrganizationCode(params) {\n      return $http.get(\n        path + '/sys_user/organization_code',{\n           params: params\n        }\n      )\n    };\n    function getUserList(params) {\n      return $http.get(\n        path + '/sys_user',{\n           params: params\n        }\n      )\n    };\n    function getUserTotal(params) {\n      return $http.get(\n        path + '/sys_user/count',{\n           params: params\n        }\n      )\n    };\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params: params\n        }\n      )\n    }\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/sys_user', {\n          data: data\n        }\n      )\n    };\n\n\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/sys_user' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/sys_user', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n    function validatePassword(params){\n      return $http.get(\n        path + '/sys_user/password', {\n            params: params\n        }\n      )\n    }\n    function UpdatePassword(data) {\n      return $http.put(\n        path + '/sys_user/password' , {\n          data: data\n        }\n      )\n    }\n    return {\n      getUserOrganizationCode: getUserOrganizationCode,\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUserTotal: getUserTotal,\n      validatePassword: validatePassword,\n      UpdatePassword: UpdatePassword\n    }\n  }\n]);\n\n/* Component */\nAdminUser.service('AdminUser.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.user\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Dashboard = angular.module('Dashboard', ['ui.router','ui.bootstrap']);\n\n/** Dashboard Controller */\nDashboard.controller('Dashboard.Controller.Main', ['$scope', 'Dashboard.Service.Http',\n  function($scope, Http) {\n    <!-- Bureaus logo grid -->\n    Http.getDepartments().then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Bureaus = result.data.body;\n      }\n    });\n    <!-- #Bureaus logo grid -->\n\n    <!-- ECharts -->\n    $scope.DataquotaSummary = Http.getDataquotaSummary();\n    $scope.DataRequirementSummary = Http.getDataRequirementSummary();\n    Http.getDataquotaSummary().then(function(result){\n      $scope.SummaryDataQuota = result.data.body[0];\n    })\n    Http.getDataRequirementSummary().then(function(result){\n      $scope.SummaryRequirement = result.data.body[0];\n    })\n    <!-- #ECharts -->\n\n    <!-- DataQuota & Requirement Summary -->\n    Http.getDataQuotaNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.NewIndicators = result.data.body;\n      }\n    });\n    Http.getDataRequirementNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Requirements = result.data.body;\n      }\n    });\n    <!-- #DataQuota & Requirement Summary -->\n\n    <!-- DataQuota for Concerned Departments -->\n    // Handle Selected Department\n    $scope.select = function(param){\n      $scope.departmentID = {resource_dep_id: param};\n      Http.getDataQuota({\n        skip: 0, limit: 5,  dep_name: param\n      }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n      });\n    }\n    // Generoted Department\n    Http.getUserDep().then(function(result) {\n        if (200 === result.data.head.status && result.data.body.length !== 0) {\n          $scope.followDeps = result.data.body;\n          return result.data.body[0].id;\n        }else{\n          return 0;\n        }\n      }).then(function(followDepId){\n        Http.getDataQuota({\n          skip: 0,\n          limit: 5,\n          dep_name: followDepId\n        }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n        });\n     });\n     <!-- #DataQuota for Concerned Departments -->\n\n }\n])\n\n/* HTTP Factory */\nDashboard.factory('Dashboard.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaNew(params) {\n      return $http.get(\n        path + '/data_resource/new', {params: params}\n      )\n    };\n    function getDataRequirementNew(params) {\n      return $http.get(\n        path + '/data_requiement/new', {params: params}\n      )\n    };\n    function getDepartments() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    };\n    function getDataquotaSummary(){\n      return $http.get(\n        path + '/data_resource/summary'\n      )\n    };\n    function getDataRequirementSummary(){\n      return $http.get(\n        path + '/data_requiement/summary'\n      )\n    };\n    function getUserDep(params){\n      return $http.get(\n        path + '/department',{params: params}\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/data_quota',{params: params}\n      )\n    };\n\n    return {\n      getDataQuotaNew: getDataQuotaNew,\n      getDataRequirementNew: getDataRequirementNew,\n      getDepartments: getDepartments,\n      getDataquotaSummary: getDataquotaSummary,\n      getDataRequirementSummary: getDataRequirementSummary,\n      getUserDep: getUserDep,\n      getDataQuota: getDataQuota\n    };\n\n  }\n]);\n\n/** Dashboard Directive */\nDashboard.directive('wiservDataQuotaOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataquotaSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '资源提供部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '40%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: summary.dep_resource,\n                  name: '资源提供部门'\n                }, {\n                  value: summary.month_increment_dpet_resource,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '资源总数',\n                type: 'pie',\n                radius: ['60%', '75%'],\n                data: [{\n                  value: summary.total_resource,\n                  name: '资源总数'\n                }, {\n                  value: summary.month_increment_resource,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservRequirementOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataRequirementSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '需求涉及部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '40%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: summary.department_number,\n                  name: '需求涉及部门'\n                }, {\n                  value: summary.department_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '需求总数',\n                type: 'pie',\n                radius: ['60%', '75%'],\n                data: [{\n                  value: summary.requiement_number,\n                  name: '需求总数'\n                }, {\n                  value: summary.requiement_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservStatisticChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:100%;height:240px;'></div>\",\n      link: function(scope, element, attr) {\n        scope.QInventoryStatistic.then(function(result) {\n          var DEPARTMENT = result.data.body[0];\n          var INVENTORY = result.data.body[1];\n          var REQUIREMENT = result.data.body[2];\n          var myChart = echarts.init((element.find('div'))[0]);\n          var option = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['资源', '需求']\n            },\n            xAxis: [{\n              type: 'category',\n              name: '数量',\n              data: DEPARTMENT.DEPARTMENT\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '单位',\n              min: 0,\n              max: 30,\n              interval: 30,\n              axisLabel: {\n                formatter: '{value} 个'\n              }\n            }],\n            series: [{\n              name: '资源',\n              type: 'bar',\n              data: INVENTORY.INVENTORY\n            }, {\n              name: '需求',\n              type: 'bar',\n              data: REQUIREMENT.REQUIREMENT\n            }]\n          };\n          myChart.setOption(option);\n        });\n\n      }\n    };\n  }\n]);\n","'use strict';\nvar Login = angular.module('Login', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nLogin.controller('Login.Controller.Main', ['$rootScope', '$cookies', '$scope', '$state', 'Login.Service.Http',\n  function($rootScope, $cookies, $scope, $state, Http) {\n    // Decide login or session delay\n    if(sessionStorage.message){\n      $scope.alerts = [\n        {type: 'danger', msg: sessionStorage.message}\n      ];\n      $scope.closeAlert = function(index) {\n        $scope.alerts.splice(index, 1);\n      };\n      sessionStorage.removeItem('message');\n    }\n    // Login validation\n    $scope.Login = {};\n    $scope.Login.submit = function(valid) {\n      $scope.loginSubmitted = false;\n      if (valid) {\n        var username = $scope.Login.username;\n        var password = $scope.Login.password;\n        Http.login({\n          username: username,\n          password: password\n        }).then(function(result) {\n          var loginUser = result.data.body[0];\n          $rootScope.User = loginUser;\n          $cookies.put('User', JSON.stringify(loginUser));\n          console.log(JSON.stringify(loginUser));\n          var sessionToken = result.data.head.token;\n          if(sessionToken){\n            sessionStorage.token = sessionToken;\n          }\n          if (200 == result.data.head.status) {\n            $state.go(\"main.dashboard\");\n          } else {\n            $scope.loginError = true;\n          }\n        });\n      } else {\n        $scope.loginSubmitted = true;\n      }\n    }\n  }\n]);\n\n/* HTTP Factory */\nLogin.factory('Login.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function login(params) {\n      return $http.get(\n        path + '/login', {\n          params: params\n        }\n      )\n    };\n    return {\n      login: login\n    }\n  }\n]);\n","'use strict';\nvar Main = angular.module('Main', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nMain.controller('Main.Controller.Main', ['$scope', '$cookies',\n  function($scope, $cookies) {\n    $scope.User = JSON.parse($cookies.get('User'));\n  }\n]);\n","'use strict';\nvar DataQuotaDetail = angular.module('DataQuotaDetail', ['ui.router']);\n\n/** Main Controller */\nDataQuotaDetail.controller('DataQuotaDetail.Controller.Main', ['$scope', '$state', 'DataQuotaDetail.Service.Http', '$stateParams',\n  function($scope, $state, Http, $stateParams) {\n    // Data Quota Detail\n    Http.getDataQuotaDetailByDepID(\n      $stateParams\n    ).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n    });\n    // Data Quota Example\n    Http.getDataQuotaExampleByDepID(\n      {resource_id: $stateParams.resource_id}\n    ).then(function(result) {\n      $scope.DataQuotaExample = result.data.body;\n    });\n\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaDetail.factory('DataQuotaDetail.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaDetailByDepID(params){\n      return $http.get(\n        path + '/info_resource_detail', { params: params }\n      )\n    };\n    function getDataQuotaExampleByDepID(params){\n      return $http.get(\n        path + '/info_item_detail', { params: params }\n      )\n    };\n    return {\n      getDataQuotaDetailByDepID: getDataQuotaDetailByDepID,\n      getDataQuotaExampleByDepID: getDataQuotaExampleByDepID\n    }\n  }\n]);\n","'use strict';\nvar DataQuotaList = angular.module('DataQuotaList', ['ui.router']);\n\n/** Main Controller */\nDataQuotaList.controller('DataQuotaList.Controller.Main', ['$scope', '$state', 'DataQuotaList.Service.Http', '$stateParams',\n  function($scope, $state, Http, StateParams) {\n    // Get the parameters form ui-router\n    var currentDepID = {resource_dep_id:StateParams.resource_dep_id};\n    var currentDepName = {dep_name:StateParams.dep_name};\n    // Selected department name\n    $scope.currentDep = currentDepName.dep_name;\n    // Params for pagin\n    var initPaging = {limit:10, skip: 0};\n    $scope.Paging = {};\n    $scope.Paging.currentPage = 1;\n    $scope.Paging.itemsPerPage = 10;\n    $scope.Paging.pageChanged = function() {\n      var httpParams = {};\n      _.assign(httpParams, currentDepID, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n      getDataQuotaList(httpParams);\n    };\n    // Get data quota list\n    function getDataQuotaList(_httpParams){\n      Http.getDataQuota(_httpParams).then(function(result) {\n        $scope.DataQuotas = result.data.body[0].results;\n        $scope.DataQuotasTotal = result.data.body[0].count;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    };\n    // Init data quota talbe\n    (function initDataQuotaList(){\n        /* Init selected status for filter */\n        $scope.resourceFormatActiveAll = $scope.ShareLevelActiveAll = $scope.openToSocietyActiveAll = $scope.ShareFrequencyActiveAll = $scope.DataLevelActiveAll = $scope.isScretActiveAll= 'active';\n        /* Init ajax parameters*/\n        var httpParams = {};\n        (currentDepID==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n        getDataQuotaList(httpParams);\n    })();\n    // Fetch data quota list by filter\n    function getDataQuotaListByFilter(params){\n      var httpParams = {};\n      (currentDepID.dep_name==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n      _.assign(httpParams, params);\n      getDataQuotaList(httpParams);\n    };\n    // Search for Data Quota Name\n    $scope.Retrieval = function(){\n      var httpParams = {};\n      var searchTarget = {resource_name: $scope.TargetDataQuotaName};\n      (currentDepID==='') ? (_.assign(httpParams, initPaging, searchTarget)) : (_.assign(httpParams, currentDepID, initPaging, searchTarget));\n      getDataQuotaList(httpParams);\n    };\n    // Data quota apply info\n    $scope.DataQuotaApplyInfo = function(data_quota_id) {\n      Http.getDataQuotaApplyInfo({info_resource_id: data_quota_id}).then(function() {\n        alert('申请查看成功');\n        var httpParams = {};\n        _.assign(httpParams, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n        getDataQuotaList(httpParams);\n      });\n    };\n    // Filter generator\n    var SHARE_FREQUENCY = 1, //更新周期\n        DATA_LEVEL = 2, //分地区数据级别\n        SHARE_LEVEL = 3, //共享级别\n        RESOURCE_FORMAT = 11, //信息资源格式\n        SOCIAL_OPEN_FLAG  = 14, //面向社会开放\n        SECRET_FLAG = 5  //是否涉密\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormats = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.openToSocietys = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.isScrets = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.ShareLevels = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.ShareFrequencys = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.DataLevels = result.data.body;\n    });\n    // Handle above filter\n    var filterParams = {};\n\n    /*信息资源格式*/\n    $scope.resourceFormatFilter = function(id, index){\n      $scope.resourceFormatActive = [];\n      $scope.resourceFormatActiveAll = '';\n      $scope.resourceFormatActive[index] = 'active';\n      filterParams.re_format = id;\n      if('ALL'===id){\n        delete filterParams.re_format;\n        $scope.resourceFormatActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 共享级别 */\n    $scope.ShareLevelFilter = function(id, index){\n      $scope.ShareLevelActive = [];\n      $scope.ShareLevelActiveAll = '';\n      $scope.ShareLevelActive[index] = 'active';\n      filterParams.share_level = id;\n      if('ALL'===id){\n        delete filterParams.share_level;\n        $scope.ShareLevelActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n\n    /*面向社会开放*/\n    $scope.openToSocietyFilter = function(id, index){\n      $scope.openToSocietyActive = [];\n      $scope.openToSocietyActiveAll = '';\n      $scope.openToSocietyActive[index] = 'active';\n      filterParams.social_open_flag = id;\n      if('ALL'===id){\n        delete filterParams.social_open_flag;\n        $scope.openToSocietyActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 更新周期（共享频率） */\n    filterParams.update_period = [];\n    $scope.ShareFrequencyActive = [];\n    $scope.ShareFrequencyFilter = function(id, index){\n      if('ALL'===id){\n        filterParams.update_period = [];\n        $scope.ShareFrequencyActiveAll = 'active';\n        $scope.ShareFrequencyActive = [];\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        $scope.ShareFrequencyActiveAll = '';\n        ($scope.ShareFrequencyActive[index]==='active')?($scope.ShareFrequencyActive[index]=''):($scope.ShareFrequencyActive[index]='active');\n        filterParams.update_period.push(id);\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n\n    /* 分地区数据级别 */\n    filterParams.area_level = [];\n    $scope.DataLevelActive = [];\n    $scope.DataLevelFilter = function(id, index){\n      if('ALL'===id){\n        filterParams.area_level = [];\n        $scope.DataLevelActiveAll = 'active';\n        $scope.DataLevelActive=[];\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        $scope.DataLevelActiveAll = '';\n        ($scope.DataLevelActive[index]==='active')?($scope.DataLevelActive[index]=''):($scope.DataLevelActive[index]='active');\n        filterParams.area_level.push(id);\n        getDataQuotaListByFilter(filterParams);\n      };\n    };\n    /*是否涉密*/\n    $scope.isScretFilter = function(id, index){\n      $scope.isScretActive = [];\n      $scope.isScretActiveAll = '';\n      $scope.isScretActive[index] = 'active';\n      filterParams.issecret = id;\n      if('ALL'===id){\n        delete filterParams.issecret;\n        $scope.isScretActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaList.factory('DataQuotaList.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', { params: params }\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/resource/sys_dict', { params: params }\n      )\n    };\n    function getDataQuotaApplyInfo(data){\n      return $http.post(\n        path + '/info_resource_apply_info', { data: data }\n      )\n    };\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getDataQuotaApplyInfo: getDataQuotaApplyInfo,\n      getDataQuota: getDataQuota\n    }\n  }\n]);\n","'use strict';\nvar DataQuota = angular.module('DataQuota', ['ui.router']);\n\n/** Main Controller */\nDataQuota.controller('DataQuota.Controller.Main', ['$scope', '$state', 'DataQuota.Service.Http',\n  function($scope, $state, Http) {\n    window.scrollTo(0,0);\n    // Menu configration\n    $scope.treeOptions = {\n      nodeChildren: \"nodes\",\n      dirSelectable: false,\n      injectClasses: {\n        ul: \"a1\",\n        li: \"a2\",\n        liSelected: \"a7\",\n        iExpanded: \"a3\",\n        iCollapsed: \"a4\",\n        iLeaf: \"a5\",\n        label: \"a6\",\n        labelSelected: \"a8\"\n      }\n    }\n    // Menu Generator\n    Http.menu().then(function(result) {\n      if (200 === result.data.head.status) {\n        $scope.list = result.data.body;\n      }\n    })\n  }\n]);\n\n/* DataQuota Http Factory */\nDataQuota.factory('DataQuota.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function menu(params) {\n      return $http.get(\n        path + '/menu', { params: params }\n      )\n    };\n    return {\n      menu: menu\n    }\n  }\n]);\n","'use strict';\nvar Audit = angular.module('Department.Audit', ['ui.router']);\n\n/** Main Controller */\nAudit.controller('Department.Audit.Controller.Main', ['$scope', '$q', 'Department.Audit.Service.Http',\n  function($scope, $q, Http) {\n    $scope.InfoResource = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getAuditList(_httpParams);\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      $scope.auditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.auditList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n    $scope.searchInfoResourceByName = function() {\n      _httpParams.resource_name = $scope.InfoResource.resource_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList();\n    }\n\n\n  }\n])\n\n\nAudit.controller('Department.Audit.Controller.info', ['$scope', '$state', '$q', 'Department.Audit.Service.Http', '$stateParams',\n  function( $scope, $state, $q, Http, $stateParams) {\n    $scope.TabItemShow = true;\n    $scope.TabRequireShow = true;\n    $scope.AuditInfo = {};\n    $scope.AuditInfo.audit_opinion = '';\n    console.log($stateParams.item);\n    // get audit detail by id\n    $scope.InfoResourceDetail = $stateParams.item;\n    $scope.InfoItemShow = false;\n    Http.getInfoItemList({\n      resource_id: $scope.InfoResourceDetail.id\n    }).then(function(result) {\n      if (result.data.body.length == 0) {\n        $scope.InfoItemShow = false;\n      } else {\n        $scope.InfoItemShow = true;\n        $scope.InfoItems = result.data.body;\n      }\n    })\n\n\n    $scope.submitAudit = function() {\n      console.log($scope.AuditInfo.audit_status);\n      if(!$scope.AuditInfo.audit_status) {\n        $scope.auditError = true;\n        return;\n      }\n      $scope.AuditInfo.audit_id = $stateParams.item.audit_id;\n      Http.updateAuditDetail($scope.AuditInfo).then(function(result) {\n        if (200 == result.data.head.status) {\n          alert('审核成功');\n          $state.go(\"main.department.audit\", {}, {\n            reload: true\n          });\n        } else {\n          alert('审核失败');\n        }\n      });\n    }\n  }\n])\n\n/* HTTP */\nAudit.factory('Department.Audit.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/openinfo_resourcelist', {\n          params: params\n        }\n      )\n    }\n\n    function getInfoResourceDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function updateAuditDetail(data) {\n      return $http.put(\n        path + '/openinfo_resourceok', {\n          data: data\n        }\n      )\n    }\n\n    function getQuotaRequirement(params) {\n      return $http.get(\n        path + '/requiement_detail', {\n          params: params\n        }\n      )\n    }\n    function getInfoItemList(params) {\n      return $http.get(\n        path + '/item_detail', {\n          params: params\n        }\n      )\n    }\n    return {\n      getAuditList: getAuditList,\n      getInfoResourceDetail: getInfoResourceDetail,\n      updateAuditDetail: updateAuditDetail,\n      getQuotaRequirement: getQuotaRequirement,\n      getInfoItemList: getInfoItemList\n    }\n  }\n]);\n","'use strict';\nvar DInventory = angular.module('Department.Inventory', ['ui.router', 'ngCookies', 'cgBusy']);\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $q, Http) {\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var SECRET_FLAG = 5;\n    var RESOURCE_FORMAT = 11;\n    var SOCIAL_OPEN_FLAG = 14;\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_NAME = LoginUser.dep_id;\n    $scope.DepartInfoResource = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.socialOpenList = result.data.body;\n    });\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    function getDeptInfoResourceList(_httpParams) {\n      //_httpParams.dep_name = DEP_NAME;\n      $scope.promise = Http.getDepartInfoResList(_httpParams).then(function(result) {\n        console.log(result);\n        $scope.infoResourceList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n\n    //init\n    getDeptInfoResourceList(_httpParams);\n\n    // resource format all\n    $scope.getResFormatAll = function() {\n      $scope.resFormatMainSelection = [];\n      _httpParams.re_format = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvMainSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // social open all\n    $scope.getSocialOpenAll = function() {\n      $scope.socialOpenMainSelection = [];\n      _httpParams.social_open_flag = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // share frequency all\n    $scope.getShareFreqAll = function() {\n      $scope.shareFreqSelection = [];\n      _httpParams.update_period = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // secret flag all\n    $scope.getSecretFlagAll = function() {\n      $scope.secretFlagMainSelection = [];\n      _httpParams.issecret = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by resource format\n    $scope.resFormatMainSelection = [];\n    $scope.getInfoResourceByResFormat = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.resFormatMainSelection = [];\n      } else {\n        $scope.resFormatMainSelection = item.id;\n      }\n      _httpParams.re_format = $scope.resFormatMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by share frequency\n    $scope.shareFreqSelection = [];\n    $scope.getInfoResourceListBySF = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareFreqSelection = [];\n      } else {\n        $scope.shareFreqSelection = item.id;\n      }\n      _httpParams.update_period = $scope.shareFreqSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvMainSelection = [];\n    $scope.getInfoResourceListBySl = function(item) {\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvMainSelection = [];\n      } else {\n        $scope.shareLvMainSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by social open flag\n    $scope.socialOpenMainSelection = [];\n    $scope.getInfoResourceListBySO = function(item) {\n      var idx = $scope.socialOpenMainSelection.indexOf(item.dict_code);\n      if (idx > -1) {\n        $scope.socialOpenMainSelection = [];\n      } else {\n        $scope.socialOpenMainSelection = item.dict_code;\n      }\n      _httpParams.social_open_flag = $scope.socialOpenMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by secret flag\n    $scope.secretFlagMainSelection = [];\n    $scope.getInfoResourceListBySecFlag = function(item) {\n      var idx = $scope.secretFlagMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.secretFlagMainSelection = [];\n      } else {\n        $scope.secretFlagMainSelection = item.id;\n      }\n      _httpParams.issecret = $scope.secretFlagMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaMainSelection = [];\n      _httpParams.area_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaMainSelection = [];\n    $scope.getInfoResourceListByAP = function(item) {\n      var idx = $scope.areaMainSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaMainSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaMainSelection.push(item.id);\n      }\n\n      _httpParams.area_level = $scope.areaMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchDeptInfoResourceByName = function() {\n      _httpParams.resource_name = $scope.DepartInfoResource.resource_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // delete info resource\n    $scope.deleteInfoResource = function(resourceId) {\n      var deleteConfirm = confirm('确定删除本条信息资源？删除后将不可恢复。');\n      if (deleteConfirm) {\n        Http.deleteInfoResource({\n          resourceid: resourceId\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('删除成功！');\n            getDeptInfoResourceList(_httpParams);\n          } else {\n            alert('删除失败');\n          }\n        })\n      }\n    }\n\n\n  }\n])\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.detail', ['$scope', '$q', 'Department.Inventory.Service.Http', '$stateParams', '$state',\n  function($scope, $q, Http, $stateParams, $state) {\n    console.log($stateParams.item);\n    $scope.InfoResourceDetail = $stateParams.item;\n    $scope.InfoItemShow = false;\n    Http.getInfoItemList({\n      resource_id: $scope.InfoResourceDetail.id\n    }).then(function(result) {\n      if (result.data.body.length == 0) {\n        $scope.InfoItemShow = false;\n      } else {\n        $scope.InfoItemShow = true;\n        $scope.InfoItems = result.data.body;\n      }\n\n\n    })\n  }\n])\n\nDInventory.controller('Department.Inventory.Controller.publish', ['$cookies', '$scope', '$stateParams', '$state', '$q', '$uibModal', 'Department.Inventory.Service.Component', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $stateParams, $state, $q, $uibModal, Component, Http) {\n    var RESOURCE_CATEGORY = 10;\n    var SHARE_TYPE = 12;\n    var SHARE_METHOD = 13;\n    var ITEM_TYPE = 15;\n    var LEVEL_AUTH = '250375bd-02f0-11e6-a52a-5cf9dd40ad7e'; // 授权开放\n    var LEVEL_ALL_OPEN = '2501e32c-02f0-11e6-a52a-5cf9dd40ad7e'; // 全开放\n    var RESOURCE_FORMAT_DATA = 'aaee8194-2614-11e6-a9e9-507b9d1b58bb';\n    var RESOURCE_FORMAT_OTHER = 'ab11fdd4-2614-11e6-a9e9-507b9d1b58bb';\n    var SHARE_METHOD_OTHER = 'd8d61ff3-2616-11e6-a9e9-507b9d1b58bb';\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DEP_NAME = LoginUser.dep_name;\n    $scope.ORG_NAME = LoginUser.organization;\n    $scope.ORG_CODE = LoginUser.organization_code;\n    $scope.InfoResource = {};\n    $scope.InfoResource.alias = '';\n    $scope.InfoResource.rel_category = '';\n    $scope.InfoResource.secret_flag = '';\n    $scope.InfoResource.meter_unit = \"\";\n    $scope.InfoResource.calculate_method = '';\n    $scope.InfoResource.resource_format_other = '';\n    $scope.InfoResource.share_method_other = '';\n    $scope.InfoResource.social_open_limit = '';\n    $scope.InfoResource.linkman = '';\n    $scope.InfoResource.contact_phone = '';\n    // item list\n    $scope.ResourceItemList = [];\n    $scope.ResourceItemConfigList = [];\n\n    // resource name duplicate check\n    $scope.resNameExist = false;\n    $scope.checkResName = function() {\n      if($scope.InfoResource.resource_name && $scope.InfoResource.resource_name != '') {\n        Http.checkResName({\n          resource_name: $scope.InfoResource.resource_name\n        }).then(function(res) {\n          if(res.data.body[0].isexists == 'true') {\n            $scope.resNameExist = true;\n          }\n          else{\n            $scope.resNameExist = false;\n          }\n        })\n      }\n\n    }\n    $scope.parent = {};\n    $scope.parent.itemNameExist = false;\n    $scope.checkItemName = function() {\n      if($scope.ResourceItem.item_name && $scope.ResourceItem.item_name != '') {\n        Http.checkItemName({\n          item_name: $scope.ResourceItem.item_name\n        }).then(function(res) {\n          if(res.data.body[0].isexists == 'true') {\n            $scope.parent.itemNameExist = true;\n          }\n          else{\n            $scope.parent.itemNameExist = false;\n          }\n        })\n      }\n\n    }\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_CATEGORY\n    }).then(function(result) {\n      $scope.resourceCategoryList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_TYPE\n    }).then(function(result) {\n      $scope.shareTypeList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_METHOD\n    }).then(function(result) {\n      $scope.shareMethodList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': ITEM_TYPE\n    }).then(function(result) {\n      $scope.itemTypeList = result.data.body;\n    });\n\n    $scope.close = function(isValid) {\n      $state.go(\"main.department.inventory\", {}, {\n        reload: true\n      });\n    }\n\n    // submit add\n    $scope.addInfoResource = function(isValid) {\n      $scope.submitted = true;\n      var InfoResourceAddObj = {};\n      var InfoResource_RelationConfig = [];\n      var InfoResourceApplyInfo = [];\n      var InfoItem_RelationConfig = [];\n      if($scope.resNameExist) {\n        isValid = false;\n      }\n      if ($scope.shareFreqSelection.length == 0 && !$scope.resItemAddBtn) { // 未选择更新周期\n        isValid = false;\n      }\n      if ($scope.resItemAddBtn && ($scope.ResourceItemList.length == 0)) { // 未添加信息项\n        isValid = false;\n      }\n\n      if (isValid) {\n        InfoResourceAddObj.InfoResource = $scope.InfoResource;\n        _($scope.dataLevelSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.resource_name;\n          sys_dict.sys_dict_id = value;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.resource_name;\n          sys_dict.sys_dict_id = value;\n          sys_dict.obj_type = 1;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        var shareDeps = _.map($scope.outputDeptList, 'id');\n        _(shareDeps).forEach(function(value) {\n          var share_dep = {};\n          share_dep.InfoResourceId = $scope.InfoResource.resource_name;\n          share_dep.apply_dep = value;\n          InfoResourceApplyInfo.push(share_dep);\n        });\n        _($scope.ResourceItemList).forEach(function(item, index) {\n          console.log(index);\n          item.item_ord = index;\n          item.InfoResourceId = $scope.InfoResource.resource_name;\n          console.log($scope.ResourceItemList);\n        })\n\n        InfoResourceAddObj.InfoResource_RelationConfig = InfoResource_RelationConfig;\n        InfoResourceAddObj.InfoResourceApplyInfo = InfoResourceApplyInfo;\n        InfoResourceAddObj.InfoItem_RelationConfig = $scope.ResourceItemConfigList;\n        InfoResourceAddObj.InfoItem = $scope.ResourceItemList;\n\n        console.log(InfoResourceAddObj);\n        Http.saveInfoResource(InfoResourceAddObj).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            $scope.Modal = {};\n            $state.go(\"main.department.inventory\", {}, {\n              reload: true\n            });\n\n          } else {\n            alert('保存失败');\n          }\n        })\n      } else {\n        return;\n      }\n    }\n\n\n    // submit update\n    console.log($stateParams.item);\n    $scope.resItemUpdateBtn = false;\n    if ($stateParams.item) { // 选择修改\n      $scope.InfoResource = $stateParams.item;\n\n      // 获取资源分地区数据级别\n      Http.getResourceAreaLevel({\n        resource_id: $scope.InfoResource.id\n      }).then(function(res) {\n        $scope.dataLevelSelection = res.data.body[0].id;\n      })\n\n      // 获取资源更新周期\n      Http.getResourceUpdatePeriod({\n        resource_id: $scope.InfoResource.id\n      }).then(function(res) {\n        $scope.shareFreqSelection = res.data.body[0].id;\n      })\n\n      // 获取指定开放部门列表\n      Http.getResourceShareDeps({\n        resource_id: $scope.InfoResource.id\n      }).then(function(res) {\n        var authDepts = res.data.body[0].id;\n        if (authDepts.length > 0) {\n          $scope.depShow = true;\n        }\n        _($scope.deptList).forEach(function(allItem) {\n          _(authDepts).forEach(function(authItem) {\n            if (allItem.id == authItem) {\n              allItem.ticked = true;\n              $scope.outputDeptList.push(allItem);\n            }\n          })\n        });\n      })\n\n      // 选中数据库类\n      if (RESOURCE_FORMAT_DATA == $scope.InfoResource.resource_format) {\n        $scope.resItemUpdateBtn = true;\n      }\n    }\n\n\n    $scope.updateInfoResource = function(isValid) {\n      $scope.submitted = true;\n      var InfoResourceAddObj = {};\n      var InfoResource_RelationConfig = [];\n      var InfoResourceApplyInfo = [];\n      var InfoItem_RelationConfig = [];\n      if($scope.resNameExist) {\n        isValid = false;\n      }\n      if ($scope.shareFreqSelection.length == 0 && !$scope.resItemUpdateBtn) { // 未选择更新周期\n        isValid = false;\n      }\n      if ($scope.resItemAddBtn && ($scope.ResourceItemList.length == 0)) { // 未添加信息项\n        isValid = false;\n      }\n\n      if (isValid) {\n        InfoResourceAddObj.InfoResource = $scope.InfoResource;\n        _($scope.dataLevelSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.id;\n          sys_dict.sys_dict_id = value;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.id;\n          sys_dict.sys_dict_id = value;\n          sys_dict.obj_type = 1;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        var shareDeps = _.map($scope.outputDeptList, 'id');\n        _(shareDeps).forEach(function(value) {\n          var share_dep = {};\n          share_dep.InfoResourceId = $scope.InfoResource.id;\n          share_dep.apply_dep = value;\n          InfoResourceApplyInfo.push(share_dep);\n        });\n        _($scope.ResourceItemList).forEach(function(item, index) {\n          console.log(index);\n          item.item_ord = index;\n          item.InfoResourceId = $scope.InfoResource.id;\n          console.log($scope.ResourceItemList);\n        })\n\n        InfoResourceAddObj.InfoResource_RelationConfig = InfoResource_RelationConfig;\n        InfoResourceAddObj.InfoResourceApplyInfo = InfoResourceApplyInfo;\n        InfoResourceAddObj.InfoItem_RelationConfig = $scope.ResourceItemConfigList;\n        InfoResourceAddObj.InfoItem = $scope.ResourceItemList;\n\n        console.log(InfoResourceAddObj);\n        Http.updateInfoResource(InfoResourceAddObj).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            alert('保存成功！');\n            $scope.Modal = {};\n            $state.go(\"main.department.inventory\", {}, {\n              reload: true\n            });\n\n          } else {\n            alert('保存失败');\n          }\n          // 清空多选项\n          $scope.dataLevelSelection = [];\n          $scope.shareFreqSelection = [];\n        })\n      } else {\n        return;\n      }\n    }\n\n    $scope.editItems = function(id) {\n      Http.getInfoItemList({\n        resource_id: id\n      }).then(function(result) {\n        $scope.ResourceItemList = result.data.body;\n        // 拼接信息资源所有信息项的多选项\n        _($scope.ResourceItemList).forEach(function(item) {\n          var itemConfig = {};\n          itemConfig.InfoItemId = item.item_name;\n          var shareFreqDictName = [];\n          _(item.config).forEach(function(config) {\n            itemConfig.sys_dict_id = config.id;\n            shareFreqDictName.push(config.dict_name);\n            $scope.ResourceItemConfigList.push(itemConfig);\n          })\n          item.update_period_name = shareFreqDictName;\n        })\n        console.log($scope.ResourceItemConfigList);\n      })\n      $scope.ResItemListShow = true;\n    }\n\n    $scope.addResourceItem = function(type) {\n      $scope.shareFreqEmpty = false;\n      $scope.Modal = {};\n      $scope.itemAdded = false;\n      $scope.ResourceItem = {};\n      $scope.ResourceItem.meter_unit = '';\n      $scope.ResourceItem.calculate_method = '';\n      $scope.ResourceItem.shareFreqItemSelection = [];\n      $scope.ResourceItem.shareFreqItemObjSelection = [];\n      $scope.parent.itemNameExist = false;\n\n      $scope.data = {};\n      $scope.data.item_type = $scope.itemTypeList[0];\n      $scope.data.secret_flag = $scope.secretFlagList[0];\n\n      $scope.$watch('data.item_type', function(n) {\n        $scope.ResourceItem.item_type = n.id;\n        $scope.ResourceItem.item_type_name = n.dict_name;\n      })\n\n      $scope.$watch('data.secret_flag', function(n) {\n        $scope.ResourceItem.secret_flag = n.id;\n        $scope.ResourceItem.secret_flag_name = n.dict_name;\n      })\n\n      Component.popModal($scope, 'Department.Inventory.Controller.publish', '新增', 'item-add-modal').result.then(function(res) {\n        console.log($scope.ResourceItem);\n        $scope.itemAdded = false;\n        console.log(type);\n        // if(type == 2) {// 新增资源时的新增信息项\n        //   $scope.ResourceItemList.push($scope.ResourceItem);\n        // }\n\n        var shareFreqDictName = [];\n        _($scope.ResourceItem.shareFreqItemObjSelection).forEach(function(item) {\n          var sys_dict = {};\n          sys_dict.InfoItemId = $scope.ResourceItem.item_name;\n          sys_dict.sys_dict_id = item.id;\n          $scope.ResourceItemConfigList.push(sys_dict);\n          shareFreqDictName.push(item.dict_name);\n        });\n        $scope.ResourceItem.config = $scope.ResourceItem.shareFreqItemObjSelection;\n        $scope.ResourceItem.update_period_name = shareFreqDictName;\n        $scope.ResourceItemList.push($scope.ResourceItem);\n\n        console.log($scope.ResourceItemList);\n      })\n    }\n\n    // update resource item\n    $scope.updateItem = function(InfoItem) {\n      console.log(InfoItem);\n      $scope.Modal = {};\n      $scope.itemUpdated = false;\n      $scope.ResourceItem = InfoItem;\n      $scope.ResourceItem.shareFreqItemSelection = _.map(InfoItem.config,'id');\n      $scope.ResourceItem.shareFreqItemObjSelection = InfoItem.config;\n      $scope.shareFreqEmpty = false;\n\n      $scope.data = {};\n\n      // if (InfoItem.id) { // 在修改信息资源中修改\n      //   // 获取该条信息项更新周期\n      //   Http.getItemUpdatePeriod({\n      //     item_id: InfoItem.id\n      //   }).then(function(res) {\n      //     $scope.shareFreqItemObjSelection = res.data.body;\n      //     $scope.shareFreqItemSelection = _.map($scope.shareFreqItemObjSelection, 'id');\n      //   });\n      // } else { // 新增资源时修改\n      //   $scope.shareFreqItemSelection = $scope.ResourceItem.update_period_temp;\n      //   $scope.shareFreqItemObjSelection = $scope.ResourceItem.update_period_obj_temp;\n      // }\n\n      _($scope.secretFlagList).forEach(function(secretFlag) {\n        if (InfoItem.secret_flag == secretFlag.id) {\n          $scope.data.secret_flag = secretFlag;\n        }\n      })\n\n      _($scope.itemTypeList).forEach(function(itemType) {\n        if (InfoItem.item_type == itemType.id) {\n          $scope.data.item_type = angular.copy(itemType);\n          console.log($scope.data.item_type);\n        }\n      })\n\n      $scope.$watch('data.item_type', function(n) {\n        console.log($scope.data.item_type);\n        if (n) {\n          $scope.ResourceItem.item_type = n.id;\n          $scope.ResourceItem.item_type_name = n.dict_name;\n        }\n      })\n\n      $scope.$watch('data.secret_flag', function(n) {\n        console.log(n);\n        $scope.ResourceItem.secret_flag = n.id;\n        $scope.ResourceItem.secret_flag_name = n.dict_name;\n      })\n\n      Component.popModal($scope, 'Department.Inventory.Controller.publish', '修改', 'item-add-modal').result.then(function(res) {\n        $scope.itemUpdated = false;\n        var shareFreqDictName = [];\n        // 删除本条信息项已选中的多选项\n        _.remove($scope.ResourceItemConfigList, function(config) {\n          return config.InfoItemId == $scope.ResourceItem.item_name;\n        });\n\n        _($scope.ResourceItem.shareFreqItemObjSelection).forEach(function(item) {\n          var sys_dict = {};\n          sys_dict.InfoItemId = $scope.ResourceItem.item_name;\n          sys_dict.sys_dict_id = item.id;\n          $scope.ResourceItemConfigList.push(sys_dict);\n          shareFreqDictName.push(item.dict_name);\n        });\n        $scope.ResourceItem.update_period_name = shareFreqDictName;\n        console.log($scope.ResourceItemList);\n      })\n    }\n\n    // delete info item\n    $scope.deleteItem = function(index) {\n      var deleteFlag = confirm('确定删除本条信息项？');\n      console.log(index);\n      if (deleteFlag && index > -1) {\n        $scope.ResourceItemList.splice(index,1);\n      }\n    }\n\n\n\n    // show or hide department\n    $scope.depShow = false;\n    $scope.showHideDeps = function(ev) {\n      if (LEVEL_ALL_OPEN != $scope.InfoResource.share_level) {\n        if (LEVEL_AUTH == $scope.InfoResource.share_level) {\n          $scope.depShow = true;\n          $scope.socialOpenFlag = false;\n        } else {\n          $scope.depShow = false;\n          $scope.socialOpenFlag = true;\n        }\n        $scope.InfoResource.social_open_flag = 0;\n      } else {\n        $scope.InfoResource.social_open_flag = 1;\n      }\n\n    }\n\n    $scope.shareMethodOtherShow = false;\n    $scope.showHideShareMethodOther = function() {\n      if (SHARE_METHOD_OTHER == $scope.InfoResource.share_method) {\n        $scope.shareMethodOtherShow = true;\n      } else {\n        $scope.shareMethodOtherShow = false;\n      }\n    }\n\n    //show or hide resource item add button\n    $scope.resItemAddBtn = false;\n    $scope.resFormatOtherShow = false;\n    $scope.showHideResAddBtn = function() {\n      $scope.resFormatOtherShow = false;\n      if (RESOURCE_FORMAT_DATA == $scope.InfoResource.resource_format) {\n        if ($stateParams.item) { // 修改\n          $scope.resItemUpdateBtn = true;\n        } else { // 新增\n          $scope.resItemAddBtn = true;\n        }\n\n        $scope.resFormatOtherShow = false;\n        $scope.shareFreqSelection = [];\n        $scope.InfoResource.secret_flag = '';\n        $scope.InfoResource.meter_unit = \"\";\n        $scope.InfoResource.calculate_method = '';\n      } else if (RESOURCE_FORMAT_OTHER == $scope.InfoResource.resource_format) {\n        $scope.resFormatOtherShow = true;\n        $scope.resItemAddBtn = false;\n        $scope.resItemUpdateBtn = false;\n      } else {\n        $scope.resItemAddBtn = false;\n        $scope.resFormatOtherShow = false;\n        $scope.resItemUpdateBtn = false;\n      }\n    }\n\n    $scope.dataLevelSelection = [];\n    $scope.toggleDataLevelSelection = function(item) {\n      var idx = $scope.dataLevelSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelSelection.push(item.id);\n      }\n    };\n\n    $scope.shareFreqSelection = [];\n    $scope.toggleShareFreqSelection = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.shareFreqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.shareFreqSelection.push(item.id);\n      }\n    };\n\n\n\n    $scope.toggleShareFreqItemSelection = function(item) {\n      //var shareFreqItemSelectionIds = _.map($scope.shareFreqItemSelection, 'id');\n      var idx = $scope.ResourceItem.shareFreqItemSelection.indexOf(item.id);\n      console.log(idx);\n      // is currently selected\n      if (idx > -1) {\n        $scope.ResourceItem.shareFreqItemSelection.splice(idx, 1);\n        $scope.ResourceItem.shareFreqItemObjSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.ResourceItem.shareFreqItemSelection.push(item.id);\n        $scope.ResourceItem.shareFreqItemObjSelection.push(item);\n      }\n      console.log($scope.ResourceItem.shareFreqItemObjSelection);\n    };\n\n\n  }\n\n])\n\n\n/* HTTP */\nDInventory.factory('Department.Inventory.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function getDepartInfoResList(params) {\n      return $http.get(\n        path + '/info_resource_list', {\n          params: params\n        }\n      )\n    }\n\n    function getInfoResourceDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function saveInfoResource(data) {\n      return $http.post(\n        path + '/info_resource', {\n          data: data\n        }\n      )\n    };\n\n    function updateInfoResource(data) {\n      return $http.put(\n        path + '/info_resource', {\n          data: data\n        }\n      )\n    }\n\n    function getInfoItemList(params) {\n      return $http.get(\n        path + '/allitem_detail', {\n          params: params\n        }\n      )\n    }\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function deleteInfoResource(id) {\n      return $http.delete(\n        path + '/info_resource', {\n          data: id\n        }\n      )\n    }\n\n    function getResourceAreaLevel(params) {\n      return $http.get(\n        path + '/resource_area_level', {\n          params: params\n        }\n      )\n    }\n\n    function getResourceUpdatePeriod(params) {\n      return $http.get(\n        path + '/resource_update_period', {\n          params: params\n        }\n      )\n    }\n\n    function getResourceShareDeps(params) {\n      return $http.get(\n        path + '/resource_share_dep', {\n          params: params\n        }\n      )\n    }\n\n    function updateInfoItem(params) {\n      return $http.put(\n        path + '/info_item', {\n          data: params\n        }\n      )\n    }\n\n    function getItemUpdatePeriod(params) {\n      return $http.get(\n        path + '/item_update_period', {\n          params: params\n        }\n      )\n    }\n    function checkResName(params) {\n      return $http.get(\n        path + '/info_resource_name', {\n          params: params\n        }\n      )\n    }\n\n    function checkItemName(params) {\n      return $http.get(\n        path + '/info_item_name', {\n          params: params\n        }\n      )\n    }\n    return {\n      saveInfoResource: saveInfoResource,\n      getDepartmentList: getDepartmentList,\n      getDepartInfoResList: getDepartInfoResList,\n      getInfoResourceDetail: getInfoResourceDetail,\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      deleteInfoResource: deleteInfoResource,\n      updateInfoResource: updateInfoResource,\n      getInfoItemList: getInfoItemList,\n      getResourceAreaLevel: getResourceAreaLevel,\n      getResourceUpdatePeriod: getResourceUpdatePeriod,\n      getResourceShareDeps: getResourceShareDeps,\n      updateInfoItem: updateInfoItem,\n      getItemUpdatePeriod: getItemUpdatePeriod,\n      checkResName: checkResName,\n      checkItemName: checkItemName\n    }\n  }\n]);\n\n\n\n/* Component */\nDInventory.service('Department.Inventory.Service.Component', ['$uibModal', '$state',\n  function($uibModal, $state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, controller, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        controller: controller,\n        size: 'lg',\n        scope: scope\n      });\n      scope.Modal.confirm = function() {\n        console.log(scope.parent.itemNameExist);\n        if (scope.ResourceItem.shareFreqItemSelection.length == 0 || scope.parent.itemNameExist) {\n          scope.shareFreqEmpty = true;\n          return;\n        }\n        modalInstance.close(scope.Modal);\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n\n\nDInventory.directive('fileModel', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var model = $parse(attrs.fileModel);\n      var modelSetter = model.assign;\n      scope.parentIvntObj = {};\n      element.bind('change', function() {\n        var rgx = /(xls|xlsx)/i;\n        var fileSuffix = element[0].files[0].name;\n        var ext = fileSuffix.substring(fileSuffix.lastIndexOf(\".\") + 1);\n        if (!rgx.test(ext)) {\n          scope.$apply(function() {\n            scope.parentIvntObj.fileNameError = true;\n          })\n\n        } else {\n          scope.parentIvntObj.fileNameError = false;\n          scope.$apply(function() {\n            modelSetter(scope, element[0].files[0]);\n          });\n        }\n\n      });\n    }\n  };\n}]);\n","'use strict';\nvar Department = angular.module('Department', ['ui.router']);\n\n/** Main Controller */\nDepartment.controller('Department.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Service.Http', '$sce','$state',\n  function($cookies, $scope, $q, Http, $sce, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var SECRET_FLAG = 5;\n    var RESOURCE_FORMAT = 11;\n    var SOCIAL_OPEN_FLAG = 14;\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    // follow department\n    $scope.depSelect = {};\n    $scope.followDeptList = [];\n    $scope.parentObj = {};\n    function toFollowDep() {\n      $scope.depSelect.show = false;\n      $scope.followDeptList = $scope.parentObj.outputAllDeptList;\n      // send request to add follow department\n      var params = [];\n      _($scope.followDeptList).forEach(function(item) {\n        var followDep = {};\n        followDep.follow_dep_id = item.dep_id;\n        params.push(followDep);\n      });\n      Http.followDepts({\n        userdep: params\n      }).then(function(result) {\n\n      })\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      $scope.mainAuditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.toAuditList = result.data.body[0].results;\n        $scope.auditTotal = result.data.body[0].count;\n      });\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      console.log(_httpConfirmParams);\n      $scope.mainReqPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requireToConfirmList = result.data.body[0].results;\n        $scope.reqTotal = result.data.body[0].count;\n      })\n    }\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.socialOpenList = result.data.body;\n    });\n\n    Http.getDepDataQuotaTotal().then(function(result) {\n      $scope.Count = result.data.body[0];\n    });\n\n    // go to audit list page\n    $scope.auditMore = function() {\n      $state.go(\"main.department.audit\", {}, {\n        reload: true\n      });\n    }\n\n    // go to requirement list page\n    $scope.reqMore = function() {\n      $state.go(\"main.department.requirement\", {}, {\n        reload: true\n      });\n    }\n\n    // 已关注部门列表\n    Http.getFollowDepList().then(function(result) {\n      $scope.parentObj.outputAllDeptList = result.data.body;\n      $scope.followDeptList = _.uniq($scope.parentObj.outputAllDeptList);\n      //console.log($scope.parentObj.outputAllDeptList);\n      Http.getDepartmentFollowList().then(function(result) {\n        $scope.parentObj.deptAllList = _.remove(result.data.body, function(item) {\n          return item.dep_id != DEP_ID;\n        });\n        $scope.parentObj.outputDeptList = [];\n\n        _($scope.parentObj.deptAllList).forEach(function(allItem) {\n          allItem.icon = '<img  src=styles/images/bureau/'+ allItem.dep_en_name +' />'\n          _($scope.parentObj.outputAllDeptList).forEach(function(outItem) {\n            if(allItem.dep_id == outItem.dep_id) {\n              allItem.ticked = true;\n              $scope.parentObj.outputDeptList.push(allItem);\n            }\n          })\n        });\n\n         $scope.$broadcast('someEvent', $scope.parentObj.outputDeptList);\n        // $scope.parentObj.deptAllList = _.pullAllWith($scope.parentObj.deptAllList, $scope.parentObj.outputAllDeptList,function(arrItem,othItem) {\n        //   return arrItem.dep_id == othItem.dep_id || DEP_ID == arrItem.dep_id;\n        // });\n        // console.log($scope.parentObj.deptAllList);\n      });\n    })\n\n    $scope.openFn = function() {\n      $scope.parentObj.outputAllDeptList = $scope.parentObj.outputDeptList;\n      console.log($scope.parentObj.outputAllDeptList);\n    }\n\n\n\n    $scope.followDep = function() {\n      toFollowDep();\n    }\n  }\n])\n\n\n/* HTTP */\nDepartment.factory('Department.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentFollowList() {\n      return $http.get(\n        path + '/follow_sys_dep'\n      )\n    }\n\n    function getDepDataQuotaTotal() {\n      return $http.get(\n        path + '/depquota/summary'\n      )\n    };\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/depresource/wait_audit', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function getFollowDepList() {\n      return $http.get(\n        path + '/followed_user_dep'\n      )\n    }\n\n    function followDepts(params) {\n      return $http.post(\n        path + '/user_dep_batch', {\n          data: params\n        }\n      )\n    }\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getAuditList: getAuditList,\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      getDepartmentFollowList: getDepartmentFollowList,\n      getDepDataQuotaTotal: getDepDataQuotaTotal,\n      followDepts: followDepts,\n      getFollowDepList: getFollowDepList\n    }\n  }\n]);\n","'use strict';\nvar DepartmentReq = angular.module('Department.Requirement', ['ui.router']);\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.Main', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Component', 'Department.Requirement.Service.Http',\n  function($cookies, $scope, $stateParams, Component, Http) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\n      getDeptRequirementList(_httpParams);\n    }\n\n    // init\n    getDeptRequirementList();\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    function getDeptRequirementList() {\n      _httpParams.dep_id = DEP_ID;\n      $scope.reqPromise = Http.getDepartmentRequirementList(_httpParams).then(function(result) {\n        $scope.requirementList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n\n    $scope.toggleDataLevelReqSelection = function(item) {\n      var idx = $scope.dataLevelReqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelReqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelReqSelection.push(item.id);\n      }\n    };\n\n\n    $scope.toggleShareFreqSelection = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.shareFreqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.shareFreqSelection.push(item.id);\n      }\n    };\n\n\n\n    $scope.publishReq = function() {\n      $scope.Modal = {};\n      $scope.Modal.DepRequirment = {};\n\n      var _httpPublishParams = {};\n      var dataRelationConfig = [];\n      $scope.reqParent = {};\n      $scope.reqParent.outputDeptList = [];\n\n      $scope.shareFreqSelection = [];\n      $scope.dataLevelReqSelection = [];\n\n      Component.popModal($scope, '发布', 'add-req-modal').result.then(function() {\n        _($scope.dataLevelReqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\n\n        console.log(res_dep_id);\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\n\n        Http.publishRequirement(_httpPublishParams).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('发布成功');\n            getDeptRequirementList();\n          } else {\n            alert('发布失败');\n          }\n        })\n      });\n    }\n\n    $scope.searchDeptReqByName = function() {\n      _httpParams.requiement_name = $scope.DeptRequirement.req_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptRequirementList();\n    }\n\n\n    // delete requirement\n    $scope.deleteReq = function(id) {\n      var deleteFlag = confirm('确定删除本条需求？删除后将不可恢复。');\n      if(deleteFlag) {\n        Http.deleteRequirement({\n          requiement_id: id\n        }).then(function(result) {\n            if (200 == result.data.head.status) {\n              alert('删除成功！');\n              getDeptRequirementList();\n            }\n            else {\n              alert('删除失败！');\n            }\n        })\n      }\n    }\n\n    // update requirement\n    $scope.updateReq = function(item) {\n      $scope.Modal = {};\n      $scope.Modal.DepRequirment = item;\n\n      var _httpPublishParams = {};\n      var dataRelationConfig = [];\n\n      $scope.reqParent = {};\n      $scope.reqParent.outputDeptList = [];\n\n      $scope.shareFreqSelection = [];\n      $scope.dataLevelReqSelection = [];\n\n      _($scope.deptList).forEach(function(outItem) {\n        if(item.response_dep_id == outItem.id) {\n          outItem.ticked = true;\n          $scope.reqParent.outputDeptList.push(outItem);\n        }\n      })\n\n      // 获取需求对应的共享频率数据\n      Http.getReqUpdatePeriod({\n        requiement_id: item.id\n      }).then(function(res) {\n        $scope.shareFreqSelection = res.data.body;\n      })\n\n      // 获取需求对应的分地区数据级别\n      Http.getReqAreaLevel({\n        requiement_id: item.id\n      }).then(function(res) {\n        $scope.dataLevelReqSelection = res.data.body;\n      })\n\n      Component.popModal($scope, '修改', 'add-req-modal').result.then(function() {\n        _($scope.dataLevelReqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.id;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.id;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\n\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\n\n        Http.updateRequirementInfo(_httpPublishParams).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getDeptRequirementList();\n          } else {\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n  }\n])\n\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.confirm', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n  function($cookies, $scope, $stateParams, Http, Component) {\n    $scope.Modal = {};\n    $scope.DeptRequirementConfirm = {};\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpConfirmParams.skip = ($scope.Paging.currentPage - 1) * _httpConfirmParams.limit;\n      getDeptRequirementConfirmList(_httpConfirmParams);\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      $scope.reqConfirmPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requirementConfirmList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n    $scope.searchDeptReqConfirmByName = function() {\n      _httpConfirmParams.requiement_name = $scope.DeptRequirementConfirm.req_name_filter;\n      _httpConfirmParams.limit = 10;\n      _httpConfirmParams.skip = 0;\n      getDeptRequirementConfirmList();\n    }\n\n    Http.getDeptInfoResourceList().then(function(result) {\n      console.log(result);\n      $scope.depInfoResourceList = result.data.body[0].results;\n\n      //  $scope.Paging.totalItems = data.head.total;\n    });\n\n    $scope.toConfirm = function(item) {\n      // get requirement detail\n      $scope.Modal.ReqDetail = item;\n      $scope.Modal.ReqResponse = {};\n      console.log($scope.depInfoResourceList.length);\n      if($scope.depInfoResourceList.length == 0) {\n        $scope.Modal.ReqResponse.resource_id = '';\n        $scope.errorMsg = '本部门还未发布任何信息资源';\n        $scope.dataQuotaIdNull = true;\n      }\n      else{\n        $scope.Modal.ReqResponse.resource_id = $scope.depInfoResourceList[0].id;\n      }\n\n      Component.popModalConfirm($scope, '', 'confirm-req-modal').result.then(function() {\n        console.log($scope.Modal.ReqResponse);\n        $scope.Modal.ReqResponse.requiement_id = item.id;\n\n        Http.updateRequirement($scope.Modal.ReqResponse).then(function(result) {\n          if (200 == result.data.head.status) {\n            if ($scope.Modal.ReqResponse.status == 1) {\n              // 保存需求响应\n              Http.saveReqResponse({\n                requiement_id: item.id,\n                resource_id: $scope.Modal.ReqResponse.resource_id\n              }).then(function(saveResult) {\n                if (200 == saveResult.data.head.status) {\n                  alert('保存成功！');\n                  getDeptRequirementConfirmList();\n                } else {\n                  alert('保存失败！');\n                  getDeptRequirementConfirmList();\n                }\n              })\n            } else {\n              alert('保存成功！');\n              getDeptRequirementConfirmList();\n            }\n\n          } else {\n            alert('保存失败');\n          }\n        })\n      });\n    }\n\n  }\n])\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.detail', [ '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n    function( $scope, $stateParams, Http, Component) {\n      console.log($stateParams.ID);\n      Http.getReqDetail({\n        requiement_id: $stateParams.ID\n      }).then(function(result) {\n        console.log(result.data.body[0]);\n        $scope.ReqDetail = result.data.body[0];\n      })\n    }\n  ])\n  /* HTTP Factory */\nDepartmentReq.factory('Department.Requirement.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function publishRequirement(data) {\n      return $http.post(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    // 需求确认修改状态\n    function updateRequirement(data) {\n      return $http.put(\n        path + '/data_requiement_ok', {\n          data: data\n        }\n      )\n    }\n\n    // 修改需求信息\n    function updateRequirementInfo(data) {\n      return $http.put(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    function saveReqResponse(data) {\n      return $http.post(\n        path + '/data_requiement_response', {\n          data: data\n        }\n      )\n    }\n\n    function getDeptInfoResourceList(params) {\n      return $http.get(\n        path + '/info_resource_list', {\n          params: params\n        }\n      )\n    }\n\n    function getReqDetail(params) {\n      return $http.get(\n        path + '/data_requiement_detail', {\n          params: params\n        }\n      )\n    }\n\n    function getResponseList(params) {\n      return $http.get(\n        path + '/requirement/requireResponseList', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function deleteRequirement(id) {\n      return $http.delete(\n        path + '/data_requiement', {\n          data: id\n        }\n      )\n    }\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getReqUpdatePeriod(params) {\n      return $http.get(\n        path + '/requiement_update_period', {\n          params: params\n        }\n      )\n    }\n\n    function getReqAreaLevel(params) {\n      return $http.get(\n        path + '/requiement_area_level', {\n          params: params\n        }\n      )\n    }\n    return {\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      publishRequirement: publishRequirement,\n      getReqDetail: getReqDetail,\n      getResponseList: getResponseList,\n      updateRequirement: updateRequirement,\n      updateRequirementInfo: updateRequirementInfo,\n      saveReqResponse: saveReqResponse,\n      getDeptInfoResourceList: getDeptInfoResourceList,\n      getDepartmentList: getDepartmentList,\n      deleteRequirement: deleteRequirement,\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getReqUpdatePeriod: getReqUpdatePeriod,\n      getReqAreaLevel: getReqAreaLevel\n    }\n  }\n]);\n\n\n/* Component */\nDepartmentReq.service('Department.Requirement.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal for confirm\n    function popModalConfirm(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstanceConfirm = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        if (isValid) {\n          modalInstanceConfirm.close(scope.Modal);\n        } else {\n          return;\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstanceConfirm.dismiss();\n      };\n      return modalInstanceConfirm;\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        if (isValid && scope.reqParent.outputDeptList.length > 0) {\n          modalInstance.close(scope.Modal);\n        } else {\n          scope.error = true;\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal,\n      popModalConfirm: popModalConfirm\n    }\n  }\n])\n","'use strict';\nvar DepartmentShare = angular.module('DepartmentShare', ['ui.router']);\n\n/** InventoryDetail Controller */\nDepartmentShare.controller('DepartmentShare.Controller.Main', [ '$scope', 'DepartmentShare.Service.Http',\n  function( $scope, Http) {\n    $scope.DepartInfoResource = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentShareList(_httpParams);\n    }\n\n    function getDepartmentShareList(_httpParams) {\n      $scope.sharePromise = Http.shareInfoResourceList(_httpParams).then(function(result) {\n        $scope.depShareList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n    //init\n    getDepartmentShareList(_httpParams);\n\n    // resource format all\n    $scope.getResFormatAll = function() {\n      $scope.resFormatMainSelection = [];\n      _httpParams.re_format = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvMainSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // social open all\n    $scope.getSocialOpenAll = function() {\n      $scope.socialOpenMainSelection = [];\n      _httpParams.social_open_flag = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // share frequency all\n    $scope.getShareFreqAll = function() {\n      $scope.shareFreqSelection = [];\n      _httpParams.update_period = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // secret flag all\n    $scope.getSecretFlagAll = function() {\n      $scope.secretFlagMainSelection = [];\n      _httpParams.issecret = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by resource format\n    $scope.resFormatMainSelection = [];\n    $scope.getInfoResourceByResFormat = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.resFormatMainSelection = [];\n      } else {\n        $scope.resFormatMainSelection = item.id;\n      }\n      _httpParams.re_format = $scope.resFormatMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by share frequency\n    $scope.shareFreqSelection = [];\n    $scope.getInfoResourceListBySF = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareFreqSelection = [];\n      } else {\n        $scope.shareFreqSelection = item.id;\n      }\n      _httpParams.update_period = $scope.shareFreqSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvMainSelection = [];\n    $scope.getInfoResourceListBySl = function(item) {\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvMainSelection = [];\n      } else {\n        $scope.shareLvMainSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by social open flag\n    $scope.socialOpenMainSelection = [];\n    $scope.getInfoResourceListBySO = function(item) {\n      var idx = $scope.socialOpenMainSelection.indexOf(item.dict_code);\n      if (idx > -1) {\n        $scope.socialOpenMainSelection = [];\n      } else {\n        $scope.socialOpenMainSelection = item.dict_code;\n      }\n      _httpParams.social_open_flag = $scope.socialOpenMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by secret flag\n    $scope.secretFlagMainSelection = [];\n    $scope.getInfoResourceListBySecFlag = function(item) {\n      var idx = $scope.secretFlagMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.secretFlagMainSelection = [];\n      } else {\n        $scope.secretFlagMainSelection = item.id;\n      }\n      _httpParams.issecret = $scope.secretFlagMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaMainSelection = [];\n      _httpParams.area_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaMainSelection = [];\n    $scope.getInfoResourceListByAP = function(item) {\n      var idx = $scope.areaMainSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaMainSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaMainSelection.push(item.id);\n      }\n\n      _httpParams.area_level = $scope.areaMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchDeptInfoResourceByName = function() {\n      _httpParams.resource_name = $scope.DepartInfoResource.resource_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var SECRET_FLAG = 5;\n    var RESOURCE_FORMAT = 11;\n    var SOCIAL_OPEN_FLAG = 14;\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.socialOpenList = result.data.body;\n    });\n\n  }\n])\n\n\n// Department share detail controller\nDepartmentShare.controller('DepartmentShare.Controller.detail', [ '$scope', 'DepartmentShare.Service.Http', '$stateParams',\n  function( $scope, Http, $stateParams) {\n    // get department share detail\n    Http.getQuotaDetail({\n      data_quota_id: $stateParams.ID\n    }).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n    })\n\n  }\n])\n\n/* HTTP Factory */\nDepartmentShare.factory('DepartmentShare.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function shareInfoResourceList(params) {\n      return $http.get(\n        path + '/share_list', {\n          params: params\n        }\n      )\n    };\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    };\n    function followDepartment(id) {\n      return $http.post(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    };\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n    function cancelFollowDepartment(id) {\n      return $http.delete(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    };\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      shareInfoResourceList: shareInfoResourceList,\n      getQuotaDetail: getQuotaDetail,\n      followDepartment: followDepartment,\n      cancelFollowDepartment: cancelFollowDepartment\n    }\n  }\n]);\n","'use strict';\nvar SystemUser = angular.module('Department.SystemUser', ['ui.router']);\n\n/** Main Controller */\nSystemUser.controller('Department.SystemUser.Controller.Main', ['$scope', '$q', 'Department.SystemUser.Service.Http', 'Department.SystemUser.Service.Component', '$uibModal',\n  function($scope, $q, Http, Component, $uibModal) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n\n    function getUserList() {\n      Http.getUserList().then(function(result) {\n        $scope.users = result.data.body;\n        $scope.DepUserTotal =result.data.head.total;\n      });\n    }\n    // Http.getDepartmentList().then(function(result) {\n    //   $scope.deptList = result.data.body;\n    // });\n\n    // init\n    getUserList();\n\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n\n      Component.popModal($scope, '添加', 'add-user-modal').result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n            getUserList();\n          }\n          else{\n            alert('添加失败');\n          }\n        })\n      });\n\n    }\n\n    $scope.searchUser = function(){\n      var username= $scope.username;\n      alert(username);\n      // http.getUser({\n      //   USERNAME: username,\n      // })then(function(result) {\n      //   if(200 == result.data.head.status){\n      //     $scope.users = result.data.body;\n      //     $scope.DepUserTotal =result.data.head.total;\n      //   }else {\n      //     alert(\"输入错误，请\");\n      //   }\n      //\n      // });\n    }\n\n    $scope.updateUser = function(user) {\n      user.DEP_NAME = null;\n      $scope.sysUser = user;\n      Component.popModal($scope, '修改', 'add-user-modal').result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getUserList();\n          }\n          else{\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n    $scope.deleteUser = function(user) {\n      console.log(user);\n      var fig = confirm(\"确定要删除吗？\");\n      if (fig) {\n        Http.deleteUser(user).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n            getUserList();\n          }\n          else{\n            alert('删除失败！');\n          }\n          getUserList();\n        })\n      }\n    }\n\n\n  }\n])\n\n\n/* HTTP */\nSystemUser.factory('Department.SystemUser.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getUserList() {\n      return $http.get(\n        path + '/user'\n      )\n    };\n    function getUser(params) {\n      return $http.get(\n        path + '/user', {\n          params: params\n        }\n\n      )\n    };\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/user', {\n          data: data\n        }\n      )\n    };\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/dep/'\n      )\n    }\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/user/' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/user', {\n            data: {\"ID\":data.ID}\n        }\n      )\n    }\n    return {\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUser:getUser\n    }\n  }\n]);\n\n/* Component */\nSystemUser.service('Department.SystemUser.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n"],"sourceRoot":"/source/"}