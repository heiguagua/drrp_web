{"version":3,"sources":["app.js","config.js","admin/department.js","admin/main.js","admin/user.js","common/dashboard.js","common/login.js","common/main.js","data-quota/detail.js","data-quota/list.js","data-quota/main.js","department/audit.js","department/inventory.js","department/main.js","department/requirement.js","department/share.js","department/user.js"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","$httpProvider","$provide","interceptors","push","$q","request","withCredentials","requestError","rejection","response","when","result","data","head","status","sessionStorage","message","window","location","href","responseError","otherwise","state","url","templateUrl","controller","cache","reload","run","$rootScope","$on","event","toState","toParams","fromState","fromParams","name","token","Config","constant","path","AdminDepartment","$scope","$stateParams","Http","Component","$uibModal","$state","getDepartmentList","_httpParams","then","AdminDepartments","body","getDepTotal","depTotal","number","Paging","totalItems","Modal","previousDepNames","areaNames","maxSize","itemsPerPage","limit","skip","pageChanged","currentPage","AllDepartments","getSysDict","dict_category","types","placeholder","dep_sn","order_by","dep_name","dep_short_name","dep_en_name","contacts","contact_phone","addDepartmentModal","department","parent_id","area_code","dep_type","promise","popModal","opened","TypeArea","index","_","findIndex","o","id","department1","validDepName","depName","deps","i","length","validPhone","reg","test","saveDepartment","alert","updateDepartment","AdminDep","remove","dep","deleteDepartment","flag","confirm","go","searchDepartment","sysdepname","total","factory","$http","API","params","get","post","put","service","popAlert","scope","info","Alerts","type","timeout","CloseAlert","splice","modalInstance","open","animation","backdrop","size","isValid","close","cancel","dismiss","Admin","$cookies","User","JSON","parse","titleName","AdminUser","getUserList","users","getUserTotal","dep_id","LoginUser","tatol","UserTotal","deptList","password","password1","personName","organization","organization_code","phone","email","remark","addUserModal","sysUser","prom","validUser","user","username","getUserOrganizationCode","organizationArray","split","validPword","validEmail","invalid","saveUser","updateUser","getUserOrganizationIsEqual","isexists","Password","password_1","password_2","password_3","password_pre","p2","validPword1","validatePassword","UpdatePassword","searchUser","sysusername","deleteUser","Dashboard","getDepartments","Bureaus","DataquotaSummary","getDataquotaSummary","DataRequirementSummary","getDataRequirementSummary","SummaryDataQuota","SummaryRequirement","getDataQuotaNew","NewIndicators","getDataRequirementNew","Requirements","select","param","departmentID","resource_dep_id","getDataQuota","followDepIndicators","results","getUserDep","followDeps","followDepId","directive","restrict","template","link","element","attr","summary","myChart","echarts","init","find","option","tooltip","trigger","formatter","series","radius","label","normal","position","textStyle","color","labelLine","show","value","dep_resource","month_increment_dpet_resource","selected","total_resource","month_increment_resource","setOption","department_number","department_number_inc","requiement_number","requiement_number_inc","QInventoryStatistic","DEPARTMENT","INVENTORY","REQUIREMENT","legend","xAxis","yAxis","min","max","interval","axisLabel","Login","removeItem","alerts","msg","closeAlert","submit","valid","loginSubmitted","login","loginUser","stringify","console","log","sessionToken","loginError","Main","DataQuotaDetail","getDataQuotaDetailByDepID","getDataQuotaExampleByDepID","resource_id","DataQuotaExample","DataQuotaList","StateParams","getDataQuotaList","DataQuotas","DataQuotasTotal","count","resource_count","item_count","getDataQuotaListByFilter","httpParams","currentDepID","initPaging","assign","currentDepName","currentDep","resourceFormatActiveAll","ShareLevelActiveAll","openToSocietyActiveAll","ShareFrequencyActiveAll","DataLevelActiveAll","isScretActiveAll","Retrieval","searchTarget","resource_name","TargetDataQuotaName","DataQuotaApplyInfo","data_quota_id","getDataQuotaApplyInfo","info_resource_id","SHARE_FREQUENCY","DATA_LEVEL","SHARE_LEVEL","RESOURCE_FORMAT","SOCIAL_OPEN_FLAG","SECRET_FLAG","getSystemDictByCatagory","resourceFormats","openToSocietys","isScrets","ShareLevels","ShareFrequencys","DataLevels","filterParams","resourceFormatFilter","resourceFormatActive","re_format","ShareLevelFilter","ShareLevelActive","share_level","openToSocietyFilter","openToSocietyActive","social_open_flag","indexOf","item","update_period","ShareFrequencyActive","ShareFrequencyFilter","idx","area_level","DataLevelActive","DataLevelFilter","isScretFilter","isScretActive","issecret","DataQuota","scrollTo","treeOptions","nodeChildren","dirSelectable","injectClasses","ul","li","liSelected","iExpanded","iCollapsed","iLeaf","labelSelected","menu","list","menuRole","OcupationList","menuArea","areaList","Audit","getAuditList","auditPromise","auditList","resourceCount","InfoResource","searchInfoResourceByName","resource_name_filter","TabItemShow","TabRequireShow","AuditInfo","audit_opinion","getDepartInfoResList","RESOURCEID","ResourceRes","InfoResourceDetail","apply_dep_name","APPLYDEP","apply_time","APPLYTIME","InfoItemShow","getInfoItemList","InfoItems","submitAudit","audit_status","audit_id","AUDITID","updateAuditDetail","auditError","getInfoResourceDetail","getQuotaRequirement","DInventory","getDeptInfoResourceList","infoResourceList","DepartInfoResource","secretFlagList","shareFrequencyList","shareLevelList","resourceFormatList","dataLevelList","socialOpenList","getResFormatAll","resFormatMainSelection","getShareLevelAll","shareLvMainSelection","getSocialOpenAll","socialOpenMainSelection","getShareFreqAll","shareFreqSelection","getSecretFlagAll","secretFlagMainSelection","getInfoResourceByResFormat","getInfoResourceListBySF","getInfoResourceListBySl","getInfoResourceListBySO","dict_code","getInfoResourceListBySecFlag","getSpatialAll","areaMainSelection","getInfoResourceListByAP","searchDeptInfoResourceByName","deleteInfoResource","resourceId","deleteConfirm","resourceid","forEach","shareFreqDictName","dict_name","update_period_name","toString","RESOURCE_CATEGORY","SHARE_TYPE","SHARE_METHOD","ITEM_TYPE","LEVEL_AUTH","LEVEL_ALL_OPEN","RESOURCE_FORMAT_DATA","RESOURCE_FORMAT_OTHER","SHARE_METHOD_OTHER","DEP_ID","DEP_NAME","ORG_NAME","ORG_CODE","alias","rel_category","secret_flag","meter_unit","calculate_method","resource_format_other","share_method_other","social_open_limit","linkman","ResourceItemList","ResourceItemConfigList","resNameExist","checkResName","res","resourceCategoryList","resourceCategoryRelList","shareTypeList","shareMethodList","itemTypeList","addInfoResource","submitted","InfoResourceAddObj","InfoResource_RelationConfig","InfoResourceApplyInfo","resItemAddBtn","category","dataLevelSelection","sys_dict","InfoResourceId","sys_dict_id","obj_type","shareDeps","map","outputDeptList","share_dep","apply_dep","item_ord","InfoItem_RelationConfig","InfoItem","savePromise","saveInfoResource","resItemUpdateBtn","resource_format","getResourceAreaLevel","getResourceUpdatePeriod","getResourceShareDeps","authDepts","depShow","allItem","authItem","ticked","itemConfig","InfoItemId","item_name","updateInfoResource","updatePromise","editItems","ResItemListShow","addResourceItem","shareFreqEmpty","itemAdded","ResourceItem","shareFreqItemSelection","shareFreqItemObjSelection","parent","itemNameExist","item_type","$watch","n","item_type_name","secret_flag_name","checkItemName","updateItem","itemUpdated","secretFlag","itemType","copy","deleteItem","deleteFlag","showHideDeps","ev","socialOpenFlag","shareMethodOtherShow","showHideShareMethodOther","share_method","resFormatOtherShow","showHideResAddBtn","toggleDataLevelSelection","toggleShareFreqSelection","toggleShareFreqItemSelection","updateInfoItem","getItemUpdatePeriod","$parse","attrs","model","fileModel","modelSetter","parentIvntObj","bind","rgx","fileSuffix","files","ext","substring","lastIndexOf","fileNameError","$apply","Department","$sce","toFollowDep","depSelect","followDeptList","parentObj","outputAllDeptList","followDep","follow_dep_id","followDepts","userdep","mainAuditPromise","toAuditList","auditTotal","getDeptRequirementConfirmList","_httpConfirmParams","response_dep_id","mainReqPromise","getDepartmentRequirementList","requireToConfirmList","reqTotal","getDepDataQuotaTotal","Count","auditMore","reqMore","getFollowDepList","uniq","getDepartmentFollowList","deptAllList","icon","outItem","$broadcast","openFn","DepartmentReq","getDeptRequirementList","reqPromise","requirementList","DeptRequirement","toggleDataLevelReqSelection","dataLevelReqSelection","publishReq","DepRequirment","_httpPublishParams","dataRelationConfig","reqParent","error","req_sys_dict","datarequiementId","requiement_name","res_dep_id","dataRequiement","publishRequirement","searchDeptReqByName","req_name_filter","deleteReq","deleteRequirement","requiement_id","updateReq","getReqUpdatePeriod","getReqAreaLevel","updateRequirementInfo","reqConfirmPromise","requirementConfirmList","DeptRequirementConfirm","searchDeptReqConfirmByName","depInfoResourceList","toConfirm","ReqDetail","ReqResponse","errorMsg","dataQuotaIdNull","popModalConfirm","updateRequirement","saveReqResponse","saveResult","ID","getReqDetail","getResponseList","modalInstanceConfirm","DepartmentShare","getDepartmentShareList","sharePromise","shareInfoResourceList","depShareList","getQuotaDetail","followDepartment","cancelFollowDepartment","SystemUser","DepUserTotal","fig","getUser"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n/* Bootstrap Application */\nvar app = angular.module('app', [\n  'Config',\n  'ui.router',\n  'ui.bootstrap',\n  'treeControl',\n  'isteven-multi-select',\n  'Login',\n  'Main',\n  'Dashboard',\n  'Admin',\n  'Admin.User',\n  'Admin.Department',\n  'Department',\n  'DataQuota',\n  'DataQuotaList',\n  'DataQuotaDetail',\n  'Department.Inventory',\n  'Department.Audit',\n  'Department.Requirement',\n  'DepartmentShare'\n]);\n\napp.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$provide',\n  function($stateProvider, $urlRouterProvider, $httpProvider, $provide) {\n    /** HTTP Interceptor */\n    $httpProvider.interceptors.push(['$q',\n      function($q) {\n        return {\n          'request': function(config) {\n            config.withCredentials = true;\n            return config;\n          },\n          'requestError': function(rejection) {\n            return rejection;\n          },\n          'response': function(response) {\n            $q.when(response, function(result){\n              if( response.data && typeof response.data==='object'){\n                if(result.data.head.status===300){\n                  sessionStorage.message = '登录超时，请重新登录！';\n                  window.location.href='/build';\n                };\n              };\n            });\n            return response;\n          },\n          'responseError': function(rejection) {\n            return rejection;\n          }\n        };\n      }\n    ]);\n    /** Config Router */\n    $urlRouterProvider.otherwise('/login');\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        templateUrl: 'views/common/login.html',\n        controller: 'Login.Controller.Main'\n      })\n      .state('main', {\n        url: '/main',\n        templateUrl: 'views/common/main.html',\n        controller: 'Main.Controller.Main'\n      })\n      .state('main.dashboard', {\n        url: '/dashboard',\n        templateUrl: 'views/common/dashboard.html',\n        controller: 'Dashboard.Controller.Main'\n      })\n      .state('main.admin', {\n        url: '/admin',\n        templateUrl: 'views/admin/main.html',\n        controller: 'Admin.Controller.Main'\n      })\n      .state('main.admin.department', {\n        url: '/dashboard',\n        templateUrl: 'views/admin/department.html',\n        controller: 'Admin.Department.Controller.Main'\n      })\n      .state('main.admin.user', {\n        url: '/user',\n        templateUrl: 'views/admin/user.html',\n        controller: 'Admin.User.Controller.Main'\n      })\n      .state('main.data-quota', {\n        url: '/data-quota',\n        templateUrl: 'views/data-quota/main.html',\n        controller: 'DataQuota.Controller.Main'\n      })\n      .state('main.data-quota.list', {\n        url: '/list/:resource_dep_id/:dep_name',\n        templateUrl: 'views/data-quota/list.html',\n        controller: 'DataQuotaList.Controller.Main'\n      })\n      .state('main.data-quota.detail', {\n        url: '/detail/:resource_id',\n        templateUrl: 'views/data-quota/detail.html',\n        controller: 'DataQuotaDetail.Controller.Main'\n      })\n      .state('main.department', {\n        url: '/department',\n        templateUrl: 'views/department/main.html'\n      })\n      .state('main.department.summary', {\n        url: '/summary',\n        cache:'false',\n        reload: true,\n        templateUrl: 'views/department/summary.html',\n        controller: 'Department.Controller.Main'\n      })\n      .state('main.department.inventory', {\n        url: '/inventory',\n        cache:'false',\n        templateUrl: 'views/department/inventory.html',\n        controller: 'Department.Inventory.Controller.Main'\n      })\n      .state('main.department.inventory.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/inventory-publish.html',\n        controller: 'Department.Inventory.Controller.publish'\n      })\n      .state('main.department.inventory.update', {\n        url: '/update/:item',\n        templateUrl: 'views/department/inventory-update.html',\n        controller: 'Department.Inventory.Controller.publish'\n      })\n      .state('main.department.detail', {\n        url: '/detail/:item',\n        cache:'false',\n        templateUrl: 'views/department/inventory-detail.html',\n        controller: 'Department.Inventory.Controller.detail'\n      })\n      .state('main.department.share', {\n        url: '/share',\n        templateUrl: 'views/department/share.html',\n        controller: 'DepartmentShare.Controller.Main'\n      })\n      .state('main.department.share.detail', {\n        url: '/detail/:item',\n        templateUrl: 'views/department/share-detail.html',\n        controller: 'DepartmentShare.Controller.detail'\n      })\n      .state('main.department.requirementConfirm', {\n        url: '/requirement-confirm',\n        templateUrl: 'views/department/requirement-confirm.html',\n        controller: 'Department.Requirement.Controller.confirm'\n      })\n      .state('main.department.requirement', {\n        url: '/requirement',\n        templateUrl: 'views/department/requirement.html',\n        controller: 'Department.Requirement.Controller.Main'\n      })\n      .state('main.department.requirement.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/requirement-publish.html'\n      })\n      .state('main.department.requirement.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/requirement-detail.html',\n        controller: 'Department.Requirement.Controller.detail'\n      })\n      .state('main.department.audit', {\n        url: '/audit',\n        cache:'false',\n        templateUrl: 'views/department/audit.html',\n        controller: 'Department.Audit.Controller.Main'\n      })\n      .state('main.department.audit.info', {\n        url: '/info/:AUDITID/:RESOURCEID/:APPLYTIME/:APPLYDEP',\n        templateUrl: 'views/department/audit-info.html',\n        controller: 'Department.Audit.Controller.info'\n      })\n\n  }\n]);\n\napp.run(['$rootScope', function($rootScope){\n  $rootScope.$on('$stateChangeStart',\n    function(event, toState, toParams, fromState, fromParams){\n      if(toState.name!=='login'){\n        if(!sessionStorage.token){\n          window.location.href='/build';\n        };\n      };\n    });\n}]);\n","'use strict';\n/* Application Configration */\nvar Config = angular.module('Config', []);\n\nConfig.constant('API', {\n  // path: 'http://localhost:8080/drrp/api' //发布\n   path: 'http://172.16.1.78:8080/api' //测试1\n  // path: 'http://192.168.9.43:8080/api' //测试2\n});\n","'use strict';\nvar AdminDepartment = angular.module('Admin.Department', ['ui.router']);\n\n/** DepartmentReq Controller */\nAdminDepartment.controller('Admin.Department.Controller.Main', ['$rootScope', '$scope', '$stateParams','AdminDepartment.Service.Http', 'AdminDepartment.Service.Component', '$uibModal', '$state',\n  function($rootScope, $scope, $stateParams, Http, Component, $uibModal, $state) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.previousDepNames = [];\n    $scope.areaNames = [];\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentList(_httpParams);\n    }\n    //pagination\n    function getDepartmentList(_httpParams) {\n      Http.getDepartmentList(_httpParams).then(function(result) {\n        $scope.AdminDepartments = result.data.body;\n      });\n    }\n\n    // init\n    getDepartmentList(_httpParams);\n    function getDepTotal(){\n      Http.getDepTotal({\n      }).then(function(result) {\n        $scope.depTotal = result.data.body[0].number;\n        $scope.Paging.totalItems = $scope.depTotal;\n      });\n    }\n    getDepTotal();\n    Http.getDepartmentList().then(function(result) {\n      $scope.AllDepartments = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"7\"\n    }).then(function(result) {\n      $scope.types = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"9\"\n    }).then(function(result) {\n      $scope.areaNames = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.dep_sn = \"必填\";\n    $scope.placeholder.order_by = \"必填\";\n    $scope.placeholder.dep_name = \"必填\";\n    $scope.placeholder.dep_short_name = \"必填\";\n    $scope.placeholder.dep_en_name = \"必填\";\n    $scope.placeholder.contacts = \"必填\";\n    $scope.placeholder.contact_phone = \"必填\";\n\n    // add Department\n    $scope.addDepartmentModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.department = {}; // Clean scope of modal\n      $scope.department.dep_en_name=\"anquanting.png\";\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      var promise = Component.popModal($scope, '添加', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n      });\n      promise.result.then(function() {\n        Http.saveDepartment($scope.department).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('添加失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getDepartmentList(_httpParams);\n          getDepTotal();\n        })\n      });\n    }\n    $scope.updateDepartment = function(AdminDep) {\n      $scope.department = AdminDep;\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      $scope.department.dep_en_name=\"anquanting.png\";\n      _.remove($scope.AllDepartments, function(dep) {\n        return (dep.dep_name == AdminDep.dep_name);\n     });\n      var promise = Component.popModal($scope, '修改', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n\n      });\n      promise.result.then(function() {\n        Http.updateDepartment($scope.department).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getDepartmentList(_httpParams);\n        })\n    });\n    }\n\n    $scope.deleteDepartment = function(AdminDep) {\n      var flag = confirm(\"确定要删除吗？\");\n      if (flag) {\n        Http.deleteDepartment(AdminDep).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n          }\n          else{\n            alert('删除失败！');\n          }\n          $state.go(\"main.admin.department\", {}, {\n            reload: true\n          });\n        })\n      }\n    }\n\n    //search department\n    $scope.searchDepartment = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.sysdepname = $scope.dep_name;\n      if($scope.dep_name==null){\n        getDepTotal();\n        getDepartmentList(_httpParams);\n      }else{\n        Http.getDepartmentList(_httpParams).then(function(result) {\n          if(result.data.head.total >=1){\n            $scope.AdminDepartments = result.data.body;\n            $scope.depTotal = result.data.head.total;\n            $scope.Paging.totalItems =  $scope.depTotal;\n          }else {\n            alert(\"系统没有查到'\"+$scope.dep_name+\"'这个部门，请重新输入\");\n            $scope.dep_name = \"\";\n            $state.go(\"main.admin.department\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n\n\n/* HTTP */\nAdminDepartment.factory('AdminDepartment.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params:params\n        }\n      )\n    };\n\n    function getDepTotal() {\n      return $http.get(\n        path + '/sys_dep/count'\n      )\n    };\n    function saveDepartment(data) {\n      return $http.post(\n        path + '/sys_dep', {\n          data: data\n        }\n      )\n    };\n    function getSysDict(params){\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    }\n    function updateDepartment(data) {\n      return $http.put(\n        path + '/sys_dep' , {\n          data: data\n        }\n      )\n    }\n    function deleteDepartment(data) {\n      return $http.delete(\n        path + '/sys_dep', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n\n    return {\n      getDepartmentList: getDepartmentList,\n      getDepTotal: getDepTotal,\n      saveDepartment: saveDepartment,\n      getSysDict: getSysDict,\n      updateDepartment: updateDepartment,\n      deleteDepartment: deleteDepartment\n    }\n  }\n]);\n\n/* Component */\nAdminDepartment.service('AdminDepartment.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.department\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Admin = angular.module('Admin', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdmin.controller('Admin.Controller.Main', ['$cookies', '$scope', '$stateParams',\n  function($cookies, $scope, $stateParams) {\n       var User = JSON.parse($cookies.get('User'));\n       if(User.id === \"e147f177-1e83-11e6-ac02-507b9d1b58bb\"){\n         $scope.titleName =\"用户/部门管理\";\n       }else{\n         $scope.titleName = \"用户管理\";\n       }\n  }\n])\n","'use strict';\nvar AdminUser = angular.module('Admin.User', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdminUser.controller('Admin.User.Controller.Main', ['$cookies', '$scope', '$q', '$stateParams','AdminUser.Service.Http', 'AdminUser.Service.Component','$uibModal','$state',\n  function($cookies, $scope, $q, $stateParams, Http, Component, $uibModal, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_id);\n    var dep_name= ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_name);\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit =10;\n    _httpParams.skip = 0;\n    _httpParams.dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : dep_id);\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getUserList(_httpParams);\n    }\n\n\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n    function getUserList(_httpParams) {\n      Http.getUserList(_httpParams).then(function(result) {\n        $scope.users = result.data.body;\n      });\n    }\n    function getUserTotal(){\n      Http.getUserTotal({\n        \"dep_id\" : dep_id\n      }).then(function(result) {\n        if (LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') {\n          var tatol =  result.data.body[0].number - 1 ;\n          $scope.UserTotal = tatol;\n        }else {\n          $scope.UserTotal = result.data.body[0].number;\n        }\n        $scope.Paging.totalItems = $scope.UserTotal;\n      });\n    }\n    // init\n    getUserTotal();\n    getUserList(_httpParams);\n\n    //department\n    Http.getDepartmentList({\n      'dep_name': dep_name\n    }).then(function(result) {\n      $scope.deptList = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.name = \"必填\";\n    $scope.placeholder.password = \"必填\";\n    $scope.placeholder.password1 = \"必填\";\n    $scope.placeholder.personName = \"必填\";\n    $scope.placeholder.organization = \"必填\";\n    $scope.placeholder.organization_code = \"必填，根据机构名称自动生成\";\n    $scope.placeholder.phone = \"必填\";\n    $scope.placeholder.email = \"必填\";\n    $scope.placeholder.remark = \"\";\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n      $scope.sysUser.remark = \"\";\n      var prom = Component.popModal($scope, '添加', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.organization = function(){\n          $scope.placeholder.organization = \"必填\";\n          $scope.placeholder.organization_code = \"必填，根据机构名称自动生成\";\n          $scope.organization = false;\n          var organization = $scope.sysUser.organization ;\n          if(organization){\n            Http.getUserOrganizationCode({\n              \"organization\":organization\n            }).then(function (result){\n              var organizationArray = result.data.body[0].organization_code.split(\",\");\n              if(organizationArray[1]==0){\n                $scope.sysUser.organization_code = organizationArray[0] ;\n              }else{\n                $scope.placeholder.organization = \"机构名称已存在，请重新输入\";\n                $scope.organization = true;\n                $scope.sysUser.organization = \"\";\n              }\n            });\n          }\n        }\n        $scope.Modal.validPword = function (){\n          $scope.placeholder.password1 =\"必填\";\n          $scope.validPword = false;\n          if($scope.sysUser.password!=$scope.sysUser.password1&&$scope.sysUser.password1!=null){\n            $scope.validPword = true;\n            $scope.placeholder.password1 =\"两次输入的密码不同,请重新输入\";\n            $scope.sysUser.password1 =\"\";\n          }\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&($scope.sysUser.phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('保存数据库失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n\n\n\n    }\n    $scope.updateUser = function(user) {\n      $scope.sysUser = user;\n      $scope.sysUser.password1 =0;\n      $scope.sysUser.password = 0;\n      $scope.sysUser.remark = ((user.remark) ?user.remark : \"\");\n      var prom = Component.popModal($scope, '修改', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.organization = function(){\n          $scope.placeholder.organization = \"必填\";\n          $scope.placeholder.organization_code = \"必填，根据机构名称自动生成\";\n          $scope.organization = false;\n          var organization = $scope.sysUser.organization ;\n          var dep_id = $scope.sysUser.dep_id ;\n          if(organization){\n            Http.getUserOrganizationIsEqual({\n              \"organization\":organization,\n              \"dep_id\":dep_id\n            }).then(function (result){\n              if(\"false\" == result.data.body[0].isexists){\n                $scope.placeholder.organization = \"机构名称已存在，请重新输入\";\n                $scope.organization = true;\n                $scope.sysUser.organization =\"\"  ;\n              }else{\n                $scope.organization = false;\n              }\n            });\n          }\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&$scope.sysUser.phone!=null){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getUserList(_httpParams);\n        })\n      });\n    }\n    // $scope.deleteUser = function(user) {\n    //   if(user.id!=LoginUser.id){\n    //     var flag = confirm(\"确定要删除吗？\");\n    //     if (flag) {\n    //       Http.deleteUser(user).then(function(result) {\n    //         _httpParams.limit = 10;\n    //         _httpParams.skip = 0;\n    //         $scope.Paging.currentPage = 0 ;\n    //         if (200 == result.data.head.status) {\n    //           alert('删除成功');\n    //           getUserTotal();\n    //           getUserList(_httpParams);\n    //         }\n    //         else{\n    //           alert('删除失败！');\n    //         }\n    //         $state.go(\"main.admin.user\", {}, {\n    //           reload: true\n    //         });\n    //       })\n    //     }\n    //   }else{\n    //     alert(\"当前登录用户不能删除！\");\n    //   }\n    // }\n\n    $scope.Password = function(user) {\n      $scope.placeholder.password_1 = \"必填\";\n      $scope.placeholder.password_2 = \"必填\";\n      $scope.placeholder.password_3 = \"必填\";\n      var id = 0;\n      id = user.id;\n      $scope.Modal.password_pre = \"\";\n      $scope.Modal.p2 = \"\";\n      $scope.Modal.password = \"\";\n      $scope.password_1 = false;\n      $scope.password_2 = false;\n      $scope.password_3 = false;\n      var prom = Component.popModal($scope, '密码', 'update-password-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validPword1 = function (){\n          $scope.password_1 = false;\n          $scope.placeholder.password_1 =\"必填\";\n          Http.validatePassword({\n            \"id\":id,\n            \"password\":$scope.Modal.password_pre\n          }).then(function(result) {\n            if(result.data.head.total == 0) {\n              $scope.password_1 = true;\n              $scope.placeholder.password_1 =\"原密码不对,请重新输入\";\n              $scope.Modal.password_pre = \"\";\n            }\n          });\n        }\n        $scope.Modal.validPword = function (){\n             $scope.password_3 = false;\n             $scope.placeholder.password_3 =\"必填\";\n             if($scope.Modal.p2!=$scope.Modal.password){\n               $scope.password_3 = true;\n               $scope.placeholder.password_3 = \"两次输入的密码不同,请重新输入\";\n               $scope.Modal.password =\"\";\n             }\n        }\n      });\n\n      prom.result.then(function() {\n        Http.UpdatePassword({\n          \"id\": id,\n          \"password\":$scope.Modal.password\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n    }\n\n    //search user\n    $scope.searchUser = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.dep_id = dep_id;\n      _httpParams.sysusername = $scope.username;\n      if($scope.username==null){\n        getUserTotal();\n        getUserList(_httpParams);\n      }else{\n        Http.getUserList(_httpParams).then(function(result) {\n          if(result.data.head.total >= 1){\n            $scope.users = result.data.body;\n            $scope.UserTotal = result.data.head.total;\n            $scope.Paging.totalItems = $scope.UserTotal;\n          }else{\n            alert(\"系统没有查到'\"+$scope.username+\"'这个用户名，请重新输入\");\n            $state.go(\"main.admin.user\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n/* HTTP */\nAdminUser.factory('AdminUser.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getUserOrganizationCode(params) {\n      return $http.get(\n        path + '/sys_user/organization_code',{\n           params: params\n        }\n      )\n    };\n    function getUserOrganizationIsEqual(params) {\n      return $http.get(\n        path + '/sys_user/organization',{\n           params: params\n        }\n      )\n    };\n    function getUserList(params) {\n      return $http.get(\n        path + '/sys_user',{\n           params: params\n        }\n      )\n    };\n    function getUserTotal(params) {\n      return $http.get(\n        path + '/sys_user/count',{\n           params: params\n        }\n      )\n    };\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params: params\n        }\n      )\n    }\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/sys_user', {\n          data: data\n        }\n      )\n    };\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/sys_user' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/sys_user', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n    function validatePassword(params){\n      return $http.get(\n        path + '/sys_user/password', {\n            params: params\n        }\n      )\n    }\n    function UpdatePassword(data) {\n      return $http.put(\n        path + '/sys_user/password' , {\n          data: data\n        }\n      )\n    }\n    return {\n      getUserOrganizationCode: getUserOrganizationCode,\n      getUserOrganizationIsEqual: getUserOrganizationIsEqual,\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUserTotal: getUserTotal,\n      validatePassword: validatePassword,\n      UpdatePassword: UpdatePassword\n    }\n  }\n]);\n\n/* Component */\nAdminUser.service('AdminUser.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.user\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Dashboard = angular.module('Dashboard', ['ui.router','ui.bootstrap']);\n\n/** Dashboard Controller */\nDashboard.controller('Dashboard.Controller.Main', ['$scope', 'Dashboard.Service.Http',\n  function($scope, Http) {\n    <!-- Bureaus logo grid -->\n    Http.getDepartments().then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Bureaus = result.data.body;\n      }\n    });\n    <!-- #Bureaus logo grid -->\n\n    <!-- ECharts -->\n    $scope.DataquotaSummary = Http.getDataquotaSummary();\n    $scope.DataRequirementSummary = Http.getDataRequirementSummary();\n    Http.getDataquotaSummary().then(function(result){\n      $scope.SummaryDataQuota = result.data.body[0];\n    })\n    Http.getDataRequirementSummary().then(function(result){\n      $scope.SummaryRequirement = result.data.body[0];\n    })\n    <!-- #ECharts -->\n\n    <!-- DataQuota & Requirement Summary -->\n    Http.getDataQuotaNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.NewIndicators = result.data.body;\n      }\n    });\n    Http.getDataRequirementNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Requirements = result.data.body;\n      }\n    });\n    <!-- #DataQuota & Requirement Summary -->\n\n    <!-- DataQuota for Concerned Departments -->\n    // Handle Selected Department\n    $scope.select = function(param){\n      $scope.departmentID = {resource_dep_id: param};\n      Http.getDataQuota({\n        skip: 0, limit: 5,  dep_name: param\n      }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n      });\n    }\n    // Generoted Department\n    Http.getUserDep().then(function(result) {\n        if (200 === result.data.head.status && result.data.body.length >= 1) {\n          $scope.followDeps = result.data.body;\n          return result.data.body[0].id;\n        }else{\n          return 0;\n        }\n      }).then(function(followDepId){\n        Http.getDataQuota({\n          skip: 0,\n          limit: 5,\n          dep_name: followDepId\n        }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n        });\n     });\n     <!-- #DataQuota for Concerned Departments -->\n\n }\n])\n\n/* HTTP Factory */\nDashboard.factory('Dashboard.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaNew(params) {\n      return $http.get(\n        path + '/data_resource/new', {params: params}\n      )\n    };\n    function getDataRequirementNew(params) {\n      return $http.get(\n        path + '/data_requiement/new', {params: params}\n      )\n    };\n    function getDepartments() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    };\n    function getDataquotaSummary(){\n      return $http.get(\n        path + '/data_resource/summary'\n      )\n    };\n    function getDataRequirementSummary(){\n      return $http.get(\n        path + '/data_requiement/summary'\n      )\n    };\n    function getUserDep(params){\n      return $http.get(\n        path + '/department',{params: params}\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/data_quota',{params: params}\n      )\n    };\n\n    return {\n      getDataQuotaNew: getDataQuotaNew,\n      getDataRequirementNew: getDataRequirementNew,\n      getDepartments: getDepartments,\n      getDataquotaSummary: getDataquotaSummary,\n      getDataRequirementSummary: getDataRequirementSummary,\n      getUserDep: getUserDep,\n      getDataQuota: getDataQuota\n    };\n\n  }\n]);\n\n/** Dashboard Directive */\nDashboard.directive('wiservDataQuotaOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataquotaSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '资源提供部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '60%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: true\n                  }\n                },\n                data: [{\n                  value: summary.dep_resource,\n                  name: '提供部门'\n                }, {\n                  value: summary.month_increment_dpet_resource,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '资源总数',\n                type: 'pie',\n                radius: ['70%', '80%'],\n                data: [{\n                  value: summary.total_resource,\n                  name: '资源总数'\n                }, {\n                  value: summary.month_increment_resource,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservRequirementOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataRequirementSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '涉及部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '60%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: summary.department_number,\n                  name: '涉及部门'\n                }, {\n                  value: summary.department_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '需求总数',\n                type: 'pie',\n                radius: ['70%', '80%'],\n                data: [{\n                  value: summary.requiement_number,\n                  name: '需求总数'\n                }, {\n                  value: summary.requiement_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservStatisticChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:100%;height:240px;'></div>\",\n      link: function(scope, element, attr) {\n        scope.QInventoryStatistic.then(function(result) {\n          var DEPARTMENT = result.data.body[0];\n          var INVENTORY = result.data.body[1];\n          var REQUIREMENT = result.data.body[2];\n          var myChart = echarts.init((element.find('div'))[0]);\n          var option = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['资源', '需求']\n            },\n            xAxis: [{\n              type: 'category',\n              name: '数量',\n              data: DEPARTMENT.DEPARTMENT\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '单位',\n              min: 0,\n              max: 30,\n              interval: 30,\n              axisLabel: {\n                formatter: '{value} 个'\n              }\n            }],\n            series: [{\n              name: '资源',\n              type: 'bar',\n              data: INVENTORY.INVENTORY\n            }, {\n              name: '需求',\n              type: 'bar',\n              data: REQUIREMENT.REQUIREMENT\n            }]\n          };\n          myChart.setOption(option);\n        });\n\n      }\n    };\n  }\n]);\n","'use strict';\nvar Login = angular.module('Login', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nLogin.controller('Login.Controller.Main', ['$rootScope', '$cookies', '$scope', '$state', 'Login.Service.Http',\n  function($rootScope, $cookies, $scope, $state, Http) {\n    // Decide login or session delay\n    if(sessionStorage.token){\n      sessionStorage.removeItem('token');\n    }\n    if(sessionStorage.message){\n      $scope.alerts = [\n        {type: 'danger', msg: sessionStorage.message}\n      ];\n      $scope.closeAlert = function(index) {\n        $scope.alerts.splice(index, 1);\n      };\n      sessionStorage.removeItem('message');\n    }\n    // Login validation\n    $scope.Login = {};\n    $scope.Login.submit = function(valid) {\n      $scope.loginSubmitted = false;\n      if (valid) {\n        var username = $scope.Login.username;\n        var password = $scope.Login.password;\n        Http.login({\n          username: username,\n          password: password\n        }).then(function(result) {\n          var loginUser = result.data.body[0];\n          $rootScope.User = loginUser;\n          $cookies.put('User', JSON.stringify(loginUser));\n          console.log(JSON.stringify(loginUser));\n          var sessionToken = result.data.head.token;\n          if(sessionToken){\n            sessionStorage.token = sessionToken;\n          }\n          if (200 == result.data.head.status) {\n            $state.go(\"main.dashboard\");\n          } else {\n            $scope.loginError = true;\n          }\n        });\n      } else {\n        $scope.loginSubmitted = true;\n      }\n    }\n  }\n]);\n\n/* HTTP Factory */\nLogin.factory('Login.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function login(params) {\n      return $http.get(\n        path + '/login', {\n          params: params\n        }\n      )\n    };\n    return {\n      login: login\n    }\n  }\n]);\n","'use strict';\nvar Main = angular.module('Main', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nMain.controller('Main.Controller.Main', ['$scope', '$cookies',\n  function($scope, $cookies) {\n    $scope.User = JSON.parse($cookies.get('User'));\n  }\n]);\n","'use strict';\nvar DataQuotaDetail = angular.module('DataQuotaDetail', ['ui.router']);\n\n/** Main Controller */\nDataQuotaDetail.controller('DataQuotaDetail.Controller.Main', ['$scope', '$state', 'DataQuotaDetail.Service.Http', '$stateParams',\n  function($scope, $state, Http, $stateParams) {\n    // Data Quota Detail\n    Http.getDataQuotaDetailByDepID(\n      $stateParams\n    ).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n    });\n    // Data Quota Example\n    Http.getDataQuotaExampleByDepID(\n      {resource_id: $stateParams.resource_id}\n    ).then(function(result) {\n      $scope.DataQuotaExample = result.data.body;\n    });\n\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaDetail.factory('DataQuotaDetail.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaDetailByDepID(params){\n      return $http.get(\n        path + '/info_resource_detail', { params: params }\n      )\n    };\n    function getDataQuotaExampleByDepID(params){\n      return $http.get(\n        path + '/info_item_detail', { params: params }\n      )\n    };\n    return {\n      getDataQuotaDetailByDepID: getDataQuotaDetailByDepID,\n      getDataQuotaExampleByDepID: getDataQuotaExampleByDepID\n    }\n  }\n]);\n","'use strict';\nvar DataQuotaList = angular.module('DataQuotaList', ['ui.router']);\n\n/** Main Controller */\nDataQuotaList.controller('DataQuotaList.Controller.Main', ['$scope', '$state', 'DataQuotaList.Service.Http', '$stateParams',\n  function($scope, $state, Http, StateParams) {\n    // Get the parameters form ui-router\n    var currentDepID = {resource_dep_id:StateParams.resource_dep_id};\n    var currentDepName = {dep_name:StateParams.dep_name};\n    // Selected department name\n    $scope.currentDep = currentDepName.dep_name;\n    // Params for pagin\n    var initPaging = {limit:10, skip: 0};\n    $scope.Paging = {};\n    $scope.Paging.currentPage = 1;\n    $scope.Paging.itemsPerPage = 10;\n    $scope.Paging.pageChanged = function() {\n      var httpParams = {};\n      _.assign(httpParams, currentDepID, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n      getDataQuotaList(httpParams);\n    };\n    // Get data quota list\n    function getDataQuotaList(_httpParams){\n      Http.getDataQuota(_httpParams).then(function(result) {\n        $scope.DataQuotas = result.data.body[0].results;\n        $scope.DataQuotasTotal = result.data.body[0].count[0].resource_count;\n        $scope.Paging.totalItems = result.data.body[0].count[0].item_count;\n      });\n    };\n    // Init data quota talbe\n    (function initDataQuotaList(){\n        /* Init selected status for filter */\n        $scope.resourceFormatActiveAll = $scope.ShareLevelActiveAll = $scope.openToSocietyActiveAll = $scope.ShareFrequencyActiveAll = $scope.DataLevelActiveAll = $scope.isScretActiveAll= 'active';\n        /* Init ajax parameters*/\n        var httpParams = {};\n        (currentDepID==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n        getDataQuotaList(httpParams);\n    })();\n    // Fetch data quota list by filter\n    function getDataQuotaListByFilter(params){\n      var httpParams = {};\n      (currentDepID.dep_name==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n      _.assign(httpParams, params);\n      getDataQuotaList(httpParams);\n    };\n    // Search for Data Quota Name\n    $scope.Retrieval = function(){\n      var httpParams = {};\n      var searchTarget = {resource_name: $scope.TargetDataQuotaName};\n      (currentDepID==='') ? (_.assign(httpParams, initPaging, searchTarget)) : (_.assign(httpParams, currentDepID, initPaging, searchTarget));\n      getDataQuotaList(httpParams);\n    };\n    // Data quota apply info\n    $scope.DataQuotaApplyInfo = function(data_quota_id) {\n      Http.getDataQuotaApplyInfo({info_resource_id: data_quota_id}).then(function() {\n        // alert('申请中，等待审核');\n        var httpParams = {};\n        _.assign(httpParams, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n        getDataQuotaList(httpParams);\n      });\n    };\n    // Filter generator\n    var SHARE_FREQUENCY = 1, //更新周期\n        DATA_LEVEL = 2, //分地区数据级别\n        SHARE_LEVEL = 3, //共享级别\n        RESOURCE_FORMAT = 11, //信息资源格式\n        SOCIAL_OPEN_FLAG  = 14, //面向社会开放\n        SECRET_FLAG = 5  //是否涉密\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormats = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.openToSocietys = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.isScrets = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.ShareLevels = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.ShareFrequencys = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.DataLevels = result.data.body;\n    });\n    // Handle above filter\n    var filterParams = {};\n\n    /*信息资源格式*/\n    $scope.resourceFormatFilter = function(id, index){\n      $scope.resourceFormatActive = [];\n      $scope.resourceFormatActiveAll = '';\n      $scope.resourceFormatActive[index] = 'active';\n      filterParams.re_format = id;\n      if('ALL'===id){\n        delete filterParams.re_format;\n        $scope.resourceFormatActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 共享级别 */\n    $scope.ShareLevelFilter = function(id, index){\n      $scope.ShareLevelActive = [];\n      $scope.ShareLevelActiveAll = '';\n      $scope.ShareLevelActive[index] = 'active';\n      filterParams.share_level = id;\n      if('ALL'===id){\n        delete filterParams.share_level;\n        $scope.ShareLevelActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n\n    /*面向社会开放*/\n\n    $scope.openToSocietyFilter = function(id, index){\n      $scope.openToSocietyActive = [];\n      $scope.openToSocietyActiveAll = '';\n      $scope.openToSocietyActive[index] = 'active';\n      var idx = filterParams.social_open_flag.indexOf(item.id);\n      filterParams.social_open_flag = id;\n      if('ALL'===id){\n        delete filterParams.social_open_flag;\n        $scope.openToSocietyActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 更新周期（共享频率） */\n    filterParams.update_period = [];\n    $scope.ShareFrequencyActive = [];\n    $scope.ShareFrequencyFilter = function(id, index){\n      if('ALL'===id){\n        filterParams.update_period = [];\n        $scope.ShareFrequencyActiveAll = 'active';\n        $scope.ShareFrequencyActive = [];\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        $scope.ShareFrequencyActiveAll = '';\n        var idx = filterParams.update_period.indexOf(id);\n        ($scope.ShareFrequencyActive[index]==='active')?($scope.ShareFrequencyActive[index]=''):($scope.ShareFrequencyActive[index]='active');\n        if(idx > -1){\n          if(filterParams.update_period.length ===1){\n            $scope.ShareFrequencyActiveAll = 'active';\n            filterParams.update_period = [];\n          }else{\n            filterParams.update_period.splice(idx, 1);\n          }\n        }else{\n          filterParams.update_period.push(id);\n        }\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n\n    /* 分地区数据级别 */\n    filterParams.area_level = [];\n    $scope.DataLevelActive = [];\n    $scope.DataLevelFilter = function(id, index){\n      if('ALL'===id){\n        filterParams.area_level = [];\n        $scope.DataLevelActiveAll = 'active';\n        $scope.DataLevelActive=[];\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        var idx = filterParams.area_level.indexOf(id);\n        $scope.DataLevelActiveAll = '';\n        ($scope.DataLevelActive[index]==='active')?($scope.DataLevelActive[index]=''):($scope.DataLevelActive[index]='active');\n        if(idx > -1){\n          if(filterParams.area_level.length ===1){\n            $scope.DataLevelActiveAll = 'active';\n            filterParams.area_level = [];\n          }else{\n            filterParams.area_level.splice(idx, 1);\n          }\n        }else{\n          filterParams.area_level.push(id);\n        }\n        getDataQuotaListByFilter(filterParams);\n      };\n    };\n    /*是否涉密*/\n    $scope.isScretFilter = function(id, index){\n      $scope.isScretActive = [];\n      $scope.isScretActiveAll = '';\n      $scope.isScretActive[index] = 'active';\n      filterParams.issecret = id;\n      if('ALL'===id){\n        delete filterParams.issecret;\n        $scope.isScretActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaList.factory('DataQuotaList.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', { params: params }\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/resource/sys_dict', { params: params }\n      )\n    };\n    function getDataQuotaApplyInfo(data){\n      return $http.post(\n        path + '/info_resource_apply_info', { data: data }\n      )\n    };\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getDataQuotaApplyInfo: getDataQuotaApplyInfo,\n      getDataQuota: getDataQuota\n    }\n  }\n]);\n","'use strict';\nvar DataQuota = angular.module('DataQuota', ['ui.router']);\n\n/** Main Controller */\nDataQuota.controller('DataQuota.Controller.Main', ['$scope', '$state', 'DataQuota.Service.Http',\n  function($scope, $state, Http) {\n    window.scrollTo(0,0);\n    // Menu configration\n    $scope.treeOptions = {\n      nodeChildren: \"nodes\",\n      dirSelectable: false,\n      injectClasses: {\n        ul: \"a1\",\n        li: \"a2\",\n        liSelected: \"a7\",\n        iExpanded: \"a3\",\n        iCollapsed: \"a4\",\n        iLeaf: \"a5\",\n        label: \"a6\",\n        labelSelected: \"a8\"\n      }\n    }\n    // TypeMenu Generator\n    Http.menu().then(function(result) {\n      if (200 === result.data.head.status) {\n        $scope.list = result.data.body;\n      }\n    });\n    // OcupationMenu Generator\n    Http.menuRole().then(function(result) {\n      if (200 === result.data.head.status) {\n        $scope.OcupationList = result.data.body;\n      }\n    });\n    // AreaMenu Generator\n    Http.menuArea().then(function(result) {\n      if (200 === result.data.head.status) {\n        $scope.areaList = result.data.body;\n      }\n    });\n  }\n]);\n\n/* DataQuota Http Factory */\nDataQuota.factory('DataQuota.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function menu(params) {\n      return $http.get(\n        path + '/menu', { params: params }\n      )\n    };\n    function menuRole(params) {\n      return $http.get(\n        path + '/menu_role', { params: params }\n      )\n    };\n    function menuArea(params) {\n      return $http.get(\n        path + '/menu_area', { params: params }\n      )\n    };\n    return {\n      menu: menu,\n      menuRole: menuRole,\n      menuArea: menuArea\n    }\n  }\n]);\n","'use strict';\nvar Audit = angular.module('Department.Audit', ['ui.router']);\n\n/** Main Controller */\nAudit.controller('Department.Audit.Controller.Main', ['$scope', '$q', 'Department.Audit.Service.Http',\n  function($scope, $q, Http) {\n    $scope.InfoResource = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getAuditList(_httpParams);\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      $scope.auditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.auditList = result.data.body[0].results;\n        $scope.resourceCount = result.data.body[0].count[0].resource_count;\n        $scope.Paging.totalItems = result.data.body[0].count[0].item_count;\n      });\n    }\n\n    $scope.searchInfoResourceByName = function() {\n      _httpParams.resource_name = $scope.InfoResource.resource_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList();\n    }\n\n\n  }\n])\n\n\nAudit.controller('Department.Audit.Controller.info', ['$scope', '$state', '$q', 'Department.Audit.Service.Http', '$stateParams',\n  function( $scope, $state, $q, Http, $stateParams) {\n    $scope.TabItemShow = true;\n    $scope.TabRequireShow = true;\n    $scope.AuditInfo = {};\n    $scope.AuditInfo.audit_opinion = '';\n\n    // 根据id查询信息资源详情\n    Http.getDepartInfoResList({\n      resource_id : $stateParams.RESOURCEID\n    }).then(function(ResourceRes) {\n      $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\n      $scope.InfoResourceDetail.apply_dep_name = $stateParams.APPLYDEP;\n      $scope.InfoResourceDetail.apply_time = $stateParams.APPLYTIME;\n    })\n\n\n    $scope.InfoItemShow = false;\n    Http.getInfoItemList({\n      resource_id: $stateParams.RESOURCEID\n    }).then(function(result) {\n      if (result.data.body.length == 0) {\n        $scope.InfoItemShow = false;\n      } else {\n        $scope.InfoItemShow = true;\n        $scope.InfoItems = result.data.body;\n      }\n    })\n\n\n    $scope.submitAudit = function() {\n      console.log($scope.AuditInfo.audit_status);\n      if(!$scope.AuditInfo.audit_status) {\n        $scope.auditError = true;\n        return;\n      }\n      $scope.AuditInfo.audit_id = $stateParams.AUDITID;\n      Http.updateAuditDetail($scope.AuditInfo).then(function(result) {\n        if (200 == result.data.head.status) {\n          alert('审核成功');\n          $state.go(\"main.department.audit\", {}, {\n            reload: true\n          });\n        } else {\n          alert('审核失败');\n        }\n      });\n    }\n  }\n])\n\n/* HTTP */\nAudit.factory('Department.Audit.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/openinfo_resourcelist', {\n          params: params\n        }\n      )\n    }\n\n    function getInfoResourceDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function updateAuditDetail(data) {\n      return $http.put(\n        path + '/openinfo_resourceok', {\n          data: data\n        }\n      )\n    }\n\n    function getQuotaRequirement(params) {\n      return $http.get(\n        path + '/requiement_detail', {\n          params: params\n        }\n      )\n    }\n    function getInfoItemList(params) {\n      return $http.get(\n        path + '/item_detail', {\n          params: params\n        }\n      )\n    }\n    function getDepartInfoResList(params) {\n      return $http.get(\n        path + '/info_resource_list', {\n          params: params\n        }\n      )\n    }\n    return {\n      getAuditList: getAuditList,\n      getInfoResourceDetail: getInfoResourceDetail,\n      updateAuditDetail: updateAuditDetail,\n      getQuotaRequirement: getQuotaRequirement,\n      getInfoItemList: getInfoItemList,\n      getDepartInfoResList: getDepartInfoResList\n    }\n  }\n]);\n","'use strict';\nvar DInventory = angular.module('Department.Inventory', ['ui.router', 'ngCookies', 'cgBusy']);\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $q, Http) {\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var SECRET_FLAG = 5;\n    var RESOURCE_FORMAT = 11;\n    var SOCIAL_OPEN_FLAG = 14;\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_NAME = LoginUser.dep_id;\n    $scope.DepartInfoResource = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.socialOpenList = result.data.body;\n    });\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    function getDeptInfoResourceList(_httpParams) {\n      //_httpParams.dep_name = DEP_NAME;\n      $scope.promise = Http.getDepartInfoResList(_httpParams).then(function(result) {\n        console.log(result);\n        $scope.infoResourceList = result.data.body[0].results;\n        $scope.resourceCount = result.data.body[0].count[0].resource_count;\n        $scope.Paging.totalItems = result.data.body[0].count[0].item_count;\n      });\n    }\n\n\n    //init\n    getDeptInfoResourceList(_httpParams);\n\n    // resource format all\n    $scope.getResFormatAll = function() {\n      $scope.resFormatMainSelection = [];\n      _httpParams.re_format = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvMainSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // social open all\n    $scope.getSocialOpenAll = function() {\n      $scope.socialOpenMainSelection = [];\n      _httpParams.social_open_flag = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // share frequency all\n    $scope.getShareFreqAll = function() {\n      $scope.shareFreqSelection = [];\n      _httpParams.update_period = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // secret flag all\n    $scope.getSecretFlagAll = function() {\n      $scope.secretFlagMainSelection = [];\n      _httpParams.issecret = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by resource format\n    $scope.resFormatMainSelection = [];\n    $scope.getInfoResourceByResFormat = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.resFormatMainSelection = [];\n      } else {\n        $scope.resFormatMainSelection = item.id;\n      }\n      _httpParams.re_format = $scope.resFormatMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by share frequency\n    $scope.shareFreqSelection = [];\n    $scope.getInfoResourceListBySF = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareFreqSelection.splice(idx, 1);\n      } else {\n        $scope.shareFreqSelection.push(item.id);\n      }\n      _httpParams.update_period = $scope.shareFreqSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvMainSelection = [];\n    $scope.getInfoResourceListBySl = function(item) {\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvMainSelection = [];\n      } else {\n        $scope.shareLvMainSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by social open flag\n    $scope.socialOpenMainSelection = [];\n    $scope.getInfoResourceListBySO = function(item) {\n      var idx = $scope.socialOpenMainSelection.indexOf(item.dict_code);\n      if (idx > -1) {\n        $scope.socialOpenMainSelection = [];\n      } else {\n        $scope.socialOpenMainSelection = item.dict_code;\n      }\n      _httpParams.social_open_flag = $scope.socialOpenMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by secret flag\n    $scope.secretFlagMainSelection = [];\n    $scope.getInfoResourceListBySecFlag = function(item) {\n      var idx = $scope.secretFlagMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.secretFlagMainSelection = [];\n      } else {\n        $scope.secretFlagMainSelection = item.id;\n      }\n      _httpParams.issecret = $scope.secretFlagMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaMainSelection = [];\n      _httpParams.area_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaMainSelection = [];\n    $scope.getInfoResourceListByAP = function(item) {\n      var idx = $scope.areaMainSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaMainSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaMainSelection.push(item.id);\n      }\n\n      _httpParams.area_level = $scope.areaMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchDeptInfoResourceByName = function() {\n      _httpParams.resource_name = $scope.DepartInfoResource.resource_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptInfoResourceList(_httpParams);\n    }\n\n    // delete info resource\n    $scope.deleteInfoResource = function(resourceId) {\n      var deleteConfirm = confirm('确定删除本条信息资源？删除后将不可恢复。');\n      if (deleteConfirm) {\n        Http.deleteInfoResource({\n          resourceid: resourceId\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('删除成功！');\n            getDeptInfoResourceList(_httpParams);\n          } else {\n            alert('删除失败');\n          }\n        })\n      }\n    }\n\n\n  }\n])\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.detail', ['$scope', '$q', 'Department.Inventory.Service.Http', '$stateParams', '$state',\n  function($scope, $q, Http, $stateParams, $state) {\n    console.log($stateParams.item);\n    $scope.InfoItemShow = false;\n    Http.getDepartInfoResList({\n      resource_id : $stateParams.item\n    }).then(function(ResourceRes) {\n      $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\n      Http.getInfoItemList({\n        resource_id: $scope.InfoResourceDetail.id\n      }).then(function(result) {\n        if (result.data.body.length == 0) {\n          $scope.InfoItemShow = false;\n        } else {\n          $scope.InfoItemShow = true;\n          $scope.InfoItems = result.data.body;\n\n          _($scope.InfoItems).forEach(function(item) {\n            var shareFreqDictName = [];\n            _(item.config).forEach(function(config) {\n              shareFreqDictName.push(config.dict_name);\n            })\n            item.update_period_name = shareFreqDictName.toString();\n          })\n        }\n\n\n      })\n    })\n\n\n  }\n])\n\nDInventory.controller('Department.Inventory.Controller.publish', ['$cookies', '$scope', '$stateParams', '$state', '$q', '$uibModal', 'Department.Inventory.Service.Component', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $stateParams, $state, $q, $uibModal, Component, Http) {\n    var RESOURCE_CATEGORY = 10;\n    var SHARE_TYPE = 12;\n    var SHARE_METHOD = 13;\n    var ITEM_TYPE = 15;\n    var LEVEL_AUTH = '250375bd-02f0-11e6-a52a-5cf9dd40ad7e'; // 授权开放\n    var LEVEL_ALL_OPEN = '2501e32c-02f0-11e6-a52a-5cf9dd40ad7e'; // 全开放\n    var RESOURCE_FORMAT_DATA = 'aaee8194-2614-11e6-a9e9-507b9d1b58bb';\n    var RESOURCE_FORMAT_OTHER = 'ab11fdd4-2614-11e6-a9e9-507b9d1b58bb';\n    var SHARE_METHOD_OTHER = 'd8d61ff3-2616-11e6-a9e9-507b9d1b58bb';\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DEP_NAME = LoginUser.dep_name;\n    $scope.ORG_NAME = LoginUser.organization;\n    $scope.ORG_CODE = LoginUser.organization_code;\n    $scope.InfoResource = {};\n    $scope.InfoResource.alias = '';\n    $scope.InfoResource.rel_category = '';\n    $scope.InfoResource.secret_flag = '';\n    $scope.InfoResource.meter_unit = \"\";\n    $scope.InfoResource.calculate_method = '';\n    $scope.InfoResource.resource_format_other = '';\n    $scope.InfoResource.share_method_other = '';\n    $scope.InfoResource.social_open_limit = '';\n    $scope.InfoResource.linkman = '';\n    $scope.InfoResource.contact_phone = '';\n    // item list\n    $scope.ResourceItemList = [];\n    $scope.ResourceItemConfigList = [];\n\n    // resource name duplicate check\n    $scope.resNameExist = false;\n    $scope.checkResName = function() {\n      if($scope.InfoResource.resource_name && $scope.InfoResource.resource_name != '') {\n        Http.checkResName({\n          resource_name: $scope.InfoResource.resource_name\n        }).then(function(res) {\n          if(res.data.body[0].isexists == 'true') {\n            $scope.resNameExist = true;\n          }\n          else{\n            $scope.resNameExist = false;\n          }\n        })\n      }\n\n    }\n\n\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_CATEGORY\n    }).then(function(result) {\n      $scope.resourceCategoryList = result.data.body;\n      $scope.resourceCategoryRelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_TYPE\n    }).then(function(result) {\n      $scope.shareTypeList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_METHOD\n    }).then(function(result) {\n      $scope.shareMethodList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': ITEM_TYPE\n    }).then(function(result) {\n      $scope.itemTypeList = result.data.body;\n    });\n\n    $scope.close = function(isValid) {\n      $state.go(\"main.department.inventory\", {}, {\n        reload: true\n      });\n    }\n\n    // submit add\n    $scope.addInfoResource = function(isValid) {\n      $scope.submitted = true;\n      var InfoResourceAddObj = {};\n      var InfoResource_RelationConfig = [];\n      var InfoResourceApplyInfo = [];\n      var InfoItem_RelationConfig = [];\n      if($scope.resNameExist) {\n        isValid = false;\n      }\n      if ($scope.shareFreqSelection.length == 0 && !$scope.resItemAddBtn) { // 未选择更新周期\n        isValid = false;\n      }\n      if ($scope.resItemAddBtn && ($scope.ResourceItemList.length == 0)) { // 未添加信息项\n        isValid = false;\n      }\n      if($scope.InfoResource.category == $scope.InfoResource.rel_category) {// 信息资源分类和关联及类目名称相同\n        isValid = false;\n      }\n\n      if (isValid) {\n        InfoResourceAddObj.InfoResource = $scope.InfoResource;\n        _($scope.dataLevelSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.resource_name;\n          sys_dict.sys_dict_id = value;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.resource_name;\n          sys_dict.sys_dict_id = value;\n          sys_dict.obj_type = 1;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        var shareDeps = _.map($scope.outputDeptList, 'id');\n        _(shareDeps).forEach(function(value) {\n          var share_dep = {};\n          share_dep.InfoResourceId = $scope.InfoResource.resource_name;\n          share_dep.apply_dep = value;\n          InfoResourceApplyInfo.push(share_dep);\n        });\n        _($scope.ResourceItemList).forEach(function(item, index) {\n          console.log(index);\n          item.item_ord = index;\n          item.InfoResourceId = $scope.InfoResource.resource_name;\n          console.log($scope.ResourceItemList);\n        })\n\n        InfoResourceAddObj.InfoResource_RelationConfig = InfoResource_RelationConfig;\n        InfoResourceAddObj.InfoResourceApplyInfo = InfoResourceApplyInfo;\n        InfoResourceAddObj.InfoItem_RelationConfig = $scope.ResourceItemConfigList;\n        InfoResourceAddObj.InfoItem = $scope.ResourceItemList;\n\n        console.log(InfoResourceAddObj);\n        $scope.savePromise = Http.saveInfoResource(InfoResourceAddObj).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            alert('保存成功！');\n            $scope.Modal = {};\n            $state.go(\"main.department.inventory\", {}, {\n              reload: true\n            });\n\n          } else {\n            alert('保存失败！');\n          }\n        })\n      } else {\n        return;\n      }\n    }\n\n\n    // submit update\n    console.log($stateParams.item);\n    $scope.resItemUpdateBtn = false;\n    if ($stateParams.item) { // 选择修改\n      // 根据id查询信息资源详情\n      Http.getDepartInfoResList({\n        resource_id : $stateParams.item\n      }).then(function(ResourceRes) {\n        $scope.InfoResource = ResourceRes.data.body[0].results[0];\n\n        if (RESOURCE_FORMAT_DATA == $scope.InfoResource.resource_format) {\n          $scope.resItemUpdateBtn = true;\n        }\n\n        $scope.ResourceItemConfigList = [];\n        // 获取资源分地区数据级别\n        Http.getResourceAreaLevel({\n          resource_id: $scope.InfoResource.id\n        }).then(function(res) {\n          $scope.dataLevelSelection = res.data.body[0].id;\n        })\n\n        // 获取资源更新周期\n        Http.getResourceUpdatePeriod({\n          resource_id: $scope.InfoResource.id\n        }).then(function(res) {\n          $scope.shareFreqSelection = res.data.body[0].id;\n        })\n\n        // 获取指定开放部门列表\n        Http.getResourceShareDeps({\n          resource_id: $scope.InfoResource.id\n        }).then(function(res) {\n          var authDepts = res.data.body[0].id;\n          if (authDepts.length > 0) {\n            $scope.depShow = true;\n          }\n          _($scope.deptList).forEach(function(allItem) {\n            _(authDepts).forEach(function(authItem) {\n              if (allItem.id == authItem) {\n                allItem.ticked = true;\n                $scope.outputDeptList.push(allItem);\n              }\n            })\n          });\n        })\n\n\n        // 获取所有信息项\n        Http.getInfoItemList({\n          resource_id: $scope.InfoResource.id\n        }).then(function(result) {\n          $scope.ResourceItemList = result.data.body;\n          // 拼接信息资源所有信息项的多选项\n          _($scope.ResourceItemList).forEach(function(item) {\n            var shareFreqDictName = [];\n            _(item.config).forEach(function(config) {\n              var itemConfig = {};\n              itemConfig.InfoItemId = item.item_name;\n              itemConfig.sys_dict_id = config.id;\n              shareFreqDictName.push(config.dict_name);\n              $scope.ResourceItemConfigList.push(itemConfig);\n            })\n            item.update_period_name = shareFreqDictName.toString();\n          })\n          console.log($scope.ResourceItemConfigList);\n        })\n      })\n\n\n      // 选中数据库类\n      if (RESOURCE_FORMAT_DATA == $scope.InfoResource.resource_format) {\n        $scope.resItemUpdateBtn = true;\n      }\n    }\n\n\n    $scope.updateInfoResource = function(isValid) {\n      $scope.submitted = true;\n      var InfoResourceAddObj = {};\n      var InfoResource_RelationConfig = [];\n      var InfoResourceApplyInfo = [];\n      var InfoItem_RelationConfig = [];\n\n\n      if($scope.resNameExist) {\n        isValid = false;\n      }\n      if ($scope.shareFreqSelection.length == 0 && !$scope.resItemUpdateBtn) { // 未选择更新周期\n        isValid = false;\n      }\n      if ($scope.resItemAddBtn && ($scope.ResourceItemList.length == 0) || $scope.resItemUpdateBtn && ($scope.ResourceItemList.length == 0)) { // 未添加信息项\n        isValid = false;\n      }\n      if($scope.InfoResource.category == $scope.InfoResource.rel_category) {// 信息资源分类和关联及类目名称相同\n        isValid = false;\n      }\n\n      if (isValid) {\n        InfoResourceAddObj.InfoResource = $scope.InfoResource;\n        _($scope.dataLevelSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.id;\n          sys_dict.sys_dict_id = value;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.InfoResourceId = $scope.InfoResource.id;\n          sys_dict.sys_dict_id = value;\n          sys_dict.obj_type = 1;\n          InfoResource_RelationConfig.push(sys_dict);\n        });\n\n        var shareDeps = _.map($scope.outputDeptList, 'id');\n        _(shareDeps).forEach(function(value) {\n          var share_dep = {};\n          share_dep.InfoResourceId = $scope.InfoResource.id;\n          share_dep.apply_dep = value;\n          InfoResourceApplyInfo.push(share_dep);\n        });\n        _($scope.ResourceItemList).forEach(function(item, index) {\n          console.log(index);\n          item.item_ord = index;\n          item.InfoResourceId = $scope.InfoResource.id;\n          console.log($scope.ResourceItemList);\n        })\n\n        InfoResourceAddObj.InfoResource_RelationConfig = InfoResource_RelationConfig;\n        InfoResourceAddObj.InfoResourceApplyInfo = InfoResourceApplyInfo;\n        InfoResourceAddObj.InfoItem_RelationConfig = $scope.ResourceItemConfigList;\n        InfoResourceAddObj.InfoItem = $scope.ResourceItemList;\n\n        console.log(InfoResourceAddObj);\n        $scope.updatePromise = Http.updateInfoResource(InfoResourceAddObj).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            alert('保存成功！');\n            $scope.Modal = {};\n            $state.go(\"main.department.inventory\", {}, {\n              reload: true\n            });\n\n          } else {\n            alert('保存失败');\n          }\n          // 清空多选项\n          $scope.dataLevelSelection = [];\n          $scope.shareFreqSelection = [];\n        })\n      } else {\n        return;\n      }\n    }\n\n    $scope.editItems = function(id) {\n      $scope.ResourceItemConfigList = [];\n      Http.getInfoItemList({\n        resource_id: id\n      }).then(function(result) {\n        $scope.ResourceItemList = result.data.body;\n        // 拼接信息资源所有信息项的多选项\n        _($scope.ResourceItemList).forEach(function(item) {\n          var shareFreqDictName = [];\n          _(item.config).forEach(function(config) {\n            var itemConfig = {};\n            itemConfig.InfoItemId = item.item_name;\n            itemConfig.sys_dict_id = config.id;\n            shareFreqDictName.push(config.dict_name);\n            $scope.ResourceItemConfigList.push(itemConfig);\n          })\n          item.update_period_name = shareFreqDictName.toString();\n        })\n        console.log($scope.ResourceItemConfigList);\n      })\n      $scope.ResItemListShow = true;\n    }\n\n    $scope.addResourceItem = function(type) {\n      $scope.shareFreqEmpty = false;\n      $scope.Modal = {};\n      $scope.itemAdded = false;\n      $scope.ResourceItem = {};\n      $scope.ResourceItem.meter_unit = '';\n      $scope.ResourceItem.calculate_method = '';\n      $scope.ResourceItem.shareFreqItemSelection = [];\n      $scope.ResourceItem.shareFreqItemObjSelection = [];\n      $scope.parent = {};\n      $scope.parent.itemNameExist = false;\n\n      $scope.data = {};\n      $scope.data.item_type = $scope.itemTypeList[0];\n      $scope.data.secret_flag = $scope.secretFlagList[0];\n\n      $scope.$watch('data.item_type', function(n) {\n        $scope.ResourceItem.item_type = n.id;\n        $scope.ResourceItem.item_type_name = n.dict_name;\n      })\n\n      $scope.$watch('data.secret_flag', function(n) {\n        $scope.ResourceItem.secret_flag = n.id;\n        $scope.ResourceItem.secret_flag_name = n.dict_name;\n      })\n\n      $scope.checkItemName = function() {\n        if($scope.ResourceItem.item_name && $scope.ResourceItem.item_name != '') {\n          console.log($scope.ResourceItem);\n          console.log($scope.ResourceItemList);\n          $scope.parent.itemNameExist = false;\n          _($scope.ResourceItemList).forEach(function(item) {\n            if(($scope.ResourceItem.item_name == item.item_name) &&  $scope.ResourceItem !== item) {\n              $scope.parent.itemNameExist = true;\n            }\n          })\n          if(!$scope.parent.itemNameExist) {\n            Http.checkItemName({\n              item_name: $scope.ResourceItem.item_name\n            }).then(function(res) {\n              if(res.data.body[0].isexists == 'true') {\n                $scope.parent.itemNameExist = true;\n              }\n              else{\n                $scope.parent.itemNameExist = false;\n              }\n            })\n          }\n\n        }\n\n      }\n\n      Component.popModal($scope, 'Department.Inventory.Controller.publish', '新增', 'item-add-modal').result.then(function(res) {\n        console.log($scope.ResourceItem);\n        $scope.itemAdded = false;\n        console.log(type);\n        // if(type == 2) {// 新增资源时的新增信息项\n        //   $scope.ResourceItemList.push($scope.ResourceItem);\n        // }\n\n        var shareFreqDictName = [];\n        _($scope.ResourceItem.shareFreqItemObjSelection).forEach(function(item) {\n          var sys_dict = {};\n          sys_dict.InfoItemId = $scope.ResourceItem.item_name;\n          sys_dict.sys_dict_id = item.id;\n          $scope.ResourceItemConfigList.push(sys_dict);\n          shareFreqDictName.push(item.dict_name);\n        });\n        $scope.ResourceItem.config = $scope.ResourceItem.shareFreqItemObjSelection;\n        $scope.ResourceItem.update_period_name = shareFreqDictName.toString();\n        $scope.ResourceItemList.push($scope.ResourceItem);\n\n        console.log($scope.ResourceItemList);\n      })\n    }\n\n    // update resource item\n    $scope.updateItem = function(InfoItem) {\n      console.log(InfoItem);\n      $scope.Modal = {};\n      $scope.itemUpdated = false;\n      $scope.ResourceItem = InfoItem;\n      $scope.ResourceItem.shareFreqItemSelection = _.map(InfoItem.config,'id');\n      $scope.ResourceItem.shareFreqItemObjSelection = InfoItem.config;\n      $scope.shareFreqEmpty = false;\n      $scope.parent = {};\n      $scope.parent.itemNameExist = false;\n\n      $scope.data = {};\n\n      // if (InfoItem.id) { // 在修改信息资源中修改\n      //   // 获取该条信息项更新周期\n      //   Http.getItemUpdatePeriod({\n      //     item_id: InfoItem.id\n      //   }).then(function(res) {\n      //     $scope.shareFreqItemObjSelection = res.data.body;\n      //     $scope.shareFreqItemSelection = _.map($scope.shareFreqItemObjSelection, 'id');\n      //   });\n      // } else { // 新增资源时修改\n      //   $scope.shareFreqItemSelection = $scope.ResourceItem.update_period_temp;\n      //   $scope.shareFreqItemObjSelection = $scope.ResourceItem.update_period_obj_temp;\n      // }\n\n      _($scope.secretFlagList).forEach(function(secretFlag) {\n        if (InfoItem.secret_flag == secretFlag.id) {\n          $scope.data.secret_flag = secretFlag;\n        }\n      })\n\n      _($scope.itemTypeList).forEach(function(itemType) {\n        if (InfoItem.item_type == itemType.id) {\n          $scope.data.item_type = angular.copy(itemType);\n          console.log($scope.data.item_type);\n        }\n      })\n\n      $scope.$watch('data.item_type', function(n) {\n        console.log($scope.data.item_type);\n        if (n) {\n          $scope.ResourceItem.item_type = n.id;\n          $scope.ResourceItem.item_type_name = n.dict_name;\n        }\n      })\n\n      $scope.$watch('data.secret_flag', function(n) {\n        console.log(n);\n        $scope.ResourceItem.secret_flag = n.id;\n        $scope.ResourceItem.secret_flag_name = n.dict_name;\n      })\n\n      $scope.checkItemName = function() {\n        if($scope.ResourceItem.item_name && $scope.ResourceItem.item_name != '') {\n          console.log($scope.ResourceItem);\n          console.log($scope.ResourceItemList);\n          $scope.parent.itemNameExist = false;\n          _($scope.ResourceItemList).forEach(function(item) {\n            if(($scope.ResourceItem.item_name == item.item_name) &&  $scope.ResourceItem !== item) {\n              $scope.parent.itemNameExist = true;\n            }\n          })\n          if(!$scope.parent.itemNameExist) {\n            Http.checkItemName({\n              item_name: $scope.ResourceItem.item_name\n            }).then(function(res) {\n              if(res.data.body[0].isexists == 'true') {\n                $scope.parent.itemNameExist = true;\n              }\n              else{\n                $scope.parent.itemNameExist = false;\n              }\n            })\n          }\n\n        }\n\n      }\n\n      Component.popModal($scope, 'Department.Inventory.Controller.publish', '修改', 'item-add-modal').result.then(function(res) {\n        $scope.itemUpdated = false;\n        var shareFreqDictName = [];\n        // 删除本条信息项已选中的多选项\n        _.remove($scope.ResourceItemConfigList, function(config) {\n          return config.InfoItemId == $scope.ResourceItem.item_name;\n        });\n\n        _($scope.ResourceItem.shareFreqItemObjSelection).forEach(function(item) {\n          var sys_dict = {};\n          sys_dict.InfoItemId = $scope.ResourceItem.item_name;\n          sys_dict.sys_dict_id = item.id;\n          $scope.ResourceItemConfigList.push(sys_dict);\n          shareFreqDictName.push(item.dict_name);\n        });\n        $scope.ResourceItem.config = $scope.ResourceItem.shareFreqItemObjSelection;\n        $scope.ResourceItem.update_period_name = shareFreqDictName.toString();\n        console.log($scope.ResourceItemList);\n      })\n    }\n\n    // delete info item\n    $scope.deleteItem = function(index) {\n      var deleteFlag = confirm('确定删除本条信息项？');\n      console.log(index);\n      if (deleteFlag && index > -1) {\n        $scope.ResourceItemList.splice(index,1);\n      }\n    }\n\n\n\n    // show or hide department\n    $scope.depShow = false;\n    $scope.showHideDeps = function(ev) {\n      if (LEVEL_ALL_OPEN != $scope.InfoResource.share_level) {// 不为全开放\n        if (LEVEL_AUTH == $scope.InfoResource.share_level) {// 授权开放\n          $scope.depShow = true;\n          $scope.socialOpenFlag = false;\n        } else {\n          $scope.depShow = false;\n          $scope.socialOpenFlag = true;\n          $scope.outputDeptList = [];\n        }\n        $scope.InfoResource.social_open_flag = 0;\n      } else {\n        $scope.InfoResource.social_open_flag = 1;\n        $scope.outputDeptList = [];\n      }\n\n    }\n\n    $scope.shareMethodOtherShow = false;\n    $scope.showHideShareMethodOther = function() {\n      if (SHARE_METHOD_OTHER == $scope.InfoResource.share_method) {\n        $scope.shareMethodOtherShow = true;\n      } else {\n        $scope.shareMethodOtherShow = false;\n      }\n    }\n\n    //show or hide resource item add button\n    $scope.resItemAddBtn = false;\n    $scope.resFormatOtherShow = false;\n    $scope.showHideResAddBtn = function() {\n      $scope.resFormatOtherShow = false;\n      if (RESOURCE_FORMAT_DATA == $scope.InfoResource.resource_format) {\n        if ($stateParams.item) { // 修改\n          $scope.resItemUpdateBtn = true;\n        } else { // 新增\n          $scope.resItemAddBtn = true;\n        }\n\n        $scope.resFormatOtherShow = false;\n        $scope.shareFreqSelection = [];\n        $scope.InfoResource.secret_flag = '';\n        $scope.InfoResource.meter_unit = \"\";\n        $scope.InfoResource.calculate_method = '';\n      } else if (RESOURCE_FORMAT_OTHER == $scope.InfoResource.resource_format) {\n        $scope.resFormatOtherShow = true;\n        $scope.resItemAddBtn = false;\n        $scope.resItemUpdateBtn = false;\n      } else {\n        $scope.resItemAddBtn = false;\n        $scope.resFormatOtherShow = false;\n        $scope.resItemUpdateBtn = false;\n      }\n    }\n\n    $scope.dataLevelSelection = [];\n    $scope.toggleDataLevelSelection = function(item) {\n      var idx = $scope.dataLevelSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelSelection.push(item.id);\n      }\n    };\n\n    $scope.shareFreqSelection = [];\n    $scope.toggleShareFreqSelection = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.shareFreqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.shareFreqSelection.push(item.id);\n      }\n    };\n\n\n\n    $scope.toggleShareFreqItemSelection = function(item) {\n      //var shareFreqItemSelectionIds = _.map($scope.shareFreqItemSelection, 'id');\n      var idx = $scope.ResourceItem.shareFreqItemSelection.indexOf(item.id);\n      console.log(idx);\n      // is currently selected\n      if (idx > -1) {\n        $scope.ResourceItem.shareFreqItemSelection.splice(idx, 1);\n        $scope.ResourceItem.shareFreqItemObjSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.ResourceItem.shareFreqItemSelection.push(item.id);\n        $scope.ResourceItem.shareFreqItemObjSelection.push(item);\n      }\n      console.log($scope.ResourceItem.shareFreqItemObjSelection);\n    };\n\n\n  }\n\n])\n\n\n/* HTTP */\nDInventory.factory('Department.Inventory.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function getDepartInfoResList(params) {\n      return $http.get(\n        path + '/info_resource_list', {\n          params: params\n        }\n      )\n    }\n\n    function getInfoResourceDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function saveInfoResource(data) {\n      return $http.post(\n        path + '/info_resource', {\n          data: data\n        }\n      )\n    };\n\n    function updateInfoResource(data) {\n      return $http.put(\n        path + '/info_resource', {\n          data: data\n        }\n      )\n    }\n\n    function getInfoItemList(params) {\n      return $http.get(\n        path + '/allitem_detail', {\n          params: params\n        }\n      )\n    }\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function deleteInfoResource(id) {\n      return $http.delete(\n        path + '/info_resource', {\n          data: id\n        }\n      )\n    }\n\n    function getResourceAreaLevel(params) {\n      return $http.get(\n        path + '/resource_area_level', {\n          params: params\n        }\n      )\n    }\n\n    function getResourceUpdatePeriod(params) {\n      return $http.get(\n        path + '/resource_update_period', {\n          params: params\n        }\n      )\n    }\n\n    function getResourceShareDeps(params) {\n      return $http.get(\n        path + '/resource_share_dep', {\n          params: params\n        }\n      )\n    }\n\n    function updateInfoItem(params) {\n      return $http.put(\n        path + '/info_item', {\n          data: params\n        }\n      )\n    }\n\n    function getItemUpdatePeriod(params) {\n      return $http.get(\n        path + '/item_update_period', {\n          params: params\n        }\n      )\n    }\n    function checkResName(params) {\n      return $http.get(\n        path + '/info_resource_name', {\n          params: params\n        }\n      )\n    }\n\n    function checkItemName(params) {\n      return $http.get(\n        path + '/info_item_name', {\n          params: params\n        }\n      )\n    }\n    return {\n      saveInfoResource: saveInfoResource,\n      getDepartmentList: getDepartmentList,\n      getDepartInfoResList: getDepartInfoResList,\n      getInfoResourceDetail: getInfoResourceDetail,\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      deleteInfoResource: deleteInfoResource,\n      updateInfoResource: updateInfoResource,\n      getInfoItemList: getInfoItemList,\n      getResourceAreaLevel: getResourceAreaLevel,\n      getResourceUpdatePeriod: getResourceUpdatePeriod,\n      getResourceShareDeps: getResourceShareDeps,\n      updateInfoItem: updateInfoItem,\n      getItemUpdatePeriod: getItemUpdatePeriod,\n      checkResName: checkResName,\n      checkItemName: checkItemName\n    }\n  }\n]);\n\n\n\n/* Component */\nDInventory.service('Department.Inventory.Service.Component', ['$uibModal', '$state',\n  function($uibModal, $state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, controller, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        controller: controller,\n        size: 'lg',\n        scope: scope\n      });\n      scope.Modal.confirm = function() {\n        console.log(scope.parent.itemNameExist);\n        if (scope.ResourceItem.shareFreqItemSelection.length == 0) {\n          scope.shareFreqEmpty = true;\n          return;\n        }\n        if(scope.parent.itemNameExist) {\n          return;\n        }\n        modalInstance.close(scope.Modal);\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n\n\nDInventory.directive('fileModel', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var model = $parse(attrs.fileModel);\n      var modelSetter = model.assign;\n      scope.parentIvntObj = {};\n      element.bind('change', function() {\n        var rgx = /(xls|xlsx)/i;\n        var fileSuffix = element[0].files[0].name;\n        var ext = fileSuffix.substring(fileSuffix.lastIndexOf(\".\") + 1);\n        if (!rgx.test(ext)) {\n          scope.$apply(function() {\n            scope.parentIvntObj.fileNameError = true;\n          })\n\n        } else {\n          scope.parentIvntObj.fileNameError = false;\n          scope.$apply(function() {\n            modelSetter(scope, element[0].files[0]);\n          });\n        }\n\n      });\n    }\n  };\n}]);\n","'use strict';\nvar Department = angular.module('Department', ['ui.router']);\n\n/** Main Controller */\nDepartment.controller('Department.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Service.Http', '$sce','$state',\n  function($cookies, $scope, $q, Http, $sce, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var SECRET_FLAG = 5;\n    var RESOURCE_FORMAT = 11;\n    var SOCIAL_OPEN_FLAG = 14;\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    // follow department\n    $scope.depSelect = {};\n    $scope.followDeptList = [];\n    $scope.parentObj = {};\n    function toFollowDep() {\n      $scope.depSelect.show = false;\n      $scope.followDeptList = $scope.parentObj.outputAllDeptList;\n      // send request to add follow department\n      var params = [];\n      _($scope.followDeptList).forEach(function(item) {\n        var followDep = {};\n        followDep.follow_dep_id = item.dep_id;\n        params.push(followDep);\n      });\n      Http.followDepts({\n        userdep: params\n      }).then(function(result) {\n\n      })\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      $scope.mainAuditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.toAuditList = result.data.body[0].results;\n        $scope.auditTotal = result.data.body[0].count;\n      });\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      console.log(_httpConfirmParams);\n      $scope.mainReqPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requireToConfirmList = result.data.body[0].results;\n        $scope.reqTotal = result.data.body[0].count;\n      })\n    }\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.socialOpenList = result.data.body;\n    });\n\n    Http.getDepDataQuotaTotal().then(function(result) {\n      $scope.Count = result.data.body[0];\n    });\n\n    // go to audit list page\n    $scope.auditMore = function() {\n      $state.go(\"main.department.audit\", {}, {\n        reload: true\n      });\n    }\n\n    // go to requirement list page\n    $scope.reqMore = function() {\n      $state.go(\"main.department.requirementConfirm\", {}, {\n        reload: true\n      });\n    }\n\n    // 已关注部门列表\n    Http.getFollowDepList().then(function(result) {\n      $scope.parentObj.outputAllDeptList = result.data.body;\n      $scope.followDeptList = _.uniq($scope.parentObj.outputAllDeptList);\n      //console.log($scope.parentObj.outputAllDeptList);\n      Http.getDepartmentFollowList().then(function(result) {\n        $scope.parentObj.deptAllList = _.remove(result.data.body, function(item) {\n          return item.dep_id != DEP_ID;\n        });\n        $scope.parentObj.outputDeptList = [];\n\n        _($scope.parentObj.deptAllList).forEach(function(allItem) {\n          allItem.icon = '<img  src=styles/images/bureau/'+ allItem.dep_en_name +' />'\n          _($scope.parentObj.outputAllDeptList).forEach(function(outItem) {\n            if(allItem.dep_id == outItem.dep_id) {\n              allItem.ticked = true;\n              $scope.parentObj.outputDeptList.push(allItem);\n            }\n          })\n        });\n\n         $scope.$broadcast('someEvent', $scope.parentObj.outputDeptList);\n        // $scope.parentObj.deptAllList = _.pullAllWith($scope.parentObj.deptAllList, $scope.parentObj.outputAllDeptList,function(arrItem,othItem) {\n        //   return arrItem.dep_id == othItem.dep_id || DEP_ID == arrItem.dep_id;\n        // });\n        // console.log($scope.parentObj.deptAllList);\n      });\n    })\n\n    $scope.openFn = function() {\n      $scope.parentObj.outputAllDeptList = $scope.parentObj.outputDeptList;\n      console.log($scope.parentObj.outputAllDeptList);\n    }\n\n\n\n    $scope.followDep = function() {\n      toFollowDep();\n    }\n  }\n])\n\n\n/* HTTP */\nDepartment.factory('Department.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentFollowList() {\n      return $http.get(\n        path + '/follow_sys_dep'\n      )\n    }\n\n    function getDepDataQuotaTotal() {\n      return $http.get(\n        path + '/depquota/summary'\n      )\n    };\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/depresource/wait_audit', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function getFollowDepList() {\n      return $http.get(\n        path + '/followed_user_dep'\n      )\n    }\n\n    function followDepts(params) {\n      return $http.post(\n        path + '/user_dep_batch', {\n          data: params\n        }\n      )\n    }\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getAuditList: getAuditList,\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      getDepartmentFollowList: getDepartmentFollowList,\n      getDepDataQuotaTotal: getDepDataQuotaTotal,\n      followDepts: followDepts,\n      getFollowDepList: getFollowDepList\n    }\n  }\n]);\n","'use strict';\nvar DepartmentReq = angular.module('Department.Requirement', ['ui.router']);\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.Main', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Component', 'Department.Requirement.Service.Http',\n  function($cookies, $scope, $stateParams, Component, Http) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\n      getDeptRequirementList(_httpParams);\n    }\n\n    // init\n    getDeptRequirementList();\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    function getDeptRequirementList() {\n      _httpParams.dep_id = DEP_ID;\n      $scope.reqPromise = Http.getDepartmentRequirementList(_httpParams).then(function(result) {\n        $scope.requirementList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n\n    $scope.toggleDataLevelReqSelection = function(item) {\n      var idx = $scope.dataLevelReqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelReqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelReqSelection.push(item.id);\n      }\n    };\n\n\n    $scope.toggleShareFreqSelection = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.shareFreqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.shareFreqSelection.push(item.id);\n      }\n    };\n\n\n\n    $scope.publishReq = function() {\n      $scope.Modal = {};\n      $scope.Modal.DepRequirment = {};\n\n      var _httpPublishParams = {};\n      var dataRelationConfig = [];\n      $scope.reqParent = {};\n      $scope.reqParent.outputDeptList = [];\n\n      $scope.shareFreqSelection = [];\n      $scope.dataLevelReqSelection = [];\n\n      $scope.error = false;\n      $scope.submitted = false;\n\n      Component.popModal($scope, '发布', 'add-req-modal').result.then(function() {\n        _($scope.dataLevelReqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\n\n        console.log(res_dep_id);\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\n\n        Http.publishRequirement(_httpPublishParams).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('发布成功');\n            getDeptRequirementList();\n          } else {\n            alert('发布失败');\n          }\n        })\n      });\n    }\n\n    $scope.searchDeptReqByName = function() {\n      _httpParams.requiement_name = $scope.DeptRequirement.req_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptRequirementList();\n    }\n\n\n    // delete requirement\n    $scope.deleteReq = function(id) {\n      var deleteFlag = confirm('确定删除本条需求？删除后将不可恢复。');\n      if(deleteFlag) {\n        Http.deleteRequirement({\n          requiement_id: id\n        }).then(function(result) {\n            if (200 == result.data.head.status) {\n              alert('删除成功！');\n              getDeptRequirementList();\n            }\n            else {\n              alert('删除失败！');\n            }\n        })\n      }\n    }\n\n    // update requirement\n    $scope.updateReq = function(item) {\n      $scope.Modal = {};\n      $scope.Modal.DepRequirment = item;\n\n      var _httpPublishParams = {};\n      var dataRelationConfig = [];\n\n      $scope.reqParent = {};\n      $scope.reqParent.outputDeptList = [];\n\n      $scope.shareFreqSelection = [];\n      $scope.dataLevelReqSelection = [];\n\n      _($scope.deptList).forEach(function(outItem) {\n        if(item.response_dep_id == outItem.id) {\n          outItem.ticked = true;\n          $scope.reqParent.outputDeptList.push(outItem);\n        }\n      })\n\n      // 获取需求对应的共享频率数据\n      Http.getReqUpdatePeriod({\n        requiement_id: item.id\n      }).then(function(res) {\n        $scope.shareFreqSelection = res.data.body[0].id;\n      })\n\n      // 获取需求对应的分地区数据级别\n      Http.getReqAreaLevel({\n        requiement_id: item.id\n      }).then(function(res) {\n        $scope.dataLevelReqSelection = res.data.body[0].id;\n      })\n\n      $scope.error = false;\n      Component.popModal($scope, '修改', 'add-req-modal').result.then(function() {\n        _($scope.dataLevelReqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.id;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        _($scope.shareFreqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.id;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\n\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\n\n        Http.updateRequirementInfo(_httpPublishParams).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getDeptRequirementList();\n          } else {\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n  }\n])\n\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.confirm', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n  function($cookies, $scope, $stateParams, Http, Component) {\n    $scope.Modal = {};\n    $scope.DeptRequirementConfirm = {};\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpConfirmParams.skip = ($scope.Paging.currentPage - 1) * _httpConfirmParams.limit;\n      getDeptRequirementConfirmList(_httpConfirmParams);\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      $scope.reqConfirmPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requirementConfirmList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n    $scope.searchDeptReqConfirmByName = function() {\n      _httpConfirmParams.requiement_name = $scope.DeptRequirementConfirm.req_name_filter;\n      _httpConfirmParams.limit = 10;\n      _httpConfirmParams.skip = 0;\n      getDeptRequirementConfirmList();\n    }\n\n    Http.getDeptInfoResourceList().then(function(result) {\n      console.log(result);\n      $scope.depInfoResourceList = result.data.body[0].results;\n\n      //  $scope.Paging.totalItems = data.head.total;\n    });\n\n    $scope.toConfirm = function(item) {\n      // get requirement detail\n      $scope.Modal.ReqDetail = item;\n      $scope.Modal.ReqResponse = {};\n      console.log($scope.depInfoResourceList.length);\n      if($scope.depInfoResourceList.length == 0) {\n        $scope.Modal.ReqResponse.resource_id = '';\n        $scope.errorMsg = '本部门还未发布任何信息资源';\n        $scope.dataQuotaIdNull = true;\n      }\n      else{\n        $scope.Modal.ReqResponse.resource_id = $scope.depInfoResourceList[0].id;\n      }\n\n      Component.popModalConfirm($scope, '', 'confirm-req-modal').result.then(function() {\n        console.log($scope.Modal.ReqResponse);\n        $scope.Modal.ReqResponse.requiement_id = item.id;\n\n        Http.updateRequirement($scope.Modal.ReqResponse).then(function(result) {\n          if (200 == result.data.head.status) {\n            if ($scope.Modal.ReqResponse.status == 1) {\n              // 保存需求响应\n              Http.saveReqResponse({\n                requiement_id: item.id,\n                resource_id: $scope.Modal.ReqResponse.resource_id\n              }).then(function(saveResult) {\n                if (200 == saveResult.data.head.status) {\n                  alert('保存成功！');\n                  getDeptRequirementConfirmList();\n                } else {\n                  alert('保存失败！');\n                  getDeptRequirementConfirmList();\n                }\n              })\n            } else {\n              alert('保存成功！');\n              getDeptRequirementConfirmList();\n            }\n\n          } else {\n            alert('保存失败');\n          }\n        })\n      });\n    }\n\n  }\n])\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.detail', [ '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n    function( $scope, $stateParams, Http, Component) {\n      console.log($stateParams.ID);\n      Http.getReqDetail({\n        requiement_id: $stateParams.ID\n      }).then(function(result) {\n        console.log(result.data.body[0]);\n        $scope.ReqDetail = result.data.body[0];\n      })\n    }\n  ])\n  /* HTTP Factory */\nDepartmentReq.factory('Department.Requirement.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function publishRequirement(data) {\n      return $http.post(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    // 需求确认修改状态\n    function updateRequirement(data) {\n      return $http.put(\n        path + '/data_requiement_ok', {\n          data: data\n        }\n      )\n    }\n\n    // 修改需求信息\n    function updateRequirementInfo(data) {\n      return $http.put(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    function saveReqResponse(data) {\n      return $http.post(\n        path + '/data_requiement_response', {\n          data: data\n        }\n      )\n    }\n\n    function getDeptInfoResourceList(params) {\n      return $http.get(\n        path + '/info_resource_list', {\n          params: params\n        }\n      )\n    }\n\n    function getReqDetail(params) {\n      return $http.get(\n        path + '/data_requiement_detail', {\n          params: params\n        }\n      )\n    }\n\n    function getResponseList(params) {\n      return $http.get(\n        path + '/requirement/requireResponseList', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function deleteRequirement(id) {\n      return $http.delete(\n        path + '/data_requiement', {\n          data: id\n        }\n      )\n    }\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getReqUpdatePeriod(params) {\n      return $http.get(\n        path + '/requiement_update_period', {\n          params: params\n        }\n      )\n    }\n\n    function getReqAreaLevel(params) {\n      return $http.get(\n        path + '/requiement_area_level', {\n          params: params\n        }\n      )\n    }\n    return {\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      publishRequirement: publishRequirement,\n      getReqDetail: getReqDetail,\n      getResponseList: getResponseList,\n      updateRequirement: updateRequirement,\n      updateRequirementInfo: updateRequirementInfo,\n      saveReqResponse: saveReqResponse,\n      getDeptInfoResourceList: getDeptInfoResourceList,\n      getDepartmentList: getDepartmentList,\n      deleteRequirement: deleteRequirement,\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getReqUpdatePeriod: getReqUpdatePeriod,\n      getReqAreaLevel: getReqAreaLevel\n    }\n  }\n]);\n\n\n/* Component */\nDepartmentReq.service('Department.Requirement.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal for confirm\n    function popModalConfirm(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstanceConfirm = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        if (isValid) {\n          modalInstanceConfirm.close(scope.Modal);\n        } else {\n          return;\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstanceConfirm.dismiss();\n      };\n      return modalInstanceConfirm;\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        scope.submitted = true;\n        if(scope.reqParent.outputDeptList.length == 0) {\n          scope.error = true;\n        }\n        else if(scope.shareFreqSelection.length == 0) {\n        }\n        else {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal,\n      popModalConfirm: popModalConfirm\n    }\n  }\n])\n","'use strict';\nvar DepartmentShare = angular.module('DepartmentShare', ['ui.router']);\n\n/** InventoryDetail Controller */\nDepartmentShare.controller('DepartmentShare.Controller.Main', [ '$scope', 'DepartmentShare.Service.Http',\n  function( $scope, Http) {\n    $scope.DepartInfoResource = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentShareList(_httpParams);\n    }\n\n    function getDepartmentShareList(_httpParams) {\n      $scope.sharePromise = Http.shareInfoResourceList(_httpParams).then(function(result) {\n        $scope.depShareList = result.data.body[0].results;\n        $scope.resourceCount = result.data.body[0].count[0].resource_count;\n        $scope.Paging.totalItems = result.data.body[0].count[0].item_count;\n      });\n    }\n\n    //init\n    getDepartmentShareList(_httpParams);\n\n    // resource format all\n    $scope.getResFormatAll = function() {\n      $scope.resFormatMainSelection = [];\n      _httpParams.re_format = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvMainSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // social open all\n    $scope.getSocialOpenAll = function() {\n      $scope.socialOpenMainSelection = [];\n      _httpParams.social_open_flag = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // share frequency all\n    $scope.getShareFreqAll = function() {\n      $scope.shareFreqSelection = [];\n      _httpParams.update_period = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // secret flag all\n    $scope.getSecretFlagAll = function() {\n      $scope.secretFlagMainSelection = [];\n      _httpParams.issecret = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by resource format\n    $scope.resFormatMainSelection = [];\n    $scope.getInfoResourceByResFormat = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.resFormatMainSelection = [];\n      } else {\n        $scope.resFormatMainSelection = item.id;\n      }\n      _httpParams.re_format = $scope.resFormatMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by share frequency\n    $scope.shareFreqSelection = [];\n    $scope.getInfoResourceListBySF = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareFreqSelection.splice(idx, 1);\n      } else {\n        $scope.shareFreqSelection.push(item.id);\n      }\n      _httpParams.update_period = $scope.shareFreqSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvMainSelection = [];\n    $scope.getInfoResourceListBySl = function(item) {\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvMainSelection = [];\n      } else {\n        $scope.shareLvMainSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by social open flag\n    $scope.socialOpenMainSelection = [];\n    $scope.getInfoResourceListBySO = function(item) {\n      var idx = $scope.socialOpenMainSelection.indexOf(item.dict_code);\n      if (idx > -1) {\n        $scope.socialOpenMainSelection = [];\n      } else {\n        $scope.socialOpenMainSelection = item.dict_code;\n      }\n      _httpParams.social_open_flag = $scope.socialOpenMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by secret flag\n    $scope.secretFlagMainSelection = [];\n    $scope.getInfoResourceListBySecFlag = function(item) {\n      var idx = $scope.secretFlagMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.secretFlagMainSelection = [];\n      } else {\n        $scope.secretFlagMainSelection = item.id;\n      }\n      _httpParams.issecret = $scope.secretFlagMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaMainSelection = [];\n      _httpParams.area_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaMainSelection = [];\n    $scope.getInfoResourceListByAP = function(item) {\n      var idx = $scope.areaMainSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaMainSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaMainSelection.push(item.id);\n      }\n\n      _httpParams.area_level = $scope.areaMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchDeptInfoResourceByName = function() {\n      _httpParams.resource_name = $scope.DepartInfoResource.resource_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var SECRET_FLAG = 5;\n    var RESOURCE_FORMAT = 11;\n    var SOCIAL_OPEN_FLAG = 14;\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': RESOURCE_FORMAT\n    }).then(function(result) {\n      $scope.resourceFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SOCIAL_OPEN_FLAG\n    }).then(function(result) {\n      $scope.socialOpenList = result.data.body;\n    });\n\n  }\n])\n\n\n// Department share detail controller\nDepartmentShare.controller('DepartmentShare.Controller.detail', [ '$scope', 'DepartmentShare.Service.Http', '$stateParams',\n  function( $scope, Http, $stateParams) {\n    $scope.InfoItemShow = false;\n    Http.shareInfoResourceList({\n      resource_id : $stateParams.item\n    }).then(function(ResourceRes) {\n      $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\n      Http.getInfoItemList({\n        resource_id: $scope.InfoResourceDetail.id\n      }).then(function(result) {\n        if (result.data.body.length == 0) {\n          $scope.InfoItemShow = false;\n        } else {\n          $scope.InfoItemShow = true;\n          $scope.InfoItems = result.data.body;\n\n          _($scope.InfoItems).forEach(function(item) {\n            var shareFreqDictName = [];\n            _(item.config).forEach(function(config) {\n              shareFreqDictName.push(config.dict_name);\n            })\n            item.update_period_name = shareFreqDictName.toString();\n          })\n        }\n\n\n      })\n    })\n\n\n  }\n])\n\n/* HTTP Factory */\nDepartmentShare.factory('DepartmentShare.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function shareInfoResourceList(params) {\n      return $http.get(\n        path + '/share_list', {\n          params: params\n        }\n      )\n    };\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    };\n    function followDepartment(id) {\n      return $http.post(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    };\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n    function cancelFollowDepartment(id) {\n      return $http.delete(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    };\n\n    function getInfoItemList(params) {\n      return $http.get(\n        path + '/allitem_detail', {\n          params: params\n        }\n      )\n    }\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      shareInfoResourceList: shareInfoResourceList,\n      getQuotaDetail: getQuotaDetail,\n      followDepartment: followDepartment,\n      cancelFollowDepartment: cancelFollowDepartment,\n      getInfoItemList: getInfoItemList\n    }\n  }\n]);\n","'use strict';\nvar SystemUser = angular.module('Department.SystemUser', ['ui.router']);\n\n/** Main Controller */\nSystemUser.controller('Department.SystemUser.Controller.Main', ['$scope', '$q', 'Department.SystemUser.Service.Http', 'Department.SystemUser.Service.Component', '$uibModal',\n  function($scope, $q, Http, Component, $uibModal) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n\n    function getUserList() {\n      Http.getUserList().then(function(result) {\n        $scope.users = result.data.body;\n        $scope.DepUserTotal =result.data.head.total;\n      });\n    }\n    // Http.getDepartmentList().then(function(result) {\n    //   $scope.deptList = result.data.body;\n    // });\n\n    // init\n    getUserList();\n\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n\n      Component.popModal($scope, '添加', 'add-user-modal').result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n            getUserList();\n          }\n          else{\n            alert('添加失败');\n          }\n        })\n      });\n\n    }\n\n    $scope.searchUser = function(){\n      var username= $scope.username;\n      alert(username);\n      // http.getUser({\n      //   USERNAME: username,\n      // })then(function(result) {\n      //   if(200 == result.data.head.status){\n      //     $scope.users = result.data.body;\n      //     $scope.DepUserTotal =result.data.head.total;\n      //   }else {\n      //     alert(\"输入错误，请\");\n      //   }\n      //\n      // });\n    }\n\n    $scope.updateUser = function(user) {\n      user.DEP_NAME = null;\n      $scope.sysUser = user;\n      Component.popModal($scope, '修改', 'add-user-modal').result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getUserList();\n          }\n          else{\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n    $scope.deleteUser = function(user) {\n      console.log(user);\n      var fig = confirm(\"确定要删除吗？\");\n      if (fig) {\n        Http.deleteUser(user).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n            getUserList();\n          }\n          else{\n            alert('删除失败！');\n          }\n          getUserList();\n        })\n      }\n    }\n\n\n  }\n])\n\n\n/* HTTP */\nSystemUser.factory('Department.SystemUser.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getUserList() {\n      return $http.get(\n        path + '/user'\n      )\n    };\n    function getUser(params) {\n      return $http.get(\n        path + '/user', {\n          params: params\n        }\n\n      )\n    };\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/user', {\n          data: data\n        }\n      )\n    };\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/dep/'\n      )\n    }\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/user/' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/user', {\n            data: {\"ID\":data.ID}\n        }\n      )\n    }\n    return {\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUser:getUser\n    }\n  }\n]);\n\n/* Component */\nSystemUser.service('Department.SystemUser.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n"],"sourceRoot":"/source/"}