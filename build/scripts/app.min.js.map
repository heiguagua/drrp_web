{"version":3,"sources":["app.js","config.js","admin/department.js","admin/depResource.js","admin/main.js","admin/user.js","common/dashboard.js","common/login.js","common/main.js","common/welcome.js","data-quota/detail.js","data-quota/list.js","data-quota/main.js","department/audit.js","department/inventory-detail.js","department/inventory-upload.js","department/inventory.js","department/main.js","department/requirement.js","department/share.js","department/user.js"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","$httpProvider","$provide","interceptors","push","$q","request","withCredentials","requestError","rejection","response","when","result","data","head","status","sessionStorage","message","window","location","href","responseError","otherwise","state","url","templateUrl","controller","cache","reload","run","$rootScope","$on","event","toState","toParams","fromState","fromParams","name","token","Config","constant","path","AdminDepartment","$scope","$stateParams","Http","Component","$uibModal","$state","getDepartmentList","_httpParams","then","AdminDepartments","body","getDepTotal","depTotal","number","Paging","totalItems","Modal","previousDepNames","areaNames","themeNames","currentPage","maxSize","itemsPerPage","limit","skip","pageChanged","AllDepartments","getSysDict","dict_category","types","placeholder","dep_sn","order_by","dep_name","dep_short_name","dep_en_name","contacts","contact_phone","addDepartmentModal","department","parent_id","area_code","dep_type","promise","popModal","opened","TypeArea","index","_","findIndex","o","id","department1","validDepName","depName","deps","i","length","validPhone","reg","test","saveDepartment","alert","updateDepartment","AdminDep","remove","dep","deleteDepartment","flag","confirm","go","searchDepartment","sysdepname","total","factory","$http","API","params","get","post","put","service","popAlert","scope","info","Alerts","type","timeout","CloseAlert","splice","modalInstance","open","animation","backdrop","size","isValid","close","cancel","dismiss","AdminDepResource","getDepsTotal","getDepCount","getDepRelRescount","depRecouces","Admin","$cookies","User","JSON","parse","titleName","AdminUser","getUserList","users","getUserTotal","dep_id","LoginUser","tatol","UserTotal","deptList","password","password1","personName","organization","organization_code","phone","email","remark","addUserModal","sysUser","prom","validUser","user","username","getUserOrganizationCode","organizationArray","split","validPword","validEmail","invalid","saveUser","updateUser","getUserOrganizationIsEqual","isexists","Password","password_1","password_2","password_3","password_pre","p2","validPword1","validatePassword","UpdatePassword","searchUser","sysusername","deleteUser","Dashboard","getDataRequirementNew","response_dep_id","DEP_ID","Requirements","results","getDepartments","Bureaus","DataquotaSummary","getDataquotaSummary","DataRequirementSummary","getDataRequirementSummary","SummaryDataQuota","SummaryRequirement","getDataQuotaNew","NewIndicators","select","param","departmentID","resource_dep_id","getDataQuota","followDepIndicators","getDeptInfoResourceList","console","log","depInfoResourceList","openItems","resourceId","collapseIndex","closeShow","showIndex","InfoItems","getInfoItemList","resource_id","InfoItemShow","forEach","item","shareFreqDictName","dict_name","update_period_name","toString","RequirementConfirm","requirement","ReqDetail","ReqResponse","resourceItemSelection","resourceSelection","errorMsg","dataQuotaIdNull","popModalConfirm","requiement_id","updateRequirement","http_params","obj","item_id","value","saveReqResponse","saveResult","getUserDep","followDeps","followDepId","directive","restrict","template","link","element","attr","summary","myChart","echarts","init","find","option","tooltip","formatter","series","center","z","min","max","total_resource","Math","ceil","splitNumber","radius","axisLine","lineStyle","width","axisTick","color","splitLine","pointer","title","offsetCenter","textStyle","fontWeight","fontSize","fontStyle","detail","month_increment_resource","endAngle","setOption","requiement_number","requiement_number_inc","QInventoryStatistic","DEPARTMENT","INVENTORY","REQUIREMENT","trigger","legend","xAxis","yAxis","interval","axisLabel","modalInstanceConfirm","confirmParent","outputResource","submitted","reqParent","outputDeptList","error","shareFreqSelection","Login","removeItem","alerts","msg","closeAlert","submit","valid","loginSubmitted","hex_md5","login","loginUser","stringify","sessionToken","loginError","Main","logout","Welcome","StateParams","$document","treeChangeTypeDefault","filterName","menu","list","menuRole","OcupationList","menuArea","areaList","menuTheme","themeList","getDataQuotaList","DataQuotas","DataQuotasTotal","count","resource_count","initDataQuotaList","resourceFormatActiveAll","ShareLevelActiveAll","openToSocietyActiveAll","ShareFrequencyActiveAll","DataLevelActiveAll","isScretActiveAll","httpParams","currentDepID","initPaging","assign","getDataQuotaListByFilter","scrollTo","treeOptions","nodeChildren","dirSelectable","injectClasses","ul","li","liSelected","iExpanded","iCollapsed","iLeaf","label","labelSelected","treeChangeType","predicate","comparator","showSelected","sel","selectedNode","currentDepName","currentDep","WelcomeDep","TargetDataQuotaName","Retrieval","searchTarget","resource_name","SHARE_FREQUENCY","DATA_LEVEL","SHARE_LEVEL","RESOURCE_FORMAT","SOCIAL_OPEN_FLAG","SECRET_FLAG","getSystemDictByCatagory","resourceFormats","openToSocietys","isScrets","ShareLevels","ShareFrequencys","DataLevels","filterParams","resourceFormatFilter","resourceFormatActive","re_format","ShareLevelFilter","ShareLevelActive","share_level","openToSocietyFilter","openToSocietyActive","social_open_flag","update_period","ShareFrequencyActive","ShareFrequencyFilter","idx","indexOf","area_level","DataLevelActive","DataLevelFilter","isScretFilter","isScretActive","issecret","attrs","currentTab","on","ev","hasClass","toggleClass","removeClass","addClass","DataQuotaDetail","$sce","getDataQuotaDetailByDepID","getDataQuotaExampleByDepID","DataQuotaExample","DataExamples","getResourceExampleDatas","DataquotaRequirementByDepTotals","getDataQuotaRequirementByDepTotals","html","file_content","dataquotaRequirement","deptotal","depNames","resourceName","data1","x","y","links1","source","target","key","target_obj","text","animationDurationUpdate","animationEasingUpdate","layout","symbolSize","roam","normal","show","edgeSymbol","edgeSymbolSize","edgeLabel","links","opacity","curveness","DataQuotaList","DataQuotaApplyInfo","data_quota_id","getDataQuotaApplyInfo","info_resource_id","DataQuota","showType","typeListOpen","ocupationListOpen","areaListOpen","themeListOpen","Audit","getAuditList","auditPromise","auditList","resourceCount","InfoResource","searchInfoResourceByName","resource_name_filter","filterByAuditStatus","auditstatus","TabItemShow","TabRequireShow","AuditInfo","audit_opinion","getDepartInfoResList","RESOURCEID","ResourceRes","InfoResourceDetail","apply_dep_name","APPLYDEP","apply_time","APPLYTIME","submitAudit","audit_status","audit_id","AUDITID","updateAuditDetail","auditError","AUDITSTATUS","OPINION","getInfoResourceDetail","getQuotaRequirement","DInventoryDetail","ResourceReqByDepTotals","getResourceRequirementByDepTotals","dep_obj","DInventoryUpload","uploadPromise","uploadFile","file","myFile","dir","downloadUrl","toIndex","htmlPopover","trustAsHtml","uploadExamplesFile","ID","fd","FormData","uploadUrl","append","transformRequest","identity","headers","Content-Type","undefined","$parse","model","fileModel","modelSetter","parentIvntObj","bind","rgx","fileSuffix","files","fileName","ext","substring","lastIndexOf","fileNameError","$apply","fileModelExcel","DInventory","infoResourceList","DepartInfoResource","secretFlagList","shareFrequencyList","shareLevelList","resourceFormatList","dataLevelList","socialOpenList","getResFormatAll","resFormatMainSelection","getShareLevelAll","shareLvMainSelection","getSocialOpenAll","socialOpenMainSelection","getShareFreqAll","getSecretFlagAll","secretFlagMainSelection","getInfoResourceByResFormat","getInfoResourceListBySF","getInfoResourceListBySl","getInfoResourceListBySO","dict_code","getInfoResourceListBySecFlag","getSpatialAll","areaMainSelection","getInfoResourceListByAP","searchDeptInfoResourceByName","deleteInfoResource","deleteConfirm","resourceid","ResourceItemList","RESOURCE_CATEGORY","SHARE_TYPE","SHARE_METHOD","ITEM_TYPE","LEVEL_AUTH","LEVEL_ALL_OPEN","RESOURCE_FORMAT_DATA","RESOURCE_FORMAT_OTHER","SHARE_METHOD_OTHER","DEP_NAME","ORG_NAME","ORG_CODE","alias","rel_category","secret_flag","meter_unit","calculate_method","resource_format_other","share_method_other","social_open_limit","linkman","resource_format_desc","share_method_desc","resNameExist","checkResName","res","resourceCategoryList","resourceCategoryRelList","shareTypeList","shareMethodList","itemTypeList","toUpload","addInfoResource","InfoResourceAddObj","InfoResource_RelationConfig","InfoResourceApplyInfo","resItemAddBtn","category","depShow","dataLevelSelection","sys_dict","InfoResourceId","sys_dict_id","obj_type","shareDeps","map","share_dep","apply_dep","savePromise","saveInfoResource","ResItemListShow","resItemUpdateBtn","resource_format","getResourceAreaLevel","getResourceUpdatePeriod","getResourceShareDeps","authDepts","allItem","authItem","ticked","updateInfoResource","item_ord","updatePromise","addResourceItem","shareFreqEmpty","itemAdded","ResourceItem","field_standard","shareFreqItemSelection","shareFreqItemObjSelection","isleaf","parent","itemNameExist","childParentConflict","item_type","ResourceItemConfigList","ItemCommitObj","$watch","n","item_name","checkItemName","ItemsList","InfoItemId","InfoItem","InfoItem_RelationConfig","addInfoItem","updateItem","getInfoItemById","info_item_id","itemUpdated","copy","hasEmpty","ItemUpdateObj","resourceItem","updateInfoItem","deleteItem","deleteFlag","deleteInfoItem","showHideDeps","socialOpenFlag","shareMethodOtherShow","showHideShareMethodOther","share_method","resFormatOtherShow","showHideResAddBtn","toggleDataLevelSelection","toggleShareFreqSelection","toggleShareFreqItemSelection","getItemUpdatePeriod","Department","toFollowDep","depSelect","followDeptList","parentObj","outputAllDeptList","followDep","follow_dep_id","followDepts","userdep","mainAuditPromise","toAuditList","auditTotal","getDeptRequirementConfirmList","_httpConfirmParams","mainReqPromise","getDepartmentRequirementList","requireToConfirmList","reqTotal","getDepDataQuotaTotal","Count","auditMore","reqMore","getFollowDepList","uniq","getDepartmentFollowList","deptAllList","icon","outItem","$broadcast","openFn","DepartmentReq","getDeptRequirementList","USERNAME","reqPromise","requirementList","DeptRequirement","toggleDataLevelReqSelection","dataLevelReqSelection","publishReq","DepRequirment","_httpPublishParams","dataRelationConfig","req_sys_dict","datarequiementId","requiement_name","res_dep_id","dataRequiement","publishRequirement","searchDeptReqByName","req_name_filter","deleteReq","deleteRequirement","updateReq","getReqUpdatePeriod","getReqAreaLevel","updateRequirementInfo","filterByConfirmStatus","requiement_status","reqConfirmPromise","requirementConfirmList","_httpModalParams","ModalPaging","resParent","dropListShow","DeptRequirementConfirm","checkedResourceName","searchDeptReqConfirmByName","togglResourceList","closeItems","toggleResourceSelection","toggleResItemSelection","selLength","saveChooseResource","toConfirm","InfoResourceShow","getReqDetail","getReqResourceItemList","ResItems","getResponseList","DepartmentShare","getDepartmentShareList","sharePromise","shareInfoResourceList","depShareList","getQuotaDetail","followDepartment","cancelFollowDepartment","SystemUser","DepUserTotal","fig","getUser"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\r\n/* Bootstrap Application */\r\nvar app = angular.module('app', [\r\n  'Config',\r\n  'ui.router',\r\n  'ui.bootstrap',\r\n  'treeControl',\r\n  'isteven-multi-select',\r\n  'Welcome',\r\n  'Login',\r\n  'Main',\r\n  'Dashboard',\r\n  'Admin',\r\n  'Admin.User',\r\n  'Admin.Department',\r\n  'Admin.DepResource',\r\n  'Department',\r\n  'DataQuota',\r\n  'DataQuotaList',\r\n  'DataQuotaDetail',\r\n  'Department.Inventory',\r\n  'Department.InventoryDetail',\r\n  'Department.InventoryUpload',\r\n  'Department.Audit',\r\n  'Department.Requirement',\r\n  'DepartmentShare'\r\n]);\r\n\r\napp.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$provide',\r\n  function($stateProvider, $urlRouterProvider, $httpProvider, $provide) {\r\n\r\n    /** HTTP Interceptor */\r\n    $httpProvider.interceptors.push(['$q',\r\n      function($q) {\r\n        return {\r\n          'request': function(config) {\r\n            config.withCredentials = true;\r\n            return config;\r\n          },\r\n          'requestError': function(rejection) {\r\n            return rejection;\r\n          },\r\n          'response': function(response) {\r\n            $q.when(response, function(result){\r\n              if( response.data && typeof response.data==='object'){\r\n                if(result.data.head.status===300){\r\n                  sessionStorage.message = '登录超时，请重新登录！';\r\n                  window.location.href='/#/login';\r\n                };\r\n              };\r\n            });\r\n            return response;\r\n          },\r\n          'responseError': function(rejection) {\r\n            return rejection;\r\n          }\r\n        };\r\n      }\r\n    ]);\r\n    /** Config Router */\r\n    $urlRouterProvider.otherwise('/welcome');\r\n    $stateProvider\r\n      .state('welcome', {\r\n        url: '/welcome?type?titleName',\r\n        templateUrl: 'views/common/welcome.html',\r\n        controller: 'Welcome.Controller.Main'\r\n      })\r\n      .state('login', {\r\n        url: '/login',\r\n        templateUrl: 'views/common/login.html',\r\n        controller: 'Login.Controller.Main'\r\n      })\r\n      .state('main', {\r\n        url: '/main',\r\n        templateUrl: 'views/common/main.html',\r\n        controller: 'Main.Controller.Main'\r\n      })\r\n      .state('main.dashboard', {\r\n        url: '/dashboard',\r\n        templateUrl: 'views/common/dashboard.html',\r\n        controller: 'Dashboard.Controller.Main'\r\n      })\r\n      .state('main.admin', {\r\n        url: '/admin',\r\n        templateUrl: 'views/admin/main.html',\r\n        controller: 'Admin.Controller.Main'\r\n      })\r\n      .state('main.admin.department', {\r\n        url: '/department',\r\n        templateUrl: 'views/admin/department.html',\r\n        controller: 'Admin.Department.Controller.Main'\r\n      })\r\n      .state('main.admin.dep-resource', {\r\n        url: '/dep-resource',\r\n        templateUrl: 'views/admin/dep-resource.html',\r\n        controller: 'Admin.DepResource.Controller.Main'\r\n      })\r\n      .state('main.admin.user', {\r\n        url: '/user',\r\n        templateUrl: 'views/admin/user.html',\r\n        controller: 'Admin.User.Controller.Main'\r\n      })\r\n      .state('main.data-quota', {\r\n        url: '/data-quota/:type/:titleName',\r\n        templateUrl: 'views/data-quota/main.html',\r\n        controller: 'DataQuota.Controller.Main'\r\n      })\r\n      .state('main.data-quota.list', {\r\n        url: '/list/:resource_dep_id/:dep_name/:type/:titleName',\r\n        templateUrl: 'views/data-quota/list0.html',\r\n        controller: 'DataQuotaList.Controller.Main'\r\n      })\r\n      .state('main.data-quota.detail', {\r\n        url: '/detail/:resource_id',\r\n        templateUrl: 'views/data-quota/detail.html',\r\n        controller: 'DataQuotaDetail.Controller.Main'\r\n      })\r\n      .state('main.department', {\r\n        url: '/department',\r\n        templateUrl: 'views/department/main.html'\r\n      })\r\n      .state('main.department.summary', {\r\n        url: '/summary',\r\n        cache:'false',\r\n        reload: true,\r\n        templateUrl: 'views/department/summary.html',\r\n        controller: 'Department.Controller.Main'\r\n      })\r\n      .state('main.department.inventory', {\r\n        url: '/inventory',\r\n        cache:'false',\r\n        templateUrl: 'views/department/inventory.html',\r\n        controller: 'Department.Inventory.Controller.Main'\r\n      })\r\n      .state('main.department.inventory.publish', {\r\n        url: '/publish',\r\n        templateUrl: 'views/department/inventory-publish.html',\r\n        controller: 'Department.Inventory.Controller.publish'\r\n      })\r\n      .state('main.department.inventory.update', {\r\n        url: '/update/:item',\r\n        templateUrl: 'views/department/inventory-update.html',\r\n        controller: 'Department.Inventory.Controller.publish'\r\n      })\r\n      .state('main.department.inventory.upload', {\r\n        url: '/upload?ID',\r\n        cache:'false',\r\n        templateUrl: 'views/department/inventory-upload.html',\r\n        controller: 'Department.InventoryUpload.Controller'\r\n      })\r\n      .state('main.department.inventory.uploadExampleData', {\r\n        url: '/uploadExamples?ID',\r\n        cache:'false',\r\n        templateUrl: 'views/department/inventory-upload-examples.html',\r\n        controller: 'Department.InventoryUploadExamples.Controller'\r\n      })\r\n      .state('main.department.detail', {\r\n        url: '/detail/:item',\r\n        cache:'false',\r\n        templateUrl: 'views/department/inventory-detail.html',\r\n        controller: 'Department.InventoryDetail.Controller'\r\n      })\r\n      .state('main.department.share', {\r\n        url: '/share',\r\n        templateUrl: 'views/department/share.html',\r\n        controller: 'DepartmentShare.Controller.Main'\r\n      })\r\n      .state('main.department.share.detail', {\r\n        url: '/detail/:item',\r\n        templateUrl: 'views/department/share-detail.html',\r\n        controller: 'DepartmentShare.Controller.detail'\r\n      })\r\n      .state('main.department.requirementConfirm', {\r\n        url: '/requirement-confirm',\r\n        templateUrl: 'views/department/requirement-confirm.html',\r\n        controller: 'Department.Requirement.Controller.confirm'\r\n      })\r\n      .state('main.department.requirement', {\r\n        url: '/requirement',\r\n        templateUrl: 'views/department/requirement.html',\r\n        controller: 'Department.Requirement.Controller.Main'\r\n      })\r\n      .state('main.department.requirement.publish', {\r\n        url: '/publish',\r\n        templateUrl: 'views/department/requirement-publish.html'\r\n      })\r\n      .state('main.department.requirementConfirm.detail', {\r\n        url: '/detail?ID',\r\n        templateUrl: 'views/department/requirement-detail.html',\r\n        controller: 'Department.Requirement.Controller.detail'\r\n      })\r\n      .state('main.department.audit', {\r\n        url: '/audit',\r\n        cache:'false',\r\n        templateUrl: 'views/department/audit.html',\r\n        controller: 'Department.Audit.Controller.Main'\r\n      })\r\n      .state('main.department.auditinfo', {\r\n        url: '/auditinfo/:AUDITID/:RESOURCEID/:APPLYDEP/:APPLYTIME',\r\n        templateUrl: 'views/department/audit-info.html',\r\n        controller: 'Department.Audit.Controller.info'\r\n      })\r\n      .state('main.department.auditdetail', {\r\n        url: '/auditdetail/:AUDITSTATUS/:RESOURCEID/:APPLYTIME/:APPLYDEP/:OPINION',\r\n        templateUrl: 'views/department/audit-detail.html',\r\n        controller: 'Department.Audit.Controller.detail'\r\n      })\r\n\r\n  }\r\n]);\r\n\r\napp.run(['$rootScope', function($rootScope){\r\n  $rootScope.$on('$stateChangeStart',\r\n    function(event, toState, toParams, fromState, fromParams){\r\n\t\tif(toState.name!=='welcome'){\r\n\t\t  if(toState.name!=='login'){\r\n\t\t\tif(!sessionStorage.token){\r\n\t\t\t  window.location.href='/#/login';\r\n\t\t\t};\r\n\t\t  };\r\n\t\t}\r\n    });\r\n}]);\r\n","'use strict';\r\n/* Application Configration */\r\nvar Config = angular.module('Config', []);\r\n\r\nConfig.constant('API', {\r\n  // path: 'http://localhost:8080/drrp/api' //发布\r\n  // path: 'http://172.16.7.64:8080/api' //测试1\r\n    path: 'http://172.16.1.78:8080/api' //测试1\r\n  // path: 'http://192.168.9.43:8080/api' //测试2\r\n\r\n});\r\n","'use strict';\r\nvar AdminDepartment = angular.module('Admin.Department', ['ui.router']);\r\n\r\n/** DepartmentReq Controller */\r\nAdminDepartment.controller('Admin.Department.Controller.Main', ['$rootScope', '$scope', '$stateParams','AdminDepartment.Service.Http', 'AdminDepartment.Service.Component', '$uibModal', '$state',\r\n  function($rootScope, $scope, $stateParams, Http, Component, $uibModal, $state) {\r\n    $scope.Modal = {}; // Clean scope of modal\r\n    $scope.previousDepNames = [];\r\n    $scope.areaNames = [];\r\n    $scope.themeNames = [];\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n\r\n    var _httpParams = {};\r\n    _httpParams.limit = 10;\r\n    _httpParams.skip = 0;\r\n\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\r\n      getDepartmentList(_httpParams);\r\n    }\r\n    //pagination\r\n    function getDepartmentList(_httpParams) {\r\n      Http.getDepartmentList(_httpParams).then(function(result) {\r\n        $scope.AdminDepartments = result.data.body;\r\n      });\r\n    }\r\n\r\n    // init\r\n    getDepartmentList(_httpParams);\r\n    function getDepTotal(){\r\n      Http.getDepTotal().then(function(result) {\r\n        $scope.depTotal = result.data.body[0].number;\r\n        $scope.Paging.totalItems = $scope.depTotal;\r\n      });\r\n    }\r\n    getDepTotal();\r\n    Http.getDepartmentList().then(function(result) {\r\n      $scope.AllDepartments = result.data.body;\r\n    });\r\n    Http.getSysDict({\r\n      dict_category:\"7\"\r\n    }).then(function(result) {\r\n      $scope.types = result.data.body;\r\n    });\r\n    Http.getSysDict({\r\n      dict_category:\"9\"\r\n    }).then(function(result) {\r\n      $scope.areaNames = result.data.body;\r\n    });\r\n    Http.getSysDict({\r\n      dict_category:\"17\"\r\n    }).then(function(result) {\r\n      $scope.themeNames = result.data.body;\r\n    });\r\n\r\n    $scope.placeholder = {};\r\n    $scope.placeholder.dep_sn = \"必填\";\r\n    $scope.placeholder.order_by = \"必填\";\r\n    $scope.placeholder.dep_name = \"必填\";\r\n    $scope.placeholder.dep_short_name = \"必填\";\r\n    $scope.placeholder.dep_en_name = \"必填\";\r\n    $scope.placeholder.contacts = \"必填\";\r\n    $scope.placeholder.contact_phone = \"必填\";\r\n\r\n    // add Department\r\n    $scope.addDepartmentModal = function() {\r\n      $scope.Modal = {}; // Clean scope of modal\r\n      $scope.department = {}; // Clean scope of modal\r\n      $scope.department.dep_en_name=\"anquanting.png\";\r\n      $scope.department.parent_id = \"0\";\r\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\r\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\r\n      var promise = Component.popModal($scope, '添加', 'add-department-modal');\r\n      promise.opened.then(function() {\r\n        $scope.Modal.TypeArea = function(){\r\n          <!--parent_id is selected -->\r\n          if($scope.department.parent_id!=\"0\"){\r\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\r\n            $scope.department1 = $scope.AllDepartments[index];\r\n          }\r\n          <!--parent_id is selected -->\r\n        }\r\n        $scope.Modal.validDepName = function (depName){\r\n          $scope.validDepName = false;\r\n          $scope.placeholder.dep_name = \"必填\";\r\n          Http.getDepartmentList().then(function(result) {\r\n             var deps = result.data.body;\r\n             for (var i = 0; i < deps.length; i++) {\r\n               if(deps[i].dep_name === depName){\r\n                 $scope.validDepName = true;\r\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\r\n                 $scope.department.dep_name =\"\";\r\n               }\r\n             }\r\n          });\r\n        }\r\n        $scope.Modal.validPhone = function (){\r\n          $scope.placeholder.contact_phone = \"必填\";\r\n          $scope.validPhone = false ;\r\n          var reg =/^(\\d{3,4}-)?\\d{7,8}$|(^1[3|4|5|7|8]\\d{9}$)/;\r\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\r\n            $scope.validPhone = true ;\r\n            $scope.placeholder.contact_phone = \"电话格式不对\";\r\n            $scope.department.contact_phone =\"\";\r\n          }\r\n        }\r\n      });\r\n      promise.result.then(function() {\r\n        Http.saveDepartment($scope.department).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('添加成功');\r\n          }\r\n          else{\r\n            alert('添加失败');\r\n          }\r\n          _httpParams.limit = 10;\r\n          _httpParams.skip = 0;\r\n          $scope.Paging.currentPage = 0 ;\r\n          getDepartmentList(_httpParams);\r\n          getDepTotal();\r\n        })\r\n      });\r\n    }\r\n    $scope.updateDepartment = function(AdminDep) {\r\n      $scope.department = AdminDep;\r\n      $scope.department.parent_id = \"0\";\r\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\r\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\r\n      $scope.department.dep_en_name=\"anquanting.png\";\r\n      _.remove($scope.AllDepartments, function(dep) {\r\n        return (dep.dep_name == AdminDep.dep_name);\r\n     });\r\n      var promise = Component.popModal($scope, '修改', 'add-department-modal');\r\n      promise.opened.then(function() {\r\n        $scope.Modal.TypeArea = function(){\r\n          <!--parent_id is selected -->\r\n          if($scope.department.parent_id!=\"0\"){\r\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\r\n            $scope.department1 = $scope.AllDepartments[index];\r\n          }\r\n          <!--parent_id is selected -->\r\n        }\r\n        $scope.Modal.validDepName = function (depName){\r\n          $scope.validDepName = false;\r\n          $scope.placeholder.dep_name = \"必填\";\r\n          Http.getDepartmentList().then(function(result) {\r\n             var deps = result.data.body;\r\n             for (var i = 0; i < deps.length; i++) {\r\n               if(deps[i].dep_name === depName){\r\n                 $scope.validDepName = true;\r\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\r\n                 $scope.department.dep_name =\"\";\r\n               }\r\n             }\r\n          });\r\n        }\r\n        $scope.Modal.validPhone = function (){\r\n          $scope.placeholder.contact_phone = \"必填\";\r\n          $scope.validPhone = false ;\r\n          var reg =/^(\\d{3,4}-)?\\d{7,8}$|(^1[3|4|5|7|8]\\d{9}$)/;\r\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\r\n            $scope.validPhone = true ;\r\n            $scope.placeholder.contact_phone = \"电话格式不对\";\r\n            $scope.department.contact_phone =\"\";\r\n          }\r\n        }\r\n\r\n      });\r\n      promise.result.then(function() {\r\n        Http.updateDepartment($scope.department).then(function(result) {\r\n          _httpParams.limit = 10;\r\n          _httpParams.skip = 0;\r\n          $scope.Paging.currentPage = 0 ;\r\n          if (200 == result.data.head.status) {\r\n            alert('修改成功');\r\n          }\r\n          else{\r\n            alert('修改失败');\r\n          }\r\n          getDepartmentList(_httpParams);\r\n        })\r\n    });\r\n    }\r\n\r\n    $scope.deleteDepartment = function(AdminDep) {\r\n      var flag = confirm(\"确定要删除吗？\");\r\n      if (flag) {\r\n        Http.deleteDepartment(AdminDep).then(function(result) {\r\n          _httpParams.limit = 10;\r\n          _httpParams.skip = 0;\r\n          $scope.Paging.currentPage = 0 ;\r\n          if (200 == result.data.head.status) {\r\n            alert('删除成功');\r\n          }\r\n          else{\r\n            alert('删除失败！');\r\n          }\r\n          $state.go(\"main.admin.department\", {}, {\r\n            reload: true\r\n          });\r\n        })\r\n      }\r\n    }\r\n\r\n    //search department\r\n    $scope.searchDepartment = function(){\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      _httpParams.sysdepname = $scope.dep_name;\r\n      if($scope.dep_name==null){\r\n        getDepTotal();\r\n        getDepartmentList(_httpParams);\r\n      }else{\r\n        Http.getDepartmentList(_httpParams).then(function(result) {\r\n          if(result.data.head.total >=1){\r\n            $scope.AdminDepartments = result.data.body;\r\n            $scope.depTotal = result.data.head.total;\r\n            $scope.Paging.totalItems =  $scope.depTotal;\r\n          }else {\r\n            alert(\"系统没有查到'\"+$scope.dep_name+\"'这个部门，请重新输入\");\r\n            $scope.dep_name = \"\";\r\n            $state.go(\"main.admin.department\", {}, {\r\n              reload: true\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n])\r\n\r\n\r\n\r\n/* HTTP */\r\nAdminDepartment.factory('AdminDepartment.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n\r\n    function getDepartmentList(params) {\r\n      return $http.get(\r\n        path + '/sys_dep',{\r\n          params:params\r\n        }\r\n      )\r\n    };\r\n\r\n    function getDepTotal() {\r\n      return $http.get(\r\n        path + '/sys_dep/count'\r\n      )\r\n    };\r\n    function saveDepartment(data) {\r\n      return $http.post(\r\n        path + '/sys_dep', {\r\n          data: data\r\n        }\r\n      )\r\n    };\r\n    function getSysDict(params){\r\n      return $http.get(\r\n        path + '/sys_dict', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    function updateDepartment(data) {\r\n      return $http.put(\r\n        path + '/sys_dep' , {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n    function deleteDepartment(data) {\r\n      return $http.delete(\r\n        path + '/sys_dep', {\r\n            data: {\"id\":data.id}\r\n        }\r\n      )\r\n    }\r\n\r\n    return {\r\n      getDepartmentList: getDepartmentList,\r\n      getDepTotal: getDepTotal,\r\n      saveDepartment: saveDepartment,\r\n      getSysDict: getSysDict,\r\n      updateDepartment: updateDepartment,\r\n      deleteDepartment: deleteDepartment\r\n    }\r\n  }\r\n]);\r\n\r\n/* Component */\r\nAdminDepartment.service('AdminDepartment.Service.Component', ['$uibModal','$state',\r\n  function($uibModal,$state) {\r\n    // prompt Alert\r\n    function popAlert(scope, info) {\r\n      scope.Alerts = [{\r\n        type: info.type,\r\n        message: info.message,\r\n        timeout: 1200\r\n      }];\r\n      scope.CloseAlert = function(index) {\r\n        scope.Alerts.splice(index, 1);\r\n      };\r\n    };\r\n    // prompt Modal\r\n    function popModal(scope, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        backdrop : 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        scope: scope,\r\n        size: 'md'\r\n      });\r\n      scope.Modal.confirm = function(isValid) {\r\n        if (isValid) {\r\n          modalInstance.close(scope.Modal);\r\n        }\r\n\r\n      };\r\n      scope.Modal.cancel = function() {\r\n        modalInstance.dismiss();\r\n        $state.go(\"main.admin.department\", {}, {\r\n          reload: true\r\n        });\r\n      };\r\n      return modalInstance;\r\n    };\r\n\r\n    return {\r\n      popAlert: popAlert,\r\n      popModal: popModal\r\n    }\r\n  }\r\n])\r\n","  'use strict';\r\n  var AdminDepResource = angular.module('Admin.DepResource', ['ui.router']);\r\n\r\n  /** DepartmentReq Controller */\r\n  AdminDepResource.controller('Admin.DepResource.Controller.Main', ['$scope', 'AdminDepResource.Service.Http', '$state',\r\n  function($scope,  Http, $state) {\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n\r\n    var _httpParams = {};\r\n    _httpParams.limit =10;\r\n    _httpParams.skip = 0;\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\r\n      getDepRelRescount(_httpParams);\r\n    }\r\n\r\n    function getDepsTotal() {\r\n      Http.getDepCount().then(function(result) {\r\n        $scope.depTotal = result.data.body[0].number;\r\n        $scope.Paging.totalItems = $scope.depTotal;\r\n      });\r\n    }\r\n    function getDepRelRescount(params) {\r\n      Http.getDepRelRescount(params).then(function(result) {\r\n        $scope.depRecouces = result.data.body;\r\n      });\r\n    }\r\n    //init;\r\n    getDepsTotal();\r\n    getDepRelRescount(_httpParams);\r\n\r\n\r\n\r\n  }\r\n  ])\r\n\r\n  /* HTTP */\r\nAdminDepResource.factory('AdminDepResource.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n\r\n    function getDepCount() {\r\n      return $http.get(\r\n        path + '/sys_dep/count'\r\n      )\r\n    };\r\n    function getDepRelRescount(params) {\r\n      return $http.get(\r\n        path + '/deprelrescount',{\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    return {\r\n      getDepRelRescount: getDepRelRescount,\r\n      getDepCount: getDepCount\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar Admin = angular.module('Admin', ['ui.router','ngCookies']);\r\n\r\n/** DepartmentReq Controller */\r\nAdmin.controller('Admin.Controller.Main', ['$cookies', '$scope', '$stateParams',\r\n  function($cookies, $scope, $stateParams) {\r\n       var User = JSON.parse($cookies.get('User'));\r\n       if(User.id === \"e147f177-1e83-11e6-ac02-507b9d1b58bb\"){\r\n         $scope.titleName =\"用户/部门管理\";\r\n       }else{\r\n         $scope.titleName = \"用户管理\";\r\n       }\r\n  }\r\n])\r\n","'use strict';\r\nvar AdminUser = angular.module('Admin.User', ['ui.router','ngCookies']);\r\n\r\n/** DepartmentReq Controller */\r\nAdminUser.controller('Admin.User.Controller.Main', ['$cookies', '$scope', '$q', '$stateParams','AdminUser.Service.Http', 'AdminUser.Service.Component','$uibModal','$state',\r\n  function($cookies, $scope, $q, $stateParams, Http, Component, $uibModal, $state) {\r\n    var LoginUser = JSON.parse($cookies.get('User'));\r\n    var dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_id);\r\n    var dep_name= ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_name);\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n\r\n    var _httpParams = {};\r\n    _httpParams.limit =10;\r\n    _httpParams.skip = 0;\r\n    _httpParams.dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : dep_id);\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\r\n      getUserList(_httpParams);\r\n    }\r\n\r\n\r\n    $scope.Modal = {}; // Clean scope of modal\r\n    $scope.deptList = [];\r\n    function getUserList(_httpParams) {\r\n      Http.getUserList(_httpParams).then(function(result) {\r\n        $scope.users = result.data.body;\r\n      });\r\n    }\r\n    function getUserTotal(){\r\n      Http.getUserTotal({\r\n        \"dep_id\" : dep_id\r\n      }).then(function(result) {\r\n        if (LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') {\r\n          var tatol =  result.data.body[0].number - 1 ;\r\n          $scope.UserTotal = tatol;\r\n        }else {\r\n          $scope.UserTotal = result.data.body[0].number;\r\n        }\r\n        $scope.Paging.totalItems = $scope.UserTotal;\r\n      });\r\n    }\r\n    // init\r\n    getUserTotal();\r\n    getUserList(_httpParams);\r\n\r\n    //department\r\n    Http.getDepartmentList({\r\n      'dep_name': dep_name\r\n    }).then(function(result) {\r\n      $scope.deptList = result.data.body;\r\n    });\r\n\r\n    $scope.placeholder = {};\r\n    $scope.placeholder.name = \"必填\";\r\n    $scope.placeholder.password = \"必填\";\r\n    $scope.placeholder.password1 = \"必填\";\r\n    $scope.placeholder.personName = \"必填\";\r\n    $scope.placeholder.organization = \"必填\";\r\n    $scope.placeholder.organization_code = \"必填，根据机构名称自动生成\";\r\n    $scope.placeholder.phone = \"必填\";\r\n    $scope.placeholder.email = \"必填\";\r\n    $scope.placeholder.remark = \"\";\r\n    // add user\r\n    $scope.addUserModal = function() {\r\n      $scope.Modal = {}; // Clean scope of modal\r\n      $scope.sysUser = {}; // Clean scope of modal\r\n      $scope.sysUser.remark = \"\";\r\n      var prom = Component.popModal($scope, '添加', 'add-user-modal');\r\n      prom.opened.then(function() {\r\n        $scope.Modal.validUser = function (user){\r\n          $scope.placeholder.name =\"必填\";\r\n          $scope.validUser = false;\r\n          Http.getUserList({\r\n            \"dep_id\":dep_id\r\n          }).then(function(result) {\r\n             var users = result.data.body;\r\n             for (var i = 0; i < users.length; i++) {\r\n               if(users[i].username === user){\r\n                 $scope.validUser = true;\r\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\r\n                 $scope.sysUser.username =\"\";\r\n               }\r\n             }\r\n          });\r\n        }\r\n        $scope.Modal.organization = function(){\r\n          $scope.placeholder.organization = \"必填\";\r\n          $scope.placeholder.organization_code = \"必填，根据机构名称自动生成\";\r\n          $scope.organization = false;\r\n          var organization = $scope.sysUser.organization ;\r\n          if(organization){\r\n            Http.getUserOrganizationCode({\r\n              \"organization\":organization\r\n            }).then(function (result){\r\n              var organizationArray = result.data.body[0].organization_code.split(\",\");\r\n              if(organizationArray[1]==0){\r\n                $scope.sysUser.organization_code = organizationArray[0] ;\r\n              }else{\r\n                $scope.placeholder.organization = \"机构名称已存在，请重新输入\";\r\n                $scope.organization = true;\r\n                $scope.sysUser.organization = \"\";\r\n              }\r\n            });\r\n          }\r\n        }\r\n        $scope.Modal.validPword = function (){\r\n          $scope.placeholder.password1 =\"必填\";\r\n          $scope.validPword = false;\r\n          if($scope.sysUser.password!=$scope.sysUser.password1&&$scope.sysUser.password1!=null){\r\n            $scope.validPword = true;\r\n            $scope.placeholder.password1 =\"两次输入的密码不同,请重新输入\";\r\n            $scope.sysUser.password1 =\"\";\r\n          }\r\n        }\r\n        $scope.Modal.validPhone = function (){\r\n          $scope.placeholder.phone = \"必填\";\r\n          $scope.validPhone = false ;\r\n          var reg =/^(\\d{3,4}-)?\\d{7,8}$|(^1[3|4|5|7|8]\\d{9}$)/;\r\n          if(!reg.test($scope.sysUser.phone)&&($scope.sysUser.phone!=null)){\r\n            $scope.validPhone = true ;\r\n            $scope.placeholder.phone = \"电话格式不对\";\r\n            $scope.sysUser.phone =\"\";\r\n          }\r\n        }\r\n        $scope.Modal.validEmail = function (invalid){\r\n          $scope.placeholder.email = \"必填\";\r\n          $scope.validEmail = false ;\r\n          if(invalid){\r\n            $scope.validEmail = true ;\r\n            $scope.placeholder.email = \"邮箱格式不对\";\r\n            $scope.sysUser.email =\"\";\r\n          }\r\n        }\r\n\r\n      });\r\n      prom.result.then(function() {\r\n        Http.saveUser($scope.sysUser).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('添加成功');\r\n          }\r\n          else{\r\n            alert('保存数据库失败');\r\n          }\r\n          _httpParams.limit = 10;\r\n          _httpParams.skip = 0;\r\n          $scope.Paging.currentPage = 0 ;\r\n          getUserList(_httpParams);\r\n          getUserTotal();\r\n        })\r\n      });\r\n\r\n\r\n\r\n    }\r\n    $scope.updateUser = function(user) {\r\n      $scope.sysUser = user;\r\n      $scope.sysUser.password1 =0;\r\n      $scope.sysUser.password = 0;\r\n      $scope.sysUser.remark = ((user.remark) ?user.remark : \"\");\r\n      var prom = Component.popModal($scope, '修改', 'add-user-modal');\r\n      prom.opened.then(function() {\r\n        $scope.Modal.validUser = function (user){\r\n          $scope.placeholder.name =\"必填\";\r\n          $scope.validUser = false;\r\n          Http.getUserList({\r\n            \"dep_id\":dep_id\r\n          }).then(function(result) {\r\n             var users = result.data.body;\r\n             for (var i = 0; i < users.length; i++) {\r\n               if(users[i].username === user){\r\n                 $scope.validUser = true;\r\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\r\n                 $scope.sysUser.username =\"\";\r\n               }\r\n             }\r\n          });\r\n        }\r\n        $scope.Modal.organization = function(){\r\n          $scope.placeholder.organization = \"必填\";\r\n          $scope.placeholder.organization_code = \"必填，根据机构名称自动生成\";\r\n          $scope.organization = false;\r\n          var organization = $scope.sysUser.organization ;\r\n          var dep_id = $scope.sysUser.dep_id ;\r\n          if(organization){\r\n            Http.getUserOrganizationIsEqual({\r\n              \"organization\":organization,\r\n              \"dep_id\":dep_id\r\n            }).then(function (result){\r\n              if(\"false\" == result.data.body[0].isexists){\r\n                $scope.placeholder.organization = \"机构名称已存在，请重新输入\";\r\n                $scope.organization = true;\r\n                $scope.sysUser.organization =\"\"  ;\r\n              }else{\r\n                $scope.organization = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n        $scope.Modal.validPhone = function (){\r\n          $scope.placeholder.phone = \"必填\";\r\n          $scope.validPhone = false ;\r\n          var reg =/^(\\d{3,4}-)?\\d{7,8}$|(^1[3|4|5|7|8]\\d{9}$)/;\r\n          if(!reg.test($scope.sysUser.phone)&&$scope.sysUser.phone!=null){\r\n            $scope.validPhone = true ;\r\n            $scope.placeholder.phone = \"电话格式不对\";\r\n            $scope.sysUser.phone =\"\";\r\n          }\r\n        }\r\n        $scope.Modal.validEmail = function (invalid){\r\n          $scope.placeholder.email = \"必填\";\r\n          $scope.validEmail = false ;\r\n          if(invalid){\r\n            $scope.validEmail = true ;\r\n            $scope.placeholder.email = \"邮箱格式不对\";\r\n            $scope.sysUser.email =\"\";\r\n          }\r\n        }\r\n\r\n      });\r\n      prom.result.then(function() {\r\n        Http.updateUser($scope.sysUser).then(function(result) {\r\n          _httpParams.limit = 10;\r\n          _httpParams.skip = 0;\r\n          $scope.Paging.currentPage = 0 ;\r\n          if (200 == result.data.head.status) {\r\n            alert('修改成功');\r\n          }\r\n          else{\r\n            alert('修改失败');\r\n          }\r\n          getUserList(_httpParams);\r\n        })\r\n      });\r\n    }\r\n    // $scope.deleteUser = function(user) {\r\n    //   if(user.id!=LoginUser.id){\r\n    //     var flag = confirm(\"确定要删除吗？\");\r\n    //     if (flag) {\r\n    //       Http.deleteUser(user).then(function(result) {\r\n    //         _httpParams.limit = 10;\r\n    //         _httpParams.skip = 0;\r\n    //         $scope.Paging.currentPage = 0 ;\r\n    //         if (200 == result.data.head.status) {\r\n    //           alert('删除成功');\r\n    //           getUserTotal();\r\n    //           getUserList(_httpParams);\r\n    //         }\r\n    //         else{\r\n    //           alert('删除失败！');\r\n    //         }\r\n    //         $state.go(\"main.admin.user\", {}, {\r\n    //           reload: true\r\n    //         });\r\n    //       })\r\n    //     }\r\n    //   }else{\r\n    //     alert(\"当前登录用户不能删除！\");\r\n    //   }\r\n    // }\r\n\r\n    $scope.Password = function(user) {\r\n      $scope.placeholder.password_1 = \"必填\";\r\n      $scope.placeholder.password_2 = \"必填\";\r\n      $scope.placeholder.password_3 = \"必填\";\r\n      var id = 0;\r\n      id = user.id;\r\n      $scope.Modal.password_pre = \"\";\r\n      $scope.Modal.p2 = \"\";\r\n      $scope.Modal.password = \"\";\r\n      $scope.password_1 = false;\r\n      $scope.password_2 = false;\r\n      $scope.password_3 = false;\r\n      var prom = Component.popModal($scope, '密码', 'update-password-modal');\r\n      prom.opened.then(function() {\r\n        $scope.Modal.validPword1 = function (){\r\n          $scope.password_1 = false;\r\n          $scope.placeholder.password_1 =\"必填\";\r\n          Http.validatePassword({\r\n            \"id\":id,\r\n            \"password\":$scope.Modal.password_pre\r\n          }).then(function(result) {\r\n            if(result.data.head.total == 0) {\r\n              $scope.password_1 = true;\r\n              $scope.placeholder.password_1 =\"原密码不对,请重新输入\";\r\n              $scope.Modal.password_pre = \"\";\r\n            }\r\n          });\r\n        }\r\n        $scope.Modal.validPword = function (){\r\n             $scope.password_3 = false;\r\n             $scope.placeholder.password_3 =\"必填\";\r\n             if($scope.Modal.p2!=$scope.Modal.password){\r\n               $scope.password_3 = true;\r\n               $scope.placeholder.password_3 = \"两次输入的密码不同,请重新输入\";\r\n               $scope.Modal.password =\"\";\r\n             }\r\n        }\r\n      });\r\n\r\n      prom.result.then(function() {\r\n        Http.UpdatePassword({\r\n          \"id\": id,\r\n          \"password\":$scope.Modal.password\r\n        }).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('修改成功');\r\n          }\r\n          else{\r\n            alert('修改失败');\r\n          }\r\n          _httpParams.limit = 10;\r\n          _httpParams.skip = 0;\r\n          $scope.Paging.currentPage = 0 ;\r\n          getUserList(_httpParams);\r\n          getUserTotal();\r\n        })\r\n      });\r\n    }\r\n\r\n    //search user\r\n    $scope.searchUser = function(){\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      _httpParams.dep_id = dep_id;\r\n      _httpParams.sysusername = $scope.username;\r\n      if($scope.username==null){\r\n        getUserTotal();\r\n        getUserList(_httpParams);\r\n      }else{\r\n        Http.getUserList(_httpParams).then(function(result) {\r\n          if(result.data.head.total >= 1){\r\n            $scope.users = result.data.body;\r\n            $scope.UserTotal = result.data.head.total;\r\n            $scope.Paging.totalItems = $scope.UserTotal;\r\n          }else{\r\n            alert(\"系统没有查到'\"+$scope.username+\"'这个用户名，请重新输入\");\r\n            $state.go(\"main.admin.user\", {}, {\r\n              reload: true\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n])\r\n\r\n/* HTTP */\r\nAdminUser.factory('AdminUser.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n\r\n    function getUserOrganizationCode(params) {\r\n      return $http.get(\r\n        path + '/sys_user/organization_code',{\r\n           params: params\r\n        }\r\n      )\r\n    };\r\n    function getUserOrganizationIsEqual(params) {\r\n      return $http.get(\r\n        path + '/sys_user/organization',{\r\n           params: params\r\n        }\r\n      )\r\n    };\r\n    function getUserList(params) {\r\n      return $http.get(\r\n        path + '/sys_user',{\r\n           params: params\r\n        }\r\n      )\r\n    };\r\n    function getUserTotal(params) {\r\n      return $http.get(\r\n        path + '/sys_user/count',{\r\n           params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function getDepartmentList(params) {\r\n      return $http.get(\r\n        path + '/sys_dep',{\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function saveUser(data) {\r\n      return $http.post(\r\n        path + '/sys_user', {\r\n          data: data\r\n        }\r\n      )\r\n    };\r\n\r\n    function updateUser(data) {\r\n      return $http.put(\r\n        path + '/sys_user' , {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    function deleteUser(data) {\r\n      return $http.delete(\r\n        path + '/sys_user', {\r\n            data: {\"id\":data.id}\r\n        }\r\n      )\r\n    }\r\n    function validatePassword(params){\r\n      return $http.get(\r\n        path + '/sys_user/password', {\r\n            params: params\r\n        }\r\n      )\r\n    }\r\n    function UpdatePassword(data) {\r\n      return $http.put(\r\n        path + '/sys_user/password' , {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n    return {\r\n      getUserOrganizationCode: getUserOrganizationCode,\r\n      getUserOrganizationIsEqual: getUserOrganizationIsEqual,\r\n      getUserList: getUserList,\r\n      saveUser: saveUser,\r\n      getDepartmentList: getDepartmentList,\r\n      updateUser: updateUser,\r\n      deleteUser: deleteUser,\r\n      getUserTotal: getUserTotal,\r\n      validatePassword: validatePassword,\r\n      UpdatePassword: UpdatePassword\r\n    }\r\n  }\r\n]);\r\n\r\n/* Component */\r\nAdminUser.service('AdminUser.Service.Component', ['$uibModal','$state',\r\n  function($uibModal,$state) {\r\n    // prompt Alert\r\n    function popAlert(scope, info) {\r\n      scope.Alerts = [{\r\n        type: info.type,\r\n        message: info.message,\r\n        timeout: 1200\r\n      }];\r\n      scope.CloseAlert = function(index) {\r\n        scope.Alerts.splice(index, 1);\r\n      };\r\n    };\r\n    // prompt Modal\r\n    function popModal(scope, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        backdrop : 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        scope: scope,\r\n        size: 'md'\r\n      });\r\n      scope.Modal.confirm = function(isValid) {\r\n        if (isValid) {\r\n          modalInstance.close(scope.Modal);\r\n        }\r\n\r\n      };\r\n\r\n      scope.Modal.cancel = function() {\r\n        modalInstance.dismiss();\r\n        $state.go(\"main.admin.user\", {}, {\r\n          reload: true\r\n        });\r\n      };\r\n      return modalInstance;\r\n    };\r\n\r\n    return {\r\n      popAlert: popAlert,\r\n      popModal: popModal\r\n    }\r\n  }\r\n])\r\n","'use strict';\r\nvar Dashboard = angular.module('Dashboard', ['ui.router','ui.bootstrap']);\r\n\r\n/** Dashboard Controller */\r\nDashboard.controller('Dashboard.Controller.Main', ['$cookies', '$scope', 'Dashboard.Service.Http', 'Dashboard.Requirement.Service.Component',\r\n  function($cookies,$scope, Http, Component) {\r\n\r\n    <!--user infomation-->\r\n    var LoginUser = JSON.parse($cookies.get('User'));\r\n    var DEP_ID = LoginUser.dep_id;\r\n\r\n    <!-- Bureaus logo grid -->\r\n    Http.getDepartments().then(function(result) {\r\n      if (200 == result.data.head.status) {\r\n        $scope.Bureaus = result.data.body;\r\n      }\r\n    });\r\n    <!-- #Bureaus logo grid -->\r\n\r\n    <!-- ECharts -->\r\n    $scope.DataquotaSummary = Http.getDataquotaSummary();\r\n    $scope.DataRequirementSummary = Http.getDataRequirementSummary();\r\n    Http.getDataquotaSummary().then(function(result){\r\n      $scope.SummaryDataQuota = result.data.body[0];\r\n    });\r\n    Http.getDataRequirementSummary().then(function(result){\r\n      $scope.SummaryRequirement = result.data.body[0];\r\n    });\r\n    <!-- #ECharts -->\r\n\r\n    <!-- DataQuota & Requirement Summary -->\r\n    Http.getDataQuotaNew({\r\n      skip: 0, limit: 7\r\n    }).then(function(result) {\r\n      if (200 == result.data.head.status) {\r\n        $scope.NewIndicators = result.data.body;\r\n      }\r\n    });\r\n\r\n    //init\r\n    getDataRequirementNew();\r\n    function getDataRequirementNew() {\r\n      Http.getDataRequirementNew({\r\n        skip: 0, limit: 7, response_dep_id: DEP_ID\r\n      }).then(function(result) {\r\n        if(200 == result.data.head.status){\r\n          $scope.Requirements = result.data.body[0].results;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Handle Selected Department\r\n    $scope.select = function(param){\r\n      $scope.departmentID = {resource_dep_id: param};\r\n      Http.getDataQuota({\r\n        skip: 0, limit: 5,  dep_name: param\r\n      }).then(function(result){\r\n          $scope.followDepIndicators = result.data.body[0].results;\r\n      });\r\n    }\r\n\r\n    Http.getDeptInfoResourceList().then(function(result) {\r\n      console.log(result);\r\n      $scope.depInfoResourceList = result.data.body;\r\n\r\n      //  $scope.Paging.totalItems = data.head.total;\r\n    });\r\n\r\n\r\n    // 点击展开\r\n    $scope.openItems = function(index, resourceId) {\r\n      $scope.collapseIndex = index;\r\n      $scope.closeShow = true;\r\n      $scope.showIndex = index;\r\n      $scope.InfoItems = [];\r\n      Http.getInfoItemList({\r\n        resource_id: resourceId\r\n      }).then(function(result) {\r\n        if (result.data.body.length == 0) {\r\n          $scope.InfoItemShow = false;\r\n        } else {\r\n          $scope.InfoItemShow = true;\r\n          $scope.InfoItems = result.data.body;\r\n\r\n          _($scope.InfoItems).forEach(function(item) {\r\n            var shareFreqDictName = [];\r\n            _(item.config).forEach(function(config) {\r\n              shareFreqDictName.push(config.dict_name);\r\n            })\r\n            item.update_period_name = shareFreqDictName.toString();\r\n          })\r\n        }\r\n\r\n\r\n      })\r\n    }\r\n\r\n    //confirm\r\n    $scope.RequirementConfirm = function(requirement) {\r\n      // get requirement detail\r\n      $scope.Modal ={};\r\n      $scope.Modal.ReqDetail = requirement;\r\n      // 初始化选项状态\r\n      $scope.Modal.ReqResponse = {};\r\n      $scope.resourceItemSelection = [];\r\n      $scope.resourceSelection = [];\r\n      $scope.resource_id = null;\r\n      $scope.closeShow = false;\r\n      $scope.showIndex = -1;\r\n      $scope.collapseIndex = -1;\r\n\r\n      if ($scope.depInfoResourceList.length == 0) {\r\n        $scope.Modal.ReqResponse.resource_id = '';\r\n        $scope.errorMsg = '本部门还未发布任何信息资源';\r\n        $scope.dataQuotaIdNull = true;\r\n      }\r\n      // else{\r\n      //   $scope.Modal.ReqResponse.resource_id = _.map($scope.outputResource,'id');\r\n      // }\r\n\r\n      Component.popModalConfirm($scope, '', 'confirm-req-modal').result.then(function() {\r\n        $scope.Modal.ReqResponse.resource_id = $scope.resource_id;\r\n\r\n        console.log($scope.Modal.ReqResponse);\r\n        console.log($scope.resourceItemSelection);\r\n        $scope.Modal.ReqResponse.requiement_id = item.id;\r\n\r\n        Http.updateRequirement($scope.Modal.ReqResponse).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            if ($scope.Modal.ReqResponse.status == 1) {\r\n              var http_params = [];\r\n              if($scope.resourceItemSelection.length == 0) {\r\n                var obj = {};\r\n                obj.requiement_id = item.id;\r\n                obj.resource_id = $scope.Modal.ReqResponse.resource_id,\r\n                obj.item_id = '';\r\n                http_params.push(obj);\r\n              }\r\n              else{\r\n                _($scope.resourceItemSelection).forEach(function(value) {\r\n                  var obj = {};\r\n                  obj.requiement_id = item.id;\r\n                  obj.resource_id = $scope.Modal.ReqResponse.resource_id,\r\n                  obj.item_id = value;\r\n                  http_params.push(obj);\r\n                });\r\n              }\r\n              // 保存需求响应\r\n              Http.saveReqResponse(http_params).then(function(saveResult) {\r\n                if (200 == saveResult.data.head.status) {\r\n                  alert('保存成功！');\r\n                  getDataRequirementNew();\r\n                } else {\r\n                  alert('保存失败！');\r\n                  getDataRequirementNew();\r\n                }\r\n              })\r\n            } else {\r\n              alert('保存成功！');\r\n              getDataRequirementNew();\r\n            }\r\n\r\n          } else {\r\n            alert('保存失败');\r\n          }\r\n        })\r\n      });\r\n    }\r\n\r\n\r\n    // Generoted Department\r\n    Http.getUserDep().then(function(result) {\r\n        if (200 === result.data.head.status && result.data.body.length >= 1) {\r\n          $scope.followDeps = result.data.body;\r\n          return result.data.body[0].id;\r\n        }else{\r\n          return 0;\r\n        }\r\n      }).then(function(followDepId){\r\n        Http.getDataQuota({\r\n          skip: 0,\r\n          limit: 5,\r\n          dep_name: followDepId\r\n        }).then(function(result){\r\n          $scope.followDepIndicators = result.data.body[0].results;\r\n        });\r\n     });\r\n\r\n }\r\n])\r\n\r\n/* HTTP Factory */\r\nDashboard.factory('Dashboard.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n\r\n    // 需求确认修改状态\r\n    function updateRequirement(data) {\r\n      return $http.put(\r\n        path + '/data_requiement_ok', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n    function saveReqResponse(data) {\r\n      return $http.post(\r\n        path + '/data_requiement_response', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n    function getDataQuotaNew(params) {\r\n      return $http.get(\r\n        path + '/data_resource/new', {params: params}\r\n      )\r\n    };\r\n    function getDataRequirementNew(params) {\r\n      return $http.get(\r\n        path + '/data_requiement', {params: params}\r\n      )\r\n    };\r\n    function getDepartments() {\r\n      return $http.get(\r\n        path + '/sys_dep'\r\n      )\r\n    };\r\n    function getDataquotaSummary(){\r\n      return $http.get(\r\n        path + '/data_resource/summary'\r\n      )\r\n    };\r\n    function getDataRequirementSummary(){\r\n      return $http.get(\r\n        path + '/data_requiement/summary'\r\n      )\r\n    };\r\n    function getUserDep(params){\r\n      return $http.get(\r\n        path + '/department',{params: params}\r\n      )\r\n    };\r\n    function getDataQuota(params){\r\n      return $http.get(\r\n        path + '/data_quota',{params: params}\r\n      )\r\n    };\r\n\r\n    function getDeptInfoResourceList(params) {\r\n      return $http.get(\r\n        path + '/dep_resource_list', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    function getInfoItemList(params) {\r\n      return $http.get(\r\n        path + '/allitem_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    return {\r\n      updateRequirement: updateRequirement,\r\n      saveReqResponse: saveReqResponse,\r\n      getDataQuotaNew: getDataQuotaNew,\r\n      getDataRequirementNew: getDataRequirementNew,\r\n      getDepartments: getDepartments,\r\n      getDataquotaSummary: getDataquotaSummary,\r\n      getDataRequirementSummary: getDataRequirementSummary,\r\n      getUserDep: getUserDep,\r\n      getDataQuota: getDataQuota,\r\n      getDeptInfoResourceList: getDeptInfoResourceList,\r\n      getInfoItemList: getInfoItemList\r\n    };\r\n\r\n  }\r\n]);\r\n\r\n/** Dashboard Directive */\r\nDashboard.directive('wiservDataQuotaOverviewChart', [\r\n  function() {\r\n    return {\r\n      restrict: 'AE',\r\n      template: \"<div style='width:300;height:215px;position:relative;top:-1px'></div>\",\r\n      link: function(scope, element, attr) {\r\n        scope.DataquotaSummary.then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            var summary = result.data.body[0];\r\n            var myChart = echarts.init((element.find('div'))[0]);\r\n          //   var option = {\r\n          //     tooltip: {\r\n          //       trigger: 'item',\r\n          //       formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n          //     },\r\n          //     series: [{\r\n          //       name: '资源提供部门',\r\n          //       type: 'pie',\r\n          //       // selectedMode: 'single',\r\n          //       radius: [0, '45%'],\r\n          //       label: {\r\n          //         normal: {\r\n          //           position: 'inner',\r\n          //           textStyle :{\r\n          //               color:'#FFAD38'\r\n          //             }\r\n          //         }\r\n          //       },\r\n          //       labelLine: {\r\n          //         normal: {\r\n          //           show: true\r\n          //         }\r\n          //       },\r\n          //       data: [{\r\n          //         value: (summary) ? (summary.dep_resource): '0' ,\r\n          //         name: '提供部门'\r\n          //       }, {\r\n          //         value: (summary) ? (summary.month_increment_dpet_resource) : '0' ,\r\n          //         name: '本月新增',\r\n          //         selected: true\r\n          //       }]\r\n          //     }, {\r\n          //       name: '资源总数',\r\n          //       type: 'pie',\r\n          //       radius: ['60%', '67%'],\r\n          //       data: [{\r\n          //         value: (summary) ? (summary.total_resource) : '0',\r\n          //         name: '资源总数'\r\n          //       }, {\r\n          //         value: (summary) ? (summary.month_increment_resource) : '0',\r\n          //         name: '本月新增',\r\n          //         selected: true\r\n          //       }]\r\n          //     }]\r\n          //   };\r\n          //   myChart.setOption(option);\r\n            var option = {\r\n              tooltip : {\r\n                  formatter: \"{a} <br/>{c} {b}\"\r\n              },\r\n              series : [\r\n                  {\r\n                      name: '资源总数',\r\n                      type: 'gauge',\r\n                      center: ['69%', '55%'],    // 默认全局居中\r\n                      z: 3,\r\n                      min: 0,\r\n                      max: ((220-summary.total_resource)<50)? (Math.ceil(summary.total_resource/11)*11+55) : 220,\r\n                      splitNumber: 11,\r\n                      radius: '90%',\r\n                      axisLine: {            // 坐标轴线\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              width: 10\r\n                          }\r\n                      },\r\n                      axisTick: {            // 坐标轴小标记\r\n                          length: 15,        // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      splitLine: {           // 分隔线\r\n                          length: 20,         // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      pointer: {\r\n                          width:3\r\n                      },\r\n                      title : {\r\n                        offsetCenter: [0, '-10%'],\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                          fontWeight: '',\r\n                          fontSize: 15,\r\n                          fontStyle: 'italic'\r\n                        }      // x, y，单位px       // x, y，单位px\r\n                      },\r\n                      detail : {\r\n                          textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                              fontWeight: ''\r\n                          }\r\n                      },\r\n                      data:[{\r\n                        value: (summary) ? (summary.total_resource) : 0 ,\r\n                        name: '/条（资源总数）'\r\n                    }]\r\n                  },\r\n                  {\r\n                      name: '本月新增',\r\n                      type: 'gauge',\r\n                      center: ['23%', '65%'],    // 默认全局居中\r\n                      radius: '65%',\r\n                      min:0,\r\n                      max:((70-summary.month_increment_resource)<10)? (Math.ceil(summary.month_increment_resource/7)*7+14) : 70,\r\n                      endAngle:20,\r\n                      splitNumber:7,\r\n                      axisLine: {            // 坐标轴线\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              width: 8\r\n                          }\r\n                      },\r\n                      axisTick: {            // 坐标轴小标记\r\n                          length:12,        // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      splitLine: {           // 分隔线\r\n                          length:20,         // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      pointer: {\r\n                          width:3\r\n                      },\r\n                      title: {\r\n                          offsetCenter: [0, '-1%'],\r\n                          textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            fontWeight: '',\r\n                            fontSize: 10,\r\n                            fontStyle: 'italic'\r\n                         }      // x, y，单位px\r\n                      },\r\n                      detail: {\r\n                      },\r\n                      data:[{\r\n                        value:(summary) ? (summary.month_increment_resource) : 0,\r\n                        name: '/条(本月新增)'\r\n                      }]\r\n                  }\r\n\r\n              ]\r\n            };\r\n            myChart.setOption(option);\r\n            // app.timeTicket = setInterval(function (){\r\n            //     option.series[0].data[0].value = (Math.random()*100).toFixed(2) - 0;\r\n            //     option.series[1].data[0].value = (Math.random()*7).toFixed(2) - 0;\r\n            //     option.series[2].data[0].value = (Math.random()*2).toFixed(2) - 0;\r\n            //     option.series[3].data[0].value = (Math.random()*2).toFixed(2) - 0;\r\n            //     myChart.setOption(option,true);\r\n            // },2000);\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n]);\r\n\r\n\r\nDashboard.directive('wiservRequirementOverviewChart', [\r\n  function() {\r\n    return {\r\n      restrict: 'AE',\r\n      template: \"<div style='width:300;height:215px;position:relative;top:-1px'></div>\",\r\n      link: function(scope, element, attr) {\r\n        scope.DataRequirementSummary.then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            var summary = result.data.body[0];\r\n            var myChart = echarts.init((element.find('div'))[0]);\r\n            // var option = {\r\n            //   tooltip: {\r\n            //     trigger: 'item',\r\n            //     formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n            //   },\r\n            //   series: [{\r\n            //     name: '涉及部门',\r\n            //     type: 'pie',\r\n            //     // selectedMode: 'single',\r\n            //     radius: [0, '45%'],\r\n            //     label: {\r\n            //       normal: {\r\n            //         position: 'inner',\r\n            //         textStyle :{\r\n            //             color:'#FFAD38'\r\n            //           }\r\n            //       }\r\n            //     },\r\n            //     labelLine: {\r\n            //       normal: {\r\n            //         show: false\r\n            //       }\r\n            //     },\r\n            //     data: [{\r\n            //       value: (summary) ? (summary.department_number) : '0',\r\n            //       name: '涉及部门'\r\n            //     }, {\r\n            //       value: (summary) ? (summary.department_number) : '0',\r\n            //       name: '本月新增',\r\n            //       selected: true\r\n            //     }]\r\n            //   }, {\r\n            //     name: '需求总数',\r\n            //     type: 'pie',\r\n            //     radius: ['60%', '67%'],\r\n            //     data: [{\r\n            //       value: (summary) ? (summary.requiement_number) : '0',\r\n            //       name: '需求总数'\r\n            //     }, {\r\n            //       value: (summary) ? (summary.requiement_number_inc) : '0',\r\n            //       name: '本月新增',\r\n            //       selected: true\r\n            //     }]\r\n            //   }]\r\n            // };\r\n            // myChart.setOption(option);\r\n            var option = {\r\n              tooltip : {\r\n                  formatter: \"{a} <br/>{c} {b}\"\r\n              },\r\n              series : [\r\n                  {\r\n                      name: '需求总数',\r\n                      type: 'gauge',\r\n                      center: ['69%', '55%'],    // 默认全局居中\r\n                      z: 3,\r\n                      min: 0,\r\n                      max: ((220-summary.requiement_number)<50)? (Math.ceil(summary.requiement_number/11)*11+55) : 220,\r\n                      splitNumber: 11,\r\n                      radius: '90%',\r\n                      axisLine: {            // 坐标轴线\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              width: 10\r\n                          }\r\n                      },\r\n                      axisTick: {            // 坐标轴小标记\r\n                          length: 15,        // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      splitLine: {           // 分隔线\r\n                          length: 20,         // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      pointer: {\r\n                          width:3\r\n                      },\r\n                      title : {\r\n                        offsetCenter: [0, '-10%'],\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                          fontWeight: '',\r\n                          fontSize: 15,\r\n                          fontStyle: 'italic'\r\n                        }      // x, y，单位px       // x, y，单位px\r\n                      },\r\n                      detail : {\r\n                          textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                              fontWeight: ''\r\n                          }\r\n                      },\r\n                      data:[{\r\n                        value: (summary) ? (summary.requiement_number) : 0,\r\n                        name: '/条（需求总数）'\r\n                    }]\r\n                  },\r\n                  {\r\n                      name: '本月新增',\r\n                      type: 'gauge',\r\n                      center: ['23%', '65%'],    // 默认全局居中\r\n                      radius: '65%',\r\n                      min:0,\r\n                      max:((70-summary.requiement_number_inc)<10)? (Math.ceil(summary.requiement_number_inc/7)*7+14) : 70,\r\n                      endAngle:20,\r\n                      splitNumber:7,\r\n                      axisLine: {            // 坐标轴线\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              width: 8\r\n                          }\r\n                      },\r\n                      axisTick: {            // 坐标轴小标记\r\n                          length:12,        // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      splitLine: {           // 分隔线\r\n                          length:20,         // 属性length控制线长\r\n                          lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                              color: 'auto'\r\n                          }\r\n                      },\r\n                      pointer: {\r\n                          width:3\r\n                      },\r\n                      title: {\r\n                          offsetCenter: [0, '-1%'],\r\n                          textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            fontWeight: '',\r\n                            fontSize: 10,\r\n                            fontStyle: 'italic'\r\n                         }      // x, y，单位px\r\n                      },\r\n                      detail: {\r\n                      },\r\n                      data:[{\r\n                        value:(summary) ? (summary.requiement_number_inc) : 0,\r\n                        name: '/条(本月新增)'\r\n                      }]\r\n                  }\r\n\r\n              ]\r\n            };\r\n            myChart.setOption(option);\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n]);\r\n\r\nDashboard.directive('wiservStatisticChart', [\r\n  function() {\r\n    return {\r\n      restrict: 'AE',\r\n      template: \"<div style='width:100%;height:240px;'></div>\",\r\n      link: function(scope, element, attr) {\r\n        scope.QInventoryStatistic.then(function(result) {\r\n          var DEPARTMENT = result.data.body[0];\r\n          var INVENTORY = result.data.body[1];\r\n          var REQUIREMENT = result.data.body[2];\r\n          var myChart = echarts.init((element.find('div'))[0]);\r\n          var option = {\r\n            tooltip: {\r\n              trigger: 'axis'\r\n            },\r\n            legend: {\r\n              data: ['资源', '需求']\r\n            },\r\n            xAxis: [{\r\n              type: 'category',\r\n              name: '数量',\r\n              data: DEPARTMENT.DEPARTMENT\r\n            }],\r\n            yAxis: [{\r\n              type: 'value',\r\n              name: '单位',\r\n              min: 0,\r\n              max: 30,\r\n              interval: 30,\r\n              axisLabel: {\r\n                formatter: '{value} 个'\r\n              }\r\n            }],\r\n            series: [{\r\n              name: '资源',\r\n              type: 'bar',\r\n              data: INVENTORY.INVENTORY\r\n            }, {\r\n              name: '需求',\r\n              type: 'bar',\r\n              data: REQUIREMENT.REQUIREMENT\r\n            }]\r\n          };\r\n          myChart.setOption(option);\r\n        });\r\n\r\n      }\r\n    };\r\n  }\r\n]);\r\n\r\n/* Component */\r\nDashboard.service('Dashboard.Requirement.Service.Component', ['$uibModal',\r\n  function($uibModal) {\r\n    // prompt Alert\r\n    function popAlert(scope, info) {\r\n      scope.Alerts = [{\r\n        type: info.type,\r\n        message: info.message,\r\n        timeout: 1200\r\n      }];\r\n      scope.CloseAlert = function(index) {\r\n        scope.Alerts.splice(index, 1);\r\n      };\r\n    };\r\n    // prompt Modal for confirm\r\n    function popModalConfirm(scope, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstanceConfirm = $uibModal.open({\r\n        animation: true,\r\n        backdrop: 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        scope: scope,\r\n        size: 'lg'\r\n      });\r\n      scope.Modal.confirm = function(isValid) {\r\n        console.log(scope);\r\n        if(!scope.confirmParent.outputResource[0] && scope.Modal.ReqResponse.status == 1) {\r\n          scope.errorMsg = '请选择信息资源！';\r\n          isValid = false;\r\n        }\r\n        if (isValid) {\r\n          modalInstanceConfirm.close(scope.Modal);\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      };\r\n      scope.Modal.cancel = function() {\r\n        modalInstanceConfirm.dismiss();\r\n      };\r\n      return modalInstanceConfirm;\r\n    };\r\n    // prompt Modal\r\n    function popModal(scope, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        backdrop: 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        scope: scope,\r\n        size: 'lg'\r\n      });\r\n      scope.Modal.confirm = function(isValid) {\r\n        console.log(scope);\r\n        scope.submitted = true;\r\n        if(scope.reqParent.outputDeptList.length == 0) {\r\n          scope.error = true;\r\n        }\r\n        else if(scope.shareFreqSelection.length == 0) {\r\n        }\r\n        else {\r\n          modalInstance.close(scope.Modal);\r\n        }\r\n\r\n      };\r\n      scope.Modal.cancel = function() {\r\n        modalInstance.dismiss();\r\n      };\r\n      return modalInstance;\r\n    };\r\n\r\n    return {\r\n      popAlert: popAlert,\r\n      popModal: popModal,\r\n      popModalConfirm: popModalConfirm\r\n    }\r\n  }\r\n])\r\n","'use strict';\r\nvar Login = angular.module('Login', ['ui.router', 'ngCookies']);\r\n\r\n/** Main Controller */\r\nLogin.controller('Login.Controller.Main', ['$rootScope', '$cookies', '$scope', '$state', 'Login.Service.Http',\r\n  function($rootScope, $cookies, $scope, $state, Http) {\r\n    // Decide login or session delay\r\n    if(sessionStorage.token){\r\n      sessionStorage.removeItem('token');\r\n    }\r\n    if(sessionStorage.message){\r\n      $scope.alerts = [\r\n        {type: 'danger', msg: sessionStorage.message}\r\n      ];\r\n      $scope.closeAlert = function(index) {\r\n        $scope.alerts.splice(index, 1);\r\n      };\r\n      sessionStorage.removeItem('message');\r\n    }\r\n    // Login validation\r\n    $scope.Login = {};\r\n    $scope.Login.submit = function(valid) {\r\n      $scope.loginSubmitted = false;\r\n      if (valid) {\r\n        var username = $scope.Login.username; \r\n        var password = hex_md5($scope.Login.password);\r\n        Http.login({\r\n          username: username,\r\n          password: password\r\n        }).then(function(result) {\r\n          var loginUser = result.data.body[0];\r\n          $rootScope.User = loginUser;\r\n          $cookies.put('User', JSON.stringify(loginUser));\r\n          console.log(JSON.stringify(loginUser));\r\n          var sessionToken = result.data.head.token;\r\n          if(sessionToken){\r\n            sessionStorage.token = sessionToken;\r\n          }\r\n          if (200 == result.data.head.status) {\r\n            $state.go(\"main.dashboard\");\r\n          } else {\r\n            $scope.loginError = true;\r\n          }\r\n        });\r\n      } else {\r\n        $scope.loginSubmitted = true;\r\n      }\r\n    }\r\n  }\r\n]);\r\n\r\n/* HTTP Factory */\r\nLogin.factory('Login.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n    function login(data) {\r\n      return $http.post(\r\n        path + '/login', {\r\n          data: data\r\n        }\r\n      )\r\n    };\r\n    return {\r\n      login: login\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar Main = angular.module('Main', ['ui.router', 'ngCookies']);\r\n\r\n/** Main Controller */\r\nMain.controller('Main.Controller.Main', ['$scope', '$cookies', 'Main.Service.Http', '$state',\r\n  function($scope, $cookies, Http, $state) {\r\n    $scope.User = JSON.parse($cookies.get('User'));\r\n    $scope.logout = function() {\r\n      console.log($scope.User);\r\n      if(sessionStorage.token){\r\n        sessionStorage.removeItem('token');\r\n        Http.logout().then(function(result) {\r\n          $state.go(\"welcome\");\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n]);\r\n\r\n/* HTTP Factory */\r\nMain.factory('Main.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n    function logout() {\r\n      return $http.get(\r\n        path + '/loginOut'\r\n      )\r\n    };\r\n    return {\r\n      logout: logout\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar Welcome = angular.module('Welcome', ['ui.router']);\r\n/** Main Controller */\r\nWelcome.controller('Welcome.Controller.Main', ['$scope', '$state', 'Welcome.Service.Http', '$stateParams', '$document',\r\n  function($scope, $state, Http, StateParams, $document) {\r\n    window.scrollTo(0,0);\r\n    // Menu configration\r\n    $scope.treeOptions = {\r\n      nodeChildren: \"nodes\",\r\n      dirSelectable: false,\r\n      injectClasses: {\r\n        ul: \"a1\",\r\n        li: \"a2\",\r\n        liSelected: \"a7\",\r\n        iExpanded: \"a2\",\r\n        iCollapsed: \"a4\",\r\n        iLeaf: \"a5\",\r\n        label: \"a6\",\r\n        labelSelected: \"a8\"\r\n      }\r\n    }\r\n    function treeChangeTypeDefault(){\r\n      $scope.flag = (StateParams.type) ? (StateParams.type) : 1;\r\n      $scope.filterName = (StateParams.titleName) ? (StateParams.titleName) : \"机构类型\";\r\n      // if($scope.flag==1){\r\n        Http.menu().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.list = result.data.body;\r\n          }\r\n        });\r\n\r\n      // }else if ($scope.flag==2) {\r\n        // OcupationMenu Generator\r\n        Http.menuRole().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.OcupationList = result.data.body;\r\n          }\r\n        });\r\n\r\n      // }else if ($scope.flag==3) {\r\n        // AreaMenu Generator\r\n        Http.menuArea().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.areaList = result.data.body;\r\n          }\r\n        });\r\n\r\n      // }else if ($scope.flag==4) {\r\n        // themeMenu Generator\r\n        Http.menuTheme().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.themeList = result.data.body;\r\n          }\r\n        });\r\n      // }\r\n    }\r\n    treeChangeTypeDefault();\r\n    $scope.treeChangeType = function(type) {\r\n      $scope.predicate = \"\";\r\n      if(type==1){\r\n        $scope.flag = 1;\r\n        $scope.filterName = \"机构类型\";\r\n        Http.menu().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.list = result.data.body;\r\n          }\r\n        });\r\n\r\n      }else if (type==2) {\r\n        // $document.find('.sidebar2').addClass('sidebar2-collapse');\r\n        $scope.filterName = \"机构职能\";\r\n        $scope.flag = 2;\r\n        // OcupationMenu Generator\r\n        Http.menuRole().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.OcupationList = result.data.body;\r\n          }\r\n        });\r\n\r\n      }else if (type==3) {\r\n        $scope.filterName = \"区域\";\r\n        $scope.flag = 3;\r\n        // AreaMenu Generator\r\n        Http.menuArea().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.areaList = result.data.body;\r\n          }\r\n        });\r\n\r\n      }else if (type==4) {\r\n        $scope.filterName = \"主题\";\r\n        $scope.flag = 4;\r\n        // themeMenu Generator\r\n        Http.menuTheme().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.themeList = result.data.body;\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n    $scope.comparator = false;\r\n    $scope.showSelected = function(sel) {\r\n         $scope.selectedNode = sel;\r\n    };\r\n\r\n\r\n   <!--listPage-->\r\n\r\n    // Get the parameters form ui-router\r\n    var currentDepID = {resource_dep_id:StateParams.resource_dep_id};\r\n    var currentDepName = {dep_name:StateParams.dep_name};\r\n    // Selected department name\r\n    $scope.currentDep = currentDepName.dep_name;\r\n    // Params for pagin\r\n    var initPaging = {limit:10, skip: 0};\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.itemsPerPage = 10;\r\n    $scope.Paging.pageChanged = function() {\r\n      var httpParams = {};\r\n      _.assign(httpParams, currentDepID, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\r\n      getDataQuotaList(httpParams);\r\n    };\r\n    // Get data quota list\r\n    function getDataQuotaList(_httpParams){\r\n      Http.getDataQuota(_httpParams).then(function(result) {\r\n        $scope.DataQuotas = result.data.body[0].results;\r\n        $scope.DataQuotasTotal = result.data.body[0].count[0].resource_count;\r\n        $scope.Paging.totalItems = result.data.body[0].count[0].resource_count;\r\n      });\r\n    };\r\n    // Init data quota talbe\r\n    function initDataQuotaList(){\r\n        /* Init selected status for filter */\r\n        $scope.resourceFormatActiveAll = $scope.ShareLevelActiveAll = $scope.openToSocietyActiveAll = $scope.ShareFrequencyActiveAll = $scope.DataLevelActiveAll = $scope.isScretActiveAll= 'active';\r\n        /* Init ajax parameters*/\r\n        var httpParams = {};\r\n        (currentDepID==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\r\n        getDataQuotaList(httpParams);\r\n    };\r\n    initDataQuotaList();\r\n\r\n   $scope.WelcomeDep = function (resource_dep_id,dep_name){\r\n     if(resource_dep_id){\r\n       $scope.TargetDataQuotaName =\"\";\r\n       var httpParams = {};\r\n       currentDepID = {resource_dep_id:resource_dep_id};\r\n       currentDepName = {dep_name:dep_name};\r\n       $scope.currentDep = currentDepName.dep_name;\r\n       /* Init selected status for filter */\r\n       $scope.resourceFormatActiveAll = $scope.ShareLevelActiveAll = $scope.openToSocietyActiveAll = $scope.ShareFrequencyActiveAll = $scope.DataLevelActiveAll = $scope.isScretActiveAll= 'active';\r\n       /* Init ajax parameters*/\r\n       (currentDepID==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\r\n       getDataQuotaList(httpParams);\r\n     }\r\n   }\r\n\r\n\r\n    // Fetch data quota list by filter\r\n    function getDataQuotaListByFilter(params){\r\n      var httpParams = {};\r\n      (currentDepID.dep_name==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\r\n      _.assign(httpParams, params);\r\n      getDataQuotaList(httpParams);\r\n    };\r\n    // Search for Data Quota Name\r\n    $scope.Retrieval = function(){\r\n      var httpParams = {};\r\n      var searchTarget = {resource_name: $scope.TargetDataQuotaName};\r\n      (currentDepID==='') ? (_.assign(httpParams, initPaging, searchTarget)) : (_.assign(httpParams, currentDepID, initPaging, searchTarget));\r\n      getDataQuotaList(httpParams);\r\n    };\r\n    // Filter generator\r\n    var SHARE_FREQUENCY = 1, //更新周期\r\n        DATA_LEVEL = 2, //分地区数据级别\r\n        SHARE_LEVEL = 3, //共享级别\r\n        RESOURCE_FORMAT = 11, //信息资源格式\r\n        SOCIAL_OPEN_FLAG  = 14, //面向社会开放\r\n        SECRET_FLAG = 5  //是否涉密\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': RESOURCE_FORMAT\r\n    }).then(function(result) {\r\n      $scope.resourceFormats = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SOCIAL_OPEN_FLAG\r\n    }).then(function(result) {\r\n      $scope.openToSocietys = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SECRET_FLAG\r\n    }).then(function(result) {\r\n      $scope.isScrets = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_LEVEL\r\n    }).then(function(result) {\r\n      $scope.ShareLevels = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_FREQUENCY\r\n    }).then(function(result) {\r\n      $scope.ShareFrequencys = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': DATA_LEVEL\r\n    }).then(function(result) {\r\n      $scope.DataLevels = result.data.body;\r\n    });\r\n    // Handle above filter\r\n    var filterParams = {};\r\n\r\n    /*信息资源格式*/\r\n    $scope.resourceFormatFilter = function(id, index){\r\n      $scope.resourceFormatActive = [];\r\n      $scope.resourceFormatActiveAll = '';\r\n      $scope.resourceFormatActive[index] = 'active';\r\n      filterParams.re_format = id;\r\n      if('ALL'===id){\r\n        delete filterParams.re_format;\r\n        $scope.resourceFormatActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n    /* 共享级别 */\r\n    $scope.ShareLevelFilter = function(id, index){\r\n      $scope.ShareLevelActive = [];\r\n      $scope.ShareLevelActiveAll = '';\r\n      $scope.ShareLevelActive[index] = 'active';\r\n      filterParams.share_level = id;\r\n      if('ALL'===id){\r\n        delete filterParams.share_level;\r\n        $scope.ShareLevelActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n\r\n    /*面向社会开放*/\r\n\r\n    $scope.openToSocietyFilter = function(id, index){\r\n      $scope.openToSocietyActive = [];\r\n      $scope.openToSocietyActiveAll = '';\r\n      $scope.openToSocietyActive[index] = 'active';\r\n      //var idx = filterParams.social_open_flag.indexOf(item.id);\r\n      filterParams.social_open_flag = id;\r\n      if('ALL'===id){\r\n        delete filterParams.social_open_flag;\r\n        $scope.openToSocietyActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n    /* 更新周期（共享频率） */\r\n    filterParams.update_period = [];\r\n    $scope.ShareFrequencyActive = [];\r\n    $scope.ShareFrequencyFilter = function(id, index){\r\n      if('ALL'===id){\r\n        filterParams.update_period = [];\r\n        $scope.ShareFrequencyActiveAll = 'active';\r\n        $scope.ShareFrequencyActive = [];\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        $scope.ShareFrequencyActiveAll = '';\r\n        var idx = filterParams.update_period.indexOf(id);\r\n        ($scope.ShareFrequencyActive[index]==='active')?($scope.ShareFrequencyActive[index]=''):($scope.ShareFrequencyActive[index]='active');\r\n        if(idx > -1){\r\n          if(filterParams.update_period.length ===1){\r\n            $scope.ShareFrequencyActiveAll = 'active';\r\n            filterParams.update_period = [];\r\n          }else{\r\n            filterParams.update_period.splice(idx, 1);\r\n          }\r\n        }else{\r\n          filterParams.update_period.push(id);\r\n        }\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n\r\n    /* 分地区数据级别 */\r\n    filterParams.area_level = [];\r\n    $scope.DataLevelActive = [];\r\n    $scope.DataLevelFilter = function(id, index){\r\n      if('ALL'===id){\r\n        filterParams.area_level = [];\r\n        $scope.DataLevelActiveAll = 'active';\r\n        $scope.DataLevelActive=[];\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        var idx = filterParams.area_level.indexOf(id);\r\n        $scope.DataLevelActiveAll = '';\r\n        ($scope.DataLevelActive[index]==='active')?($scope.DataLevelActive[index]=''):($scope.DataLevelActive[index]='active');\r\n        if(idx > -1){\r\n          if(filterParams.area_level.length ===1){\r\n            $scope.DataLevelActiveAll = 'active';\r\n            filterParams.area_level = [];\r\n          }else{\r\n            filterParams.area_level.splice(idx, 1);\r\n          }\r\n        }else{\r\n          filterParams.area_level.push(id);\r\n        }\r\n        getDataQuotaListByFilter(filterParams);\r\n      };\r\n    };\r\n    /*是否涉密*/\r\n    $scope.isScretFilter = function(id, index){\r\n      $scope.isScretActive = [];\r\n      $scope.isScretActiveAll = '';\r\n      $scope.isScretActive[index] = 'active';\r\n      filterParams.issecret = id;\r\n      if('ALL'===id){\r\n        delete filterParams.issecret;\r\n        $scope.isScretActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n\r\n\r\n  }])\r\n\r\n  /* DataQuota Http Factory */\r\n  Welcome.factory('Welcome.Service.Http', ['$http', 'API',\r\n    function($http, API) {\r\n      var path = API.path;\r\n\r\n      function menu(params) {\r\n        return $http.get(\r\n          path + '/menu', { params: params }\r\n        )\r\n      };\r\n      function menuRole(params) {\r\n        return $http.get(\r\n          path + '/menu_role', { params: params }\r\n        )\r\n      };\r\n      function menuArea(params) {\r\n        return $http.get(\r\n          path + '/menu_area', { params: params }\r\n        )\r\n      };\r\n      function menuTheme(params) {\r\n        return $http.get(\r\n          path + '/menu_theme', { params: params }\r\n        )\r\n      };\r\n\r\n      //listPage\r\n      function getSystemDictByCatagory(params) {\r\n        return $http.get(\r\n          path + '/sys_dict', { params: params }\r\n        )\r\n      };\r\n      function getDataQuota(params){\r\n        return $http.get(\r\n          path + '/resource_list', { params: params }\r\n        )\r\n      };\r\n      return {\r\n        menu: menu,\r\n        menuRole: menuRole,\r\n        menuArea: menuArea,\r\n        menuTheme: menuTheme,\r\n\r\n        getSystemDictByCatagory: getSystemDictByCatagory,\r\n        getDataQuota: getDataQuota\r\n      }\r\n    }\r\n  ]);\r\n  Welcome.directive('wiservMainWrapperUnlogin', [\r\n    function() {\r\n      return {\r\n        restrict: 'AE',\r\n        link: function(scope, element, attrs) {\r\n          scope.currentTab = 1;\r\n          element.find('.toggler').on('click', function(ev) {\r\n            console.log(scope.flag);\r\n            if( scope.currentTab == scope.flag) {\r\n              if((!element.hasClass(\"content-collapse\"))){\r\n                element.find('.searchTree').toggleClass(\"searchTree-collapse\");\r\n                element.find('.content').toggleClass(\"content-collapse\");\r\n              }\r\n            }\r\n            else {\r\n              element.find('.searchTree').removeClass(\"searchTree-collapse\").addClass(\"searchTree-collapse\");\r\n              element.find('.content').removeClass(\"content-collapse\");\r\n            }\r\n            scope.currentTab = scope.flag;\r\n          });\r\n        }\r\n      }\r\n    }\r\n  ]);\r\n","'use strict';\r\nvar DataQuotaDetail = angular.module('DataQuotaDetail', ['ui.router']);\r\n\r\n/** Main Controller */\r\nDataQuotaDetail.controller('DataQuotaDetail.Controller.Main', ['$scope', '$state', 'DataQuotaDetail.Service.Http', '$stateParams', '$sce',\r\n  function($scope, $state, Http, $stateParams, $sce) {\r\n    // Data Quota Detail\r\n    Http.getDataQuotaDetailByDepID(\r\n      $stateParams\r\n    ).then(function(result) {\r\n      $scope.DataQuotaDetail = result.data.body[0];\r\n    });\r\n    // Data Quota Example\r\n    Http.getDataQuotaExampleByDepID(\r\n      {resource_id: $stateParams.resource_id}\r\n    ).then(function(result) {\r\n      $scope.DataQuotaExample = result.data.body;\r\n    });\r\n\r\n    // 示例数据\r\n    $scope.DataExamples = Http.getResourceExampleDatas({\r\n      resource_id: $stateParams.resource_id\r\n    });\r\n    <!--informationResource required by deps-->\r\n    $scope.DataquotaRequirementByDepTotals = Http.getDataQuotaRequirementByDepTotals(\r\n      {resource_id: $stateParams.resource_id}\r\n    );\r\n\r\n  }\r\n]);\r\n\r\n\r\n/* HTTP Factory */\r\nDataQuotaDetail.factory('DataQuotaDetail.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n    function getResourceExampleDatas(params) {\r\n      return $http.get(\r\n        path + '/info_resource_examples', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n    function getDataQuotaDetailByDepID(params){\r\n      return $http.get(\r\n        path + '/info_resource_detail', { params: params }\r\n      )\r\n    };\r\n    function getDataQuotaExampleByDepID(params){\r\n      return $http.get(\r\n        path + '/info_item_detail', { params: params }\r\n      )\r\n    };\r\n    function getDataQuotaRequirementByDepTotals(params){\r\n      return $http.get(\r\n        path + '/info_item_requirementDeps', { params: params }\r\n      )\r\n    };\r\n    return {\r\n      getResourceExampleDatas: getResourceExampleDatas,\r\n      getDataQuotaDetailByDepID: getDataQuotaDetailByDepID,\r\n      getDataQuotaExampleByDepID: getDataQuotaExampleByDepID,\r\n      getDataQuotaRequirementByDepTotals: getDataQuotaRequirementByDepTotals,\r\n    }\r\n  }\r\n]);\r\n\r\nDataQuotaDetail.directive('wiservExampleDataShow', [\r\n  function() {\r\n    return {\r\n      restrict: 'AE',\r\n      template: \"<div style='width:500px;height:400px;position:relative;top: -9px;'></div>\",\r\n      link: function(scope, element, attr) {\r\n        console.log(scope);\r\n        scope.DataExamples.then(function(result) {\r\n          console.log(result);\r\n          element.html(result.data.body[0].file_content);\r\n        })\r\n      }\r\n    }\r\n  }\r\n]);\r\nDataQuotaDetail.directive('requirementDepatmentRelationship',[\r\n  function(){\r\n    return {\r\n      restrict: 'AE',\r\n      template: \"<div style='width:900px;height:400px;position:relative;top:20px'></div>\",\r\n      link: function(scope, element, attr){\r\n        scope.DataquotaRequirementByDepTotals.then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            var dataquotaRequirement = result.data.body[0];\r\n            var deptotal = _.size(dataquotaRequirement.depNames) ;\r\n            var resourceName = dataquotaRequirement.resourceName;\r\n            var depNames = dataquotaRequirement.depNames;\r\n            var data1 = [{name: resourceName, x: 500, y:100 }];\r\n            var links1 = [{source: resourceName,target: \"\" }];\r\n            if(deptotal){\r\n               _(depNames).forEach(function (value,key){\r\n                 console.log(key+\":\"+value);\r\n                 var dep_obj = {};\r\n                 obj.name = value;\r\n                 obj.x = 600;\r\n                 obj.y = 100 + (key+1)*20;\r\n                 data1.push(obj);\r\n                 var target_obj = {};\r\n                 target_obj.target = value ;\r\n                 target_obj.source = resourceName;\r\n                 links1.push(target_obj);\r\n               });\r\n               console.log(data1);\r\n               console.log(links1);\r\n             }\r\n             var myChart = echarts.init((element.find('div'))[0]);\r\n             var option = {\r\n               title: {\r\n                 text: \"对应需求部门数:\"+deptotal+\"个\"\r\n               },\r\n               tooltip: {},\r\n               animationDurationUpdate: 1500,\r\n               animationEasingUpdate: 'quinticInOut',\r\n               series : [\r\n                 {\r\n                   type: 'graph',\r\n                   layout: 'none',\r\n                   symbolSize: 50,\r\n                   roam: true,\r\n                   label: {\r\n                     normal: {\r\n                       show: true\r\n                     }\r\n                   },\r\n                   edgeSymbol: ['circle', 'arrow'],\r\n                   edgeSymbolSize: [4, 10],\r\n                   edgeLabel: {\r\n                     normal: {\r\n                       textStyle: {\r\n                         fontSize: 20\r\n                       }\r\n                     }\r\n                   },\r\n                   data: data1,\r\n                   links: links1,\r\n                   lineStyle: {\r\n                     normal: {\r\n                       opacity: 0.9,\r\n                       width: 2,\r\n                       curveness: 0.3\r\n                     }\r\n                   }\r\n                 }\r\n               ]\r\n             };\r\n             myChart.setOption(option);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar DataQuotaList = angular.module('DataQuotaList', ['ui.router']);\r\n\r\n/** Main Controller */\r\nDataQuotaList.controller('DataQuotaList.Controller.Main', ['$scope', '$state', 'DataQuotaList.Service.Http', '$stateParams',\r\n  function($scope, $state, Http, StateParams) {\r\n    // Get the parameters form ui-router\r\n    var currentDepID = {resource_dep_id:StateParams.resource_dep_id};\r\n    var currentDepName = {dep_name:StateParams.dep_name};\r\n    // Selected department name\r\n    $scope.currentDep = currentDepName.dep_name;\r\n    // Params for pagin\r\n    var initPaging = {limit:10, skip: 0};\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.itemsPerPage = 10;\r\n    $scope.Paging.pageChanged = function() {\r\n      var httpParams = {};\r\n      _.assign(httpParams, currentDepID, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\r\n      getDataQuotaList(httpParams);\r\n    };\r\n    // Get data quota list\r\n    function getDataQuotaList(_httpParams){\r\n      Http.getDataQuota(_httpParams).then(function(result) {\r\n        $scope.DataQuotas = result.data.body[0].results;\r\n        $scope.DataQuotasTotal = result.data.body[0].count[0].resource_count;\r\n        $scope.Paging.totalItems = result.data.body[0].count[0].resource_count;\r\n      });\r\n    };\r\n    // Init data quota talbe\r\n    (function initDataQuotaList(){\r\n        /* Init selected status for filter */\r\n        $scope.resourceFormatActiveAll = $scope.ShareLevelActiveAll = $scope.openToSocietyActiveAll = $scope.ShareFrequencyActiveAll = $scope.DataLevelActiveAll = $scope.isScretActiveAll= 'active';\r\n        /* Init ajax parameters*/\r\n        var httpParams = {};\r\n        (currentDepID==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\r\n        getDataQuotaList(httpParams);\r\n    })();\r\n    // Fetch data quota list by filter\r\n    function getDataQuotaListByFilter(params){\r\n      var httpParams = {};\r\n      (currentDepID.dep_name==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\r\n      _.assign(httpParams, params);\r\n      getDataQuotaList(httpParams);\r\n    };\r\n    // Search for Data Quota Name\r\n    $scope.Retrieval = function(){\r\n      var httpParams = {};\r\n      var searchTarget = {resource_name: $scope.TargetDataQuotaName};\r\n      (currentDepID==='') ? (_.assign(httpParams, initPaging, searchTarget)) : (_.assign(httpParams, currentDepID, initPaging, searchTarget));\r\n      getDataQuotaList(httpParams);\r\n    };\r\n    // Data quota apply info\r\n    $scope.DataQuotaApplyInfo = function(data_quota_id) {\r\n      Http.getDataQuotaApplyInfo({info_resource_id: data_quota_id}).then(function() {\r\n        // alert('申请中，等待审核');\r\n        var httpParams = {};\r\n        _.assign(httpParams, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\r\n        getDataQuotaList(httpParams);\r\n      });\r\n    };\r\n    // Filter generator\r\n    var SHARE_FREQUENCY = 1, //更新周期\r\n        DATA_LEVEL = 2, //分地区数据级别\r\n        SHARE_LEVEL = 3, //共享级别\r\n        RESOURCE_FORMAT = 11, //信息资源格式\r\n        SOCIAL_OPEN_FLAG  = 14, //面向社会开放\r\n        SECRET_FLAG = 5  //是否涉密\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': RESOURCE_FORMAT\r\n    }).then(function(result) {\r\n      $scope.resourceFormats = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SOCIAL_OPEN_FLAG\r\n    }).then(function(result) {\r\n      $scope.openToSocietys = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SECRET_FLAG\r\n    }).then(function(result) {\r\n      $scope.isScrets = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_LEVEL\r\n    }).then(function(result) {\r\n      $scope.ShareLevels = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_FREQUENCY\r\n    }).then(function(result) {\r\n      $scope.ShareFrequencys = result.data.body;\r\n    });\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': DATA_LEVEL\r\n    }).then(function(result) {\r\n      $scope.DataLevels = result.data.body;\r\n    });\r\n    // Handle above filter\r\n    var filterParams = {};\r\n\r\n    /*信息资源格式*/\r\n    $scope.resourceFormatFilter = function(id, index){\r\n      $scope.resourceFormatActive = [];\r\n      $scope.resourceFormatActiveAll = '';\r\n      $scope.resourceFormatActive[index] = 'active';\r\n      filterParams.re_format = id;\r\n      if('ALL'===id){\r\n        delete filterParams.re_format;\r\n        $scope.resourceFormatActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n    /* 共享级别 */\r\n    $scope.ShareLevelFilter = function(id, index){\r\n      $scope.ShareLevelActive = [];\r\n      $scope.ShareLevelActiveAll = '';\r\n      $scope.ShareLevelActive[index] = 'active';\r\n      filterParams.share_level = id;\r\n      if('ALL'===id){\r\n        delete filterParams.share_level;\r\n        $scope.ShareLevelActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n\r\n    /*面向社会开放*/\r\n\r\n    $scope.openToSocietyFilter = function(id, index){\r\n      $scope.openToSocietyActive = [];\r\n      $scope.openToSocietyActiveAll = '';\r\n      $scope.openToSocietyActive[index] = 'active';\r\n      //var idx = filterParams.social_open_flag.indexOf(item.id);\r\n      filterParams.social_open_flag = id;\r\n      if('ALL'===id){\r\n        delete filterParams.social_open_flag;\r\n        $scope.openToSocietyActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n    /* 更新周期（共享频率） */\r\n    filterParams.update_period = [];\r\n    $scope.ShareFrequencyActive = [];\r\n    $scope.ShareFrequencyFilter = function(id, index){\r\n      if('ALL'===id){\r\n        filterParams.update_period = [];\r\n        $scope.ShareFrequencyActiveAll = 'active';\r\n        $scope.ShareFrequencyActive = [];\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        $scope.ShareFrequencyActiveAll = '';\r\n        var idx = filterParams.update_period.indexOf(id);\r\n        ($scope.ShareFrequencyActive[index]==='active')?($scope.ShareFrequencyActive[index]=''):($scope.ShareFrequencyActive[index]='active');\r\n        if(idx > -1){\r\n          if(filterParams.update_period.length ===1){\r\n            $scope.ShareFrequencyActiveAll = 'active';\r\n            filterParams.update_period = [];\r\n          }else{\r\n            filterParams.update_period.splice(idx, 1);\r\n          }\r\n        }else{\r\n          filterParams.update_period.push(id);\r\n        }\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n\r\n    /* 分地区数据级别 */\r\n    filterParams.area_level = [];\r\n    $scope.DataLevelActive = [];\r\n    $scope.DataLevelFilter = function(id, index){\r\n      if('ALL'===id){\r\n        filterParams.area_level = [];\r\n        $scope.DataLevelActiveAll = 'active';\r\n        $scope.DataLevelActive=[];\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        var idx = filterParams.area_level.indexOf(id);\r\n        $scope.DataLevelActiveAll = '';\r\n        ($scope.DataLevelActive[index]==='active')?($scope.DataLevelActive[index]=''):($scope.DataLevelActive[index]='active');\r\n        if(idx > -1){\r\n          if(filterParams.area_level.length ===1){\r\n            $scope.DataLevelActiveAll = 'active';\r\n            filterParams.area_level = [];\r\n          }else{\r\n            filterParams.area_level.splice(idx, 1);\r\n          }\r\n        }else{\r\n          filterParams.area_level.push(id);\r\n        }\r\n        getDataQuotaListByFilter(filterParams);\r\n      };\r\n    };\r\n    /*是否涉密*/\r\n    $scope.isScretFilter = function(id, index){\r\n      $scope.isScretActive = [];\r\n      $scope.isScretActiveAll = '';\r\n      $scope.isScretActive[index] = 'active';\r\n      filterParams.issecret = id;\r\n      if('ALL'===id){\r\n        delete filterParams.issecret;\r\n        $scope.isScretActiveAll = 'active';\r\n        getDataQuotaListByFilter(filterParams);\r\n      }else{\r\n        getDataQuotaListByFilter(filterParams);\r\n      }\r\n    };\r\n\r\n  }\r\n]);\r\n\r\n\r\n/* HTTP Factory */\r\nDataQuotaList.factory('DataQuotaList.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n    function getSystemDictByCatagory(params) {\r\n      return $http.get(\r\n        path + '/sys_dict', { params: params }\r\n      )\r\n    };\r\n    function getDataQuota(params){\r\n      return $http.get(\r\n        path + '/resource/sys_dict', { params: params }\r\n      )\r\n    };\r\n    function getDataQuotaApplyInfo(data){\r\n      return $http.post(\r\n        path + '/info_resource_apply_info', { data: data }\r\n      )\r\n    };\r\n    return {\r\n      getSystemDictByCatagory: getSystemDictByCatagory,\r\n      getDataQuotaApplyInfo: getDataQuotaApplyInfo,\r\n      getDataQuota: getDataQuota\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar DataQuota = angular.module('DataQuota', ['ui.router']);\r\n\r\n/** Main Controller */\r\nDataQuota.controller('DataQuota.Controller.Main', ['$scope', '$state', 'DataQuota.Service.Http', '$stateParams',\r\n  function($scope, $state, Http, StateParams) {\r\n    window.scrollTo(0,0);\r\n    // Menu configration\r\n    $scope.treeOptions = {\r\n      nodeChildren: \"nodes\",\r\n      dirSelectable: false,\r\n      injectClasses: {\r\n        ul: \"a1\",\r\n        li: \"a2\",\r\n        liSelected: \"a7\",\r\n        iExpanded: \"a2\",\r\n        iCollapsed: \"a4\",\r\n        iLeaf: \"a5\",\r\n        label: \"a6\",\r\n        labelSelected: \"a8\"\r\n      }\r\n    }\r\n    function showType(){\r\n      $scope.predicate=\"\";\r\n      $scope.flag = (StateParams.type) ? (StateParams.type) : 1;\r\n      $scope.filterName = (StateParams.titleName) ? (StateParams.titleName) : \"机构类型\";\r\n        Http.menu().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.list = result.data.body;\r\n          }\r\n        });\r\n        Http.menuRole().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.OcupationList = result.data.body;\r\n          }\r\n        });\r\n\r\n        Http.menuArea().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.areaList = result.data.body;\r\n          }\r\n        });\r\n        Http.menuTheme().then(function(result) {\r\n          if (200 === result.data.head.status) {\r\n            $scope.themeList = result.data.body;\r\n          }\r\n        });\r\n    }\r\n    //init\r\n    showType();\r\n    $scope.typeListOpen = function () {\r\n      $scope.predicate=\"\";\r\n      $scope.flag = 1;\r\n      $scope.filterName = \"机构类型\";\r\n      Http.menu().then(function(result) {\r\n        if (200 === result.data.head.status) {\r\n          $scope.list = result.data.body;\r\n        }\r\n      });\r\n\t\t};\r\n\r\n    $scope.ocupationListOpen = function () {\r\n      $scope.predicate=\"\";\r\n      $scope.filterName = \"机构职能\";\r\n      $scope.flag = 2;\r\n      // OcupationMenu Generator\r\n      Http.menuRole().then(function(result) {\r\n        if (200 === result.data.head.status) {\r\n          $scope.OcupationList = result.data.body;\r\n        }\r\n      });\r\n    };\r\n\r\n    $scope.areaListOpen = function () {\r\n      $scope.predicate=\"\";\r\n      $scope.filterName = \"区域\";\r\n      $scope.flag = 3;\r\n      // AreaMenu Generator\r\n      Http.menuArea().then(function(result) {\r\n        if (200 === result.data.head.status) {\r\n          $scope.areaList = result.data.body;\r\n        }\r\n      });\r\n    };\r\n\r\n    $scope.themeListOpen = function () {\r\n      $scope.predicate=\"\";\r\n      $scope.filterName = \"主题\";\r\n      $scope.flag = 4;\r\n      // themeMenu Generator\r\n      Http.menuTheme().then(function(result) {\r\n        if (200 === result.data.head.status) {\r\n          $scope.themeList = result.data.body;\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n\r\n    $scope.comparator = false;\r\n    $scope.showSelected = function(sel) {\r\n         $scope.selectedNode = sel;\r\n    };\r\n\r\n\r\n  }\r\n]);\r\n\r\n/* DataQuota Http Factory */\r\nDataQuota.factory('DataQuota.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n\r\n    function menu(params) {\r\n      return $http.get(\r\n        path + '/menu', { params: params }\r\n      )\r\n    };\r\n    function menuRole(params) {\r\n      return $http.get(\r\n        path + '/menu_role', { params: params }\r\n      )\r\n    };\r\n    function menuArea(params) {\r\n      return $http.get(\r\n        path + '/menu_area', { params: params }\r\n      )\r\n    };\r\n    function menuTheme(params) {\r\n      return $http.get(\r\n        path + '/menu_theme', { params: params }\r\n      )\r\n    };\r\n    return {\r\n      menu: menu,\r\n      menuRole: menuRole,\r\n      menuArea: menuArea,\r\n      menuTheme: menuTheme\r\n    }\r\n  }\r\n]);\r\nDataQuota.directive('wiservMainWrapper', [\r\n  function() {\r\n    return {\r\n      restrict: 'AE',\r\n      link: function(scope, element, attrs) {\r\n        scope.currentTab = 1;\r\n        element.find('.toggler').on('click', function(ev) {\r\n          console.log(scope.flag);\r\n          if( scope.currentTab == scope.flag) {\r\n            if((!element.hasClass(\"content-collapse\"))){\r\n              element.find('.searchTree').toggleClass(\"searchTree-collapse\");\r\n              element.find('.content').toggleClass(\"content-collapse\");\r\n            }\r\n          }\r\n          else {\r\n            element.find('.searchTree').removeClass(\"searchTree-collapse\").addClass(\"searchTree-collapse\");\r\n            element.find('.content').removeClass(\"content-collapse\");\r\n          }\r\n          scope.currentTab = scope.flag;\r\n        });\r\n      }\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar Audit = angular.module('Department.Audit', ['ui.router']);\r\n\r\n/** Main Controller */\r\nAudit.controller('Department.Audit.Controller.Main', ['$scope', '$q', 'Department.Audit.Service.Http',\r\n  function($scope, $q, Http) {\r\n    $scope.InfoResource = {};\r\n\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n\r\n    var _httpParams = {};\r\n    _httpParams.limit = 10;\r\n    _httpParams.skip = 0;\r\n\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\r\n      getAuditList(_httpParams);\r\n    }\r\n\r\n    // init\r\n    getAuditList();\r\n\r\n    function getAuditList() {\r\n      $scope.auditPromise = Http.getAuditList(_httpParams).then(function(result) {\r\n        $scope.auditList = result.data.body[0].results;\r\n        $scope.resourceCount = result.data.body[0].count[0].resource_count;\r\n        $scope.Paging.totalItems = result.data.body[0].count[0].resource_count;\r\n      });\r\n    }\r\n\r\n    $scope.searchInfoResourceByName = function() {\r\n      _httpParams.resource_name = $scope.InfoResource.resource_name_filter;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getAuditList();\r\n    }\r\n\r\n    // 根据审核状态过滤\r\n    $scope.filterByAuditStatus = function(status) {\r\n      _httpParams.auditstatus = status;\r\n      getAuditList();\r\n    }\r\n  }\r\n])\r\n\r\n\r\nAudit.controller('Department.Audit.Controller.info', ['$scope', '$state', '$q', 'Department.Audit.Service.Http', '$stateParams',\r\n  function( $scope, $state, $q, Http, $stateParams) {\r\n    $scope.TabItemShow = true;\r\n    $scope.TabRequireShow = true;\r\n    $scope.AuditInfo = {};\r\n    $scope.AuditInfo.audit_opinion = '';\r\n\r\n    // 根据id查询信息资源详情\r\n    Http.getDepartInfoResList({\r\n      resource_id : $stateParams.RESOURCEID\r\n    }).then(function(ResourceRes) {\r\n      $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\r\n      $scope.InfoResourceDetail.apply_dep_name = $stateParams.APPLYDEP;\r\n      $scope.InfoResourceDetail.apply_time = $stateParams.APPLYTIME;\r\n    })\r\n\r\n\r\n    $scope.InfoItemShow = false;\r\n    Http.getInfoItemList({\r\n      resource_id: $stateParams.RESOURCEID\r\n    }).then(function(result) {\r\n      if (result.data.body.length == 0) {\r\n        $scope.InfoItemShow = false;\r\n      } else {\r\n        $scope.InfoItemShow = true;\r\n        $scope.InfoItems = result.data.body;\r\n      }\r\n    })\r\n\r\n\r\n    $scope.submitAudit = function() {\r\n      console.log($scope.AuditInfo.audit_status);\r\n      if(!$scope.AuditInfo.audit_status) {\r\n        $scope.auditError = true;\r\n        return;\r\n      }\r\n      $scope.AuditInfo.audit_id = $stateParams.AUDITID;\r\n      Http.updateAuditDetail($scope.AuditInfo).then(function(result) {\r\n        if (200 == result.data.head.status) {\r\n          alert('审核成功');\r\n          $state.go(\"main.department.audit\", {}, {\r\n            reload: true\r\n          });\r\n        } else {\r\n          alert('审核失败');\r\n        }\r\n      });\r\n    }\r\n  }\r\n])\r\n\r\nAudit.controller('Department.Audit.Controller.detail', ['$scope', '$state', '$q', 'Department.Audit.Service.Http', '$stateParams',\r\n  function( $scope, $state, $q, Http, $stateParams) {\r\n    $scope.TabItemShow = true;\r\n    $scope.TabRequireShow = true;\r\n    $scope.AuditInfo = {};\r\n    $scope.AuditInfo.audit_opinion = '';\r\n\r\n    // 根据id查询信息资源详情\r\n    Http.getDepartInfoResList({\r\n      resource_id : $stateParams.RESOURCEID\r\n    }).then(function(ResourceRes) {\r\n      $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\r\n      $scope.InfoResourceDetail.apply_dep_name = $stateParams.APPLYDEP;\r\n      $scope.InfoResourceDetail.apply_time = $stateParams.APPLYTIME;\r\n      $scope.InfoResourceDetail.audit_status = $stateParams.AUDITSTATUS;\r\n      $scope.InfoResourceDetail.audit_opinion = $stateParams.OPINION;\r\n    })\r\n\r\n\r\n    $scope.InfoItemShow = false;\r\n    Http.getInfoItemList({\r\n      resource_id: $stateParams.RESOURCEID\r\n    }).then(function(result) {\r\n      if (result.data.body.length == 0) {\r\n        $scope.InfoItemShow = false;\r\n      } else {\r\n        $scope.InfoItemShow = true;\r\n        $scope.InfoItems = result.data.body;\r\n      }\r\n    })\r\n  }\r\n])\r\n\r\n/* HTTP */\r\nAudit.factory('Department.Audit.Service.Http', ['$http', '$q', 'API',\r\n  function($http, $q, API) {\r\n    var path = API.path;\r\n\r\n    function getAuditList(params) {\r\n      return $http.get(\r\n        path + '/openinfo_resourcelist', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getInfoResourceDetail(params) {\r\n      return $http.get(\r\n        path + '/data_quota_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function updateAuditDetail(data) {\r\n      return $http.put(\r\n        path + '/openinfo_resourceok', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    function getQuotaRequirement(params) {\r\n      return $http.get(\r\n        path + '/requiement_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    function getInfoItemList(params) {\r\n      return $http.get(\r\n        path + '/item_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    function getDepartInfoResList(params) {\r\n      return $http.get(\r\n        path + '/info_resource_list', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    return {\r\n      getAuditList: getAuditList,\r\n      getInfoResourceDetail: getInfoResourceDetail,\r\n      updateAuditDetail: updateAuditDetail,\r\n      getQuotaRequirement: getQuotaRequirement,\r\n      getInfoItemList: getInfoItemList,\r\n      getDepartInfoResList: getDepartInfoResList\r\n    }\r\n  }\r\n]);\r\n","/** Inventory Controller */\r\n'use strict';\r\nvar DInventoryDetail = angular.module('Department.InventoryDetail', ['ui.router', 'ngCookies', 'cgBusy']);\r\n\r\nDInventoryDetail.controller('Department.InventoryDetail.Controller', ['$scope', '$q', 'Department.InventoryDetail.Service.Http', '$stateParams', '$state', '$sce', 'API',\r\n  function($scope, $q, Http, $stateParams, $state, $sce, API) {\r\n    var path = API.path;\r\n    console.log($stateParams.item);\r\n    $scope.InfoItemShow = false;\r\n    Http.getDepartInfoResList({\r\n      resource_id: $stateParams.item\r\n    }).then(function(ResourceRes) {\r\n      $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\r\n      Http.getInfoItemList({\r\n        resource_id: $scope.InfoResourceDetail.id\r\n      }).then(function(result) {\r\n        if (result.data.body.length == 0) {\r\n          $scope.InfoItemShow = false;\r\n        } else {\r\n          $scope.InfoItemShow = true;\r\n          $scope.InfoItems = result.data.body;\r\n\r\n          _($scope.InfoItems).forEach(function(item) {\r\n            var shareFreqDictName = [];\r\n            _(item.config).forEach(function(config) {\r\n              shareFreqDictName.push(config.dict_name);\r\n            })\r\n            item.update_period_name = shareFreqDictName.toString();\r\n          })\r\n        }\r\n      })\r\n    })\r\n\r\n    // Data Quota Example\r\n    $scope.DataExamples = Http.getResourceExampleDatas({\r\n      resource_id: $stateParams.item\r\n    });\r\n\r\n\r\n    // // 获取需求拓扑图\r\n    $scope.ResourceReqByDepTotals = Http.getResourceRequirementByDepTotals({\r\n      resource_id: $stateParams.item\r\n    });\r\n\r\n  }\r\n])\r\n\r\nDInventoryDetail.factory('Department.InventoryDetail.Service.Http', ['$http', '$q', 'API',\r\n  function($http, $q, API) {\r\n    var path = API.path;\r\n\r\n    function getResourceExampleDatas(params) {\r\n      return $http.get(\r\n        path + '/info_resource_examples', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function getResourceRequirementByDepTotals(params) {\r\n      return $http.get(\r\n        path + '/info_item_requirementDeps', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function getDepartInfoResList(params) {\r\n      return $http.get(\r\n        path + '/info_resource_list', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getInfoItemList(params) {\r\n      return $http.get(\r\n        path + '/allitem_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    return {\r\n      getResourceExampleDatas: getResourceExampleDatas,\r\n      getResourceRequirementByDepTotals: getResourceRequirementByDepTotals,\r\n      getDepartInfoResList: getDepartInfoResList,\r\n      getInfoItemList: getInfoItemList\r\n    }\r\n  }\r\n])\r\n\r\nDInventoryDetail.directive('wiservExampleData', [\r\n  function() {\r\n    return {\r\n      restrict: 'AE',\r\n      template: \"<div style='width:500px;height:400px;position:relative;top:20px'></div>\",\r\n      link: function(scope, element, attr) {\r\n        console.log(scope);\r\n        scope.DataExamples.then(function(result) {\r\n          console.log(result);\r\n          if(!result.data.body) {\r\n            element.html(result.data.body[0].file_content);\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n]);\r\nDInventoryDetail.directive('wiservReqdepRelationship', [\r\n  function() {\r\n    return {\r\n      restrict: 'AE',\r\n      template: \"<div style='width:900px;height:400px;position:relative;top:20px'></div>\",\r\n      link: function(scope, element, attr) {\r\n        console.log(scope);\r\n        scope.ResourceReqByDepTotals.then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            var dataquotaRequirement = result.data.body[0];\r\n            var deptotal = _.size(dataquotaRequirement.depNames) ;\r\n            var resourceName = dataquotaRequirement.resourceName;\r\n            var depNames = dataquotaRequirement.depNames;\r\n            var data1 = [{name: resourceName, x: 500, y:130 }];\r\n            var links1 = [{source: resourceName,target: \"\" }];\r\n            if(deptotal){\r\n               _(depNames).forEach(function (value,key){\r\n                 console.log(key+\":\"+value);\r\n                 var dep_obj = {};\r\n                 dep_obj.name = value;\r\n                 dep_obj.x = 600;\r\n                 dep_obj.y = 100 + (key+1)*20;\r\n                 data1.push(dep_obj);\r\n\r\n                 var target_obj = {};\r\n                 target_obj.target = value ;\r\n                 target_obj.source = resourceName;\r\n                 links1.push(target_obj);\r\n               });\r\n               console.log(data1);\r\n               console.log(links1);\r\n             }\r\n             var myChart = echarts.init((element.find('div'))[0]);\r\n             var option = {\r\n               title: {\r\n                 text: \"对应的需求部门数:\"+deptotal+\"个\"\r\n               },\r\n               tooltip: {},\r\n               animationDurationUpdate: 1500,\r\n               animationEasingUpdate: 'quinticInOut',\r\n               series : [\r\n                 {\r\n                   type: 'graph',\r\n                   layout: 'none',\r\n                   symbolSize: 50,\r\n                   roam: true,\r\n                   label: {\r\n                     normal: {\r\n                       show: true\r\n                     }\r\n                   },\r\n                   edgeSymbol: ['circle', 'arrow'],\r\n                   edgeSymbolSize: [4, 10],\r\n                   edgeLabel: {\r\n                     normal: {\r\n                       textStyle: {\r\n                         fontSize: 20\r\n                       }\r\n                     }\r\n                   },\r\n                   data: data1,\r\n                   links: links1,\r\n                   lineStyle: {\r\n                     normal: {\r\n                       opacity: 0.9,\r\n                       width: 2,\r\n                       curveness: 0.3\r\n                     }\r\n                   }\r\n                 }\r\n               ]\r\n             };\r\n             myChart.setOption(option);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n]);\r\n","// upload file\r\n'use strict';\r\nvar DInventoryUpload = angular.module('Department.InventoryUpload', ['ui.router', 'ngCookies', 'cgBusy']);\r\n\r\nDInventoryUpload.controller('Department.InventoryUpload.Controller', ['$scope', '$q', 'Department.InventoryUpload.Service.Http', '$stateParams', '$state', '$sce', 'API',\r\n  function($scope, $q, Http, $stateParams, $state, $sce, API) {\r\n    $scope.uploadPromise = null;\r\n\r\n    $scope.uploadFile = function() {\r\n      var file = $scope.myFile;\r\n      console.log('file is ');\r\n      console.dir(file);\r\n      if (!file) {\r\n        alert('您还未选择文件');\r\n        return;\r\n      }\r\n      $scope.uploadPromise = Http.uploadFile(file).then(function(result) {\r\n        if (200 == result.data.head.status) {\r\n          alert('上传成功！');\r\n          $state.go(\"main.department.inventory\", {}, {\r\n            reload: true\r\n          });\r\n        }\r\n        else {\r\n          if('error' == result.data.head.message) {\r\n            alert('上传失败');\r\n          }\r\n          else {\r\n            alert('上传失败，上传文件格式有误！');\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    $scope.downloadUrl = API.path + '/download';\r\n\r\n    $scope.toIndex = function() {\r\n      $state.go(\"main.department.inventory\", {}, {\r\n        reload: true\r\n      });\r\n    }\r\n  }\r\n])\r\n\r\n\r\nDInventoryUpload.controller('Department.InventoryUploadExamples.Controller', ['$scope', '$q', 'Department.InventoryUpload.Service.Http', '$stateParams', '$state', '$sce', 'API',\r\n  function($scope, $q, Http, $stateParams, $state, $sce, API) {\r\n    $scope.uploadPromise = null;\r\n\r\n    $scope.htmlPopover = $sce.trustAsHtml(\"<table class='table table-hover table-striped '>\" +\r\n      \"<thead><tr><th>序号</th><th>城市</th><th>GDP(亿元)</th><th>增长</th>\" +\r\n      \"<th>地方公共财政收入(亿元)</th><th>增长</th><th>城镇登记失业率</th>\" +\r\n      \"<th>农村居民人均纯收入(元)</th><th>增长</th></tr></thead>\" +\r\n      \"<tbody><tr><td>1</td><td>成都</td><td>9000</td><td>8.54%</td><td>8000</td><td>7.51%</td>\" +\r\n      \"<td>1.39</td><td>5678</td><td>3.40%</td></tr>\" +\r\n      \"</tbody></table>\");\r\n\r\n    $scope.uploadFile = function() {\r\n      var file = $scope.myFile;\r\n      console.log('file is ');\r\n      console.dir(file);\r\n      if (!file) {\r\n        alert('您还未选择文件');\r\n        return;\r\n      }\r\n      $scope.uploadPromise = Http.uploadExamplesFile(file,$stateParams.ID).then(function(result) {\r\n        if (200 == result.data.head.status) {\r\n          alert('上传成功！');\r\n          $state.go(\"main.department.inventory\", {}, {\r\n            reload: true\r\n          });\r\n        }\r\n        else {\r\n          alert('上传失败，上传文件格式有误！');\r\n        }\r\n      });\r\n    }\r\n\r\n    $scope.toIndex = function() {\r\n      $state.go(\"main.department.inventory\", {}, {\r\n        reload: true\r\n      });\r\n    }\r\n  }\r\n])\r\n\r\n\r\n/* HTTP */\r\nDInventoryUpload.factory('Department.InventoryUpload.Service.Http', ['$http', '$q', 'API',\r\n  function($http, $q, API) {\r\n    var path = API.path;\r\n\r\n    function uploadFile(file) {\r\n      var fd = new FormData();\r\n      var uploadUrl = path + '/upload/zipFile';\r\n      fd.append('file', file);\r\n      var promise = $http.post(uploadUrl, fd, {\r\n        transformRequest: angular.identity,\r\n        headers: {\r\n          'Content-Type': undefined\r\n        }\r\n      });\r\n      return promise;\r\n    }\r\n\r\n    function uploadExamplesFile(file,id) {\r\n      var fd = new FormData();\r\n      var uploadUrl = path + '/upload/examples?resource_id=' + id;\r\n      fd.append('file', file);\r\n      var promise = $http.post(uploadUrl, fd, {\r\n        transformRequest: angular.identity,\r\n        headers: {\r\n          'Content-Type': undefined\r\n        }\r\n      });\r\n      return promise;\r\n    }\r\n    return {\r\n      uploadFile: uploadFile,\r\n      uploadExamplesFile: uploadExamplesFile\r\n    }\r\n  }])\r\n\r\n\r\n  DInventoryUpload.directive('fileModel', ['$parse', function($parse) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs) {\r\n        var model = $parse(attrs.fileModel);\r\n        var modelSetter = model.assign;\r\n        scope.parentIvntObj = {};\r\n        element.bind('change', function() {\r\n          var rgx = /(zip)/i;\r\n          var fileSuffix = element[0].files[0].name;\r\n          scope.parentIvntObj.fileName = fileSuffix;\r\n          var ext = fileSuffix.substring(fileSuffix.lastIndexOf(\".\") + 1);\r\n          if (!rgx.test(ext)) {\r\n            scope.$apply(function() {\r\n              scope.parentIvntObj.fileNameError = true;\r\n            })\r\n\r\n          } else {\r\n            scope.parentIvntObj.fileNameError = false;\r\n            scope.$apply(function() {\r\n              modelSetter(scope, element[0].files[0]);\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n\r\n  DInventoryUpload.directive('fileModelExcel', ['$parse', function($parse) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs) {\r\n        var model = $parse(attrs.fileModelExcel);\r\n        var modelSetter = model.assign;\r\n        scope.parentIvntObj = {};\r\n        element.bind('change', function() {\r\n          var rgx = /(xls|xlsx)/i;\r\n          var fileSuffix = element[0].files[0].name;\r\n          scope.parentIvntObj.fileName = fileSuffix;\r\n          var ext = fileSuffix.substring(fileSuffix.lastIndexOf(\".\") + 1);\r\n          if (!rgx.test(ext)) {\r\n            scope.$apply(function() {\r\n              scope.parentIvntObj.fileNameError = true;\r\n            })\r\n\r\n          } else {\r\n            scope.parentIvntObj.fileNameError = false;\r\n            scope.$apply(function() {\r\n              modelSetter(scope, element[0].files[0]);\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n","'use strict';\r\nvar DInventory = angular.module('Department.Inventory', ['ui.router', 'ngCookies', 'cgBusy']);\r\n\r\n/** Inventory Controller */\r\nDInventory.controller('Department.Inventory.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Inventory.Service.Http',\r\n  function($cookies, $scope, $q, Http) {\r\n    var SHARE_FREQUENCY = 1;\r\n    var DATA_LEVEL = 2;\r\n    var SHARE_LEVEL = 3;\r\n    var SECRET_FLAG = 5;\r\n    var RESOURCE_FORMAT = 11;\r\n    var SOCIAL_OPEN_FLAG = 14;\r\n\r\n    var LoginUser = JSON.parse($cookies.get('User'));\r\n    var DEP_NAME = LoginUser.dep_id;\r\n    $scope.DepartInfoResource = {};\r\n\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n\r\n    var _httpParams = {};\r\n    _httpParams.limit = 10;\r\n    _httpParams.skip = 0;\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SECRET_FLAG\r\n    }).then(function(result) {\r\n      $scope.secretFlagList = result.data.body;\r\n    });\r\n\r\n    // Get system dict\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_FREQUENCY\r\n    }).then(function(result) {\r\n      $scope.shareFrequencyList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_LEVEL\r\n    }).then(function(result) {\r\n      $scope.shareLevelList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': RESOURCE_FORMAT\r\n    }).then(function(result) {\r\n      $scope.resourceFormatList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': DATA_LEVEL\r\n    }).then(function(result) {\r\n      $scope.dataLevelList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SOCIAL_OPEN_FLAG\r\n    }).then(function(result) {\r\n      $scope.socialOpenList = result.data.body;\r\n    });\r\n\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    function getDeptInfoResourceList(_httpParams) {\r\n      //_httpParams.dep_name = DEP_NAME;\r\n      $scope.promise = Http.getDepartInfoResList(_httpParams).then(function(result) {\r\n        console.log(result);\r\n        if (200 == result.data.head.status) {\r\n          $scope.infoResourceList = result.data.body[0].results;\r\n          $scope.resourceCount = result.data.body[0].count[0].resource_count;\r\n          $scope.Paging.totalItems = result.data.body[0].count[0].resource_count;\r\n        } else {\r\n          $scope.infoResourceList = [];\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n\r\n    //init\r\n    getDeptInfoResourceList(_httpParams);\r\n\r\n    // resource format all\r\n    $scope.getResFormatAll = function() {\r\n      $scope.resFormatMainSelection = [];\r\n      _httpParams.re_format = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // share level all\r\n    $scope.getShareLevelAll = function() {\r\n      $scope.shareLvMainSelection = [];\r\n      _httpParams.share_level = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // social open all\r\n    $scope.getSocialOpenAll = function() {\r\n      $scope.socialOpenMainSelection = [];\r\n      _httpParams.social_open_flag = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // share frequency all\r\n    $scope.getShareFreqAll = function() {\r\n      $scope.shareFreqSelection = [];\r\n      _httpParams.update_period = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // secret flag all\r\n    $scope.getSecretFlagAll = function() {\r\n      $scope.secretFlagMainSelection = [];\r\n      _httpParams.issecret = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // filter by resource format\r\n    $scope.resFormatMainSelection = [];\r\n    $scope.getInfoResourceByResFormat = function(item) {\r\n      var idx = $scope.resFormatMainSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.resFormatMainSelection = [];\r\n      } else {\r\n        $scope.resFormatMainSelection = item.id;\r\n      }\r\n      _httpParams.re_format = $scope.resFormatMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // filter by share frequency\r\n    $scope.shareFreqSelection = [];\r\n    $scope.getInfoResourceListBySF = function(item) {\r\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.shareFreqSelection.splice(idx, 1);\r\n      } else {\r\n        $scope.shareFreqSelection.push(item.id);\r\n      }\r\n      _httpParams.update_period = $scope.shareFreqSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // filter by share level\r\n    $scope.shareLvMainSelection = [];\r\n    $scope.getInfoResourceListBySl = function(item) {\r\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.shareLvMainSelection = [];\r\n      } else {\r\n        $scope.shareLvMainSelection = item.id;\r\n      }\r\n      _httpParams.share_level = $scope.shareLvMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // filter by social open flag\r\n    $scope.socialOpenMainSelection = [];\r\n    $scope.getInfoResourceListBySO = function(item) {\r\n      var idx = $scope.socialOpenMainSelection.indexOf(item.dict_code);\r\n      if (idx > -1) {\r\n        $scope.socialOpenMainSelection = [];\r\n      } else {\r\n        $scope.socialOpenMainSelection = item.dict_code;\r\n      }\r\n      _httpParams.social_open_flag = $scope.socialOpenMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // filter by secret flag\r\n    $scope.secretFlagMainSelection = [];\r\n    $scope.getInfoResourceListBySecFlag = function(item) {\r\n      var idx = $scope.secretFlagMainSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.secretFlagMainSelection = [];\r\n      } else {\r\n        $scope.secretFlagMainSelection = item.id;\r\n      }\r\n      _httpParams.issecret = $scope.secretFlagMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n\r\n    // get spatial all\r\n    $scope.getSpatialAll = function() {\r\n      $scope.areaMainSelection = [];\r\n      _httpParams.area_level = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // filter by partial\r\n    $scope.areaMainSelection = [];\r\n    $scope.getInfoResourceListByAP = function(item) {\r\n      var idx = $scope.areaMainSelection.indexOf(item.id);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.areaMainSelection.splice(idx, 1);\r\n      }\r\n      // is newly selected\r\n      else {\r\n        $scope.areaMainSelection.push(item.id);\r\n      }\r\n\r\n      _httpParams.area_level = $scope.areaMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // search by name\r\n    $scope.searchDeptInfoResourceByName = function() {\r\n      _httpParams.resource_name = $scope.DepartInfoResource.resource_name_filter;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptInfoResourceList(_httpParams);\r\n    }\r\n\r\n    // delete info resource\r\n    $scope.deleteInfoResource = function(resourceId) {\r\n      var deleteConfirm = confirm('确定删除本条信息资源？删除后将不可恢复。');\r\n      if (deleteConfirm) {\r\n        Http.deleteInfoResource({\r\n          resourceid: resourceId\r\n        }).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('删除成功！');\r\n            getDeptInfoResourceList(_httpParams);\r\n          } else {\r\n            alert('删除失败');\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n])\r\n\r\n\r\n\r\nDInventory.controller('Department.Inventory.Controller.publish', ['$cookies', '$scope', '$stateParams', '$state', '$q', '$uibModal', 'Department.Inventory.Service.Component', 'Department.Inventory.Service.Http',\r\n  function($cookies, $scope, $stateParams, $state, $q, $uibModal, Component, Http) {\r\n    var RESOURCE_CATEGORY = 10;\r\n    var SHARE_TYPE = 12;\r\n    var SHARE_METHOD = 13;\r\n    var ITEM_TYPE = 15;\r\n    var LEVEL_AUTH = '250375bd-02f0-11e6-a52a-5cf9dd40ad7e'; // 授权开放\r\n    var LEVEL_ALL_OPEN = '2501e32c-02f0-11e6-a52a-5cf9dd40ad7e'; // 全开放\r\n    var RESOURCE_FORMAT_DATA = 'aaee8194-2614-11e6-a9e9-507b9d1b58bb';\r\n    var RESOURCE_FORMAT_OTHER = 'ab11fdd4-2614-11e6-a9e9-507b9d1b58bb';\r\n    var SHARE_METHOD_OTHER = 'd8d61ff3-2616-11e6-a9e9-507b9d1b58bb';\r\n\r\n    var LoginUser = JSON.parse($cookies.get('User'));\r\n    var DEP_ID = LoginUser.dep_id;\r\n    $scope.DEP_NAME = LoginUser.dep_name;\r\n    $scope.ORG_NAME = LoginUser.organization;\r\n    $scope.ORG_CODE = LoginUser.organization_code;\r\n    $scope.InfoResource = {};\r\n    $scope.InfoResource.alias = '';\r\n    $scope.InfoResource.rel_category = '';\r\n    $scope.InfoResource.secret_flag = '';\r\n    $scope.InfoResource.meter_unit = \"\";\r\n    $scope.InfoResource.calculate_method = '';\r\n    $scope.InfoResource.resource_format_other = '';\r\n    $scope.InfoResource.share_method_other = '';\r\n    $scope.InfoResource.social_open_limit = '';\r\n    $scope.InfoResource.linkman = '';\r\n    $scope.InfoResource.contact_phone = '';\r\n    $scope.InfoResource.resource_format_desc = '';\r\n    $scope.InfoResource.share_method_desc = '';\r\n    // item list\r\n    $scope.ResourceItemList = [];\r\n    //$scope.ResourceItemConfigList = [];\r\n\r\n    // resource name duplicate check\r\n    $scope.resNameExist = false;\r\n    $scope.checkResName = function() {\r\n      if ($scope.InfoResource.resource_name && $scope.InfoResource.resource_name != '') {\r\n        Http.checkResName({\r\n          resource_name: $scope.InfoResource.resource_name\r\n        }).then(function(res) {\r\n          if (res.data.body[0].isexists == 'true') {\r\n            $scope.resNameExist = true;\r\n          } else {\r\n            $scope.resNameExist = false;\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    function getInfoItemList(resourceId) {\r\n      // 获取信息项列表\r\n      Http.getInfoItemList({\r\n        resource_id: resourceId\r\n      }).then(function(result) {\r\n        if (200 == result.data.head.status) {\r\n          $scope.ResourceItemList = result.data.body;\r\n          // 拼接信息资源所有信息项的多选项\r\n          _($scope.ResourceItemList).forEach(function(item) {\r\n            var shareFreqDictName = [];\r\n            _(item.config).forEach(function(config) {\r\n              shareFreqDictName.push(config.dict_name);\r\n            })\r\n            item.update_period_name = shareFreqDictName.toString();\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    Http.getDepartmentList().then(function(result) {\r\n      $scope.deptList = result.data.body;\r\n      var evens = _.remove($scope.deptList, function(item) {\r\n        return item.id == DEP_ID;\r\n      });\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': RESOURCE_CATEGORY\r\n    }).then(function(result) {\r\n      $scope.resourceCategoryList = result.data.body;\r\n      $scope.resourceCategoryRelList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_TYPE\r\n    }).then(function(result) {\r\n      $scope.shareTypeList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_METHOD\r\n    }).then(function(result) {\r\n      $scope.shareMethodList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': ITEM_TYPE\r\n    }).then(function(result) {\r\n      $scope.itemTypeList = result.data.body;\r\n    });\r\n\r\n    $scope.close = function(isValid) {\r\n      $state.go(\"main.department.inventory\", {}, {\r\n        reload: true\r\n      });\r\n    }\r\n\r\n    $scope.toUpload = function() {\r\n      if($scope.ResourceItemList.length == 0) {\r\n        alert('您还未添加信息项！');\r\n        return;\r\n      }\r\n      else {\r\n        $state.go(\"main.department.inventory.uploadExampleData\", {ID:$scope.InfoResource.id}, {\r\n          reload: true\r\n        });\r\n      }\r\n    }\r\n\r\n    // submit add\r\n    $scope.addInfoResource = function(isValid) {\r\n      $scope.submitted = true;\r\n      var InfoResourceAddObj = {};\r\n      var InfoResource_RelationConfig = [];\r\n      var InfoResourceApplyInfo = [];\r\n      console.log($scope.resItemAddBtn);\r\n      //var InfoItem_RelationConfig = [];\r\n      if ($scope.resNameExist) {\r\n        isValid = false;\r\n      }\r\n      if ($scope.shareFreqSelection.length == 0 && !$scope.resItemAddBtn) { // 未选择更新周期\r\n        isValid = false;\r\n      }\r\n      if ($scope.InfoResource.category == $scope.InfoResource.rel_category) { // 信息资源分类和关联及类目名称相同\r\n        isValid = false;\r\n      }\r\n      if ($scope.depShow && ($scope.outputDeptList.length == 0)) { // 未选择指定部门开放\r\n        isValid = false;\r\n      }\r\n      if (isValid) {\r\n        InfoResourceAddObj.InfoResource = $scope.InfoResource;\r\n        _($scope.dataLevelSelection).forEach(function(value) {\r\n          var sys_dict = {};\r\n          sys_dict.InfoResourceId = $scope.InfoResource.resource_name;\r\n          sys_dict.sys_dict_id = value;\r\n          InfoResource_RelationConfig.push(sys_dict);\r\n        });\r\n\r\n        _($scope.shareFreqSelection).forEach(function(value) {\r\n          var sys_dict = {};\r\n          sys_dict.InfoResourceId = $scope.InfoResource.resource_name;\r\n          sys_dict.sys_dict_id = value;\r\n          sys_dict.obj_type = 1;\r\n          InfoResource_RelationConfig.push(sys_dict);\r\n        });\r\n\r\n        var shareDeps = _.map($scope.outputDeptList, 'id');\r\n        _(shareDeps).forEach(function(value) {\r\n          var share_dep = {};\r\n          share_dep.InfoResourceId = $scope.InfoResource.resource_name;\r\n          share_dep.apply_dep = value;\r\n          InfoResourceApplyInfo.push(share_dep);\r\n        });\r\n\r\n        InfoResourceAddObj.InfoResource_RelationConfig = InfoResource_RelationConfig;\r\n        InfoResourceAddObj.InfoResourceApplyInfo = InfoResourceApplyInfo;\r\n\r\n        console.log(InfoResourceAddObj);\r\n        $scope.savePromise = Http.saveInfoResource(InfoResourceAddObj).then(function(result) {\r\n          console.log(result.data);\r\n          if (200 == result.data.head.status) {\r\n            if (!$scope.resItemAddBtn) {\r\n              alert('保存成功！');\r\n              $state.go(\"main.department.inventory\", {}, {\r\n                reload: true\r\n              });\r\n            } else {\r\n              $scope.ResItemListShow = true;\r\n              $scope.InfoResource.id = result.data.body[0].id;\r\n            }\r\n          } else {\r\n            alert('保存失败！');\r\n          }\r\n        })\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    // submit update\r\n    console.log($stateParams.item);\r\n    $scope.resItemUpdateBtn = false;\r\n    if ($stateParams.item) { // 选择修改\r\n      // 根据id查询信息资源详情\r\n      Http.getDepartInfoResList({\r\n        resource_id: $stateParams.item\r\n      }).then(function(ResourceRes) {\r\n        $scope.InfoResource = ResourceRes.data.body[0].results[0];\r\n        if (LEVEL_AUTH == $scope.InfoResource.share_level) {\r\n          $scope.depShow = true;\r\n        }\r\n\r\n        if (RESOURCE_FORMAT_DATA == $scope.InfoResource.resource_format) {\r\n          $scope.resItemUpdateBtn = true;\r\n          $scope.InfoResource.update_period = '';\r\n        }\r\n\r\n        //$scope.ResourceItemConfigList = [];\r\n        // 获取资源分地区数据级别\r\n        Http.getResourceAreaLevel({\r\n          resource_id: $scope.InfoResource.id\r\n        }).then(function(res) {\r\n          $scope.dataLevelSelection = res.data.body[0].id;\r\n        })\r\n\r\n        // 获取资源更新周期\r\n        Http.getResourceUpdatePeriod({\r\n          resource_id: $scope.InfoResource.id\r\n        }).then(function(res) {\r\n          $scope.shareFreqSelection = res.data.body[0].id;\r\n        })\r\n\r\n        // 获取指定开放部门列表\r\n        Http.getResourceShareDeps({\r\n          resource_id: $scope.InfoResource.id\r\n        }).then(function(res) {\r\n          var authDepts = res.data.body[0].id;\r\n          if (authDepts.length > 0) {\r\n            $scope.depShow = true;\r\n          }\r\n          _($scope.deptList).forEach(function(allItem) {\r\n            _(authDepts).forEach(function(authItem) {\r\n              if (allItem.id == authItem) {\r\n                allItem.ticked = true;\r\n                $scope.outputDeptList.push(allItem);\r\n              }\r\n            })\r\n          });\r\n        })\r\n      })\r\n\r\n    }\r\n\r\n\r\n    $scope.updateInfoResource = function(isValid) {\r\n      $scope.submitted = true;\r\n      var InfoResourceAddObj = {};\r\n      var InfoResource_RelationConfig = [];\r\n      var InfoResourceApplyInfo = [];\r\n      //  var InfoItem_RelationConfig = [];\r\n\r\n\r\n      if ($scope.resNameExist) {\r\n        isValid = false;\r\n      }\r\n      if ($scope.shareFreqSelection.length == 0 && !$scope.resItemUpdateBtn) { // 未选择更新周期\r\n        isValid = false;\r\n      }\r\n      if ($scope.InfoResource.category == $scope.InfoResource.rel_category) { // 信息资源分类和关联及类目名称相同\r\n        isValid = false;\r\n      }\r\n      if ($scope.depShow && ($scope.outputDeptList.length == 0)) { // 未选择指定部门开放\r\n        isValid = false;\r\n      }\r\n\r\n      if (isValid) {\r\n        InfoResourceAddObj.InfoResource = $scope.InfoResource;\r\n        _($scope.dataLevelSelection).forEach(function(value) {\r\n          var sys_dict = {};\r\n          sys_dict.InfoResourceId = $scope.InfoResource.id;\r\n          sys_dict.sys_dict_id = value;\r\n          InfoResource_RelationConfig.push(sys_dict);\r\n        });\r\n\r\n        _($scope.shareFreqSelection).forEach(function(value) {\r\n          var sys_dict = {};\r\n          sys_dict.InfoResourceId = $scope.InfoResource.id;\r\n          sys_dict.sys_dict_id = value;\r\n          sys_dict.obj_type = 1;\r\n          InfoResource_RelationConfig.push(sys_dict);\r\n        });\r\n\r\n        var shareDeps = _.map($scope.outputDeptList, 'id');\r\n        _(shareDeps).forEach(function(value) {\r\n          var share_dep = {};\r\n          share_dep.InfoResourceId = $scope.InfoResource.id;\r\n          share_dep.apply_dep = value;\r\n          InfoResourceApplyInfo.push(share_dep);\r\n        });\r\n        _($scope.ResourceItemList).forEach(function(item, index) {\r\n          console.log(index);\r\n          item.item_ord = index;\r\n          item.InfoResourceId = $scope.InfoResource.id;\r\n          console.log($scope.ResourceItemList);\r\n        })\r\n\r\n        InfoResourceAddObj.InfoResource_RelationConfig = InfoResource_RelationConfig;\r\n        InfoResourceAddObj.InfoResourceApplyInfo = InfoResourceApplyInfo;\r\n\r\n        $scope.updatePromise = Http.updateInfoResource(InfoResourceAddObj).then(function(result) {\r\n          console.log(result.data);\r\n          if (200 == result.data.head.status) {\r\n            if (!$scope.resItemUpdateBtn) {\r\n              alert('保存成功！');\r\n              $state.go(\"main.department.inventory\", {}, {\r\n                reload: true\r\n              });\r\n            } else {\r\n              // 获取信息项列表\r\n              getInfoItemList($scope.InfoResource.id);\r\n              $scope.ResItemListShow = true;\r\n            }\r\n\r\n          } else {\r\n            alert('保存失败');\r\n          }\r\n\r\n        })\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // $scope.editItems = function(id) {\r\n    //   $scope.ResourceItemList = [];\r\n    //   $scope.parent = {};\r\n    //   Http.getInfoItemList({\r\n    //     resource_id: id\r\n    //   }).then(function(result) {\r\n    //     if (200 == result.data.head.status) {\r\n    //       $scope.ResourceItemList = result.data.body;\r\n    //       // 拼接信息资源所有信息项的多选项\r\n    //       _($scope.ResourceItemList).forEach(function(item) {\r\n    //         var shareFreqDictName = [];\r\n    //         _(item.config).forEach(function(config) {\r\n    //           shareFreqDictName.push(config.dict_name);\r\n    //         })\r\n    //         item.update_period_name = shareFreqDictName.toString();\r\n    //       })\r\n    //     }\r\n    //\r\n    //   })\r\n    //   $scope.ResItemListShow = true;\r\n    // }\r\n\r\n    $scope.addResourceItem = function(type) {\r\n      console.log($scope.InfoResource.id);\r\n      $scope.shareFreqEmpty = false;\r\n      $scope.Modal = {};\r\n      $scope.itemAdded = false;\r\n      $scope.ResourceItem = {};\r\n      $scope.ResourceItem.meter_unit = '';\r\n      $scope.ResourceItem.calculate_method = '';\r\n      $scope.ResourceItem.field_standard = '';\r\n      $scope.ResourceItem.shareFreqItemSelection = [];\r\n      $scope.ResourceItem.shareFreqItemObjSelection = [];\r\n      $scope.ResourceItem.isleaf = 1;\r\n      $scope.parent = {};\r\n      $scope.parent.itemNameExist = false;\r\n      $scope.parent.childParentConflict = false;\r\n\r\n      $scope.data = {};\r\n      $scope.ResourceItem.item_type = $scope.itemTypeList[0].id;\r\n      $scope.ResourceItem.secret_flag = $scope.secretFlagList[0].id;\r\n\r\n      $scope.ResourceItemConfigList = [];\r\n      var ItemCommitObj = {};\r\n\r\n      $scope.$watch('data.parent_id', function(n) {\r\n        $scope.parent.childParentConflict = false;\r\n        if (n) {\r\n          _($scope.ResourceItemList).forEach(function(item) {\r\n            if ((n.item_name != $scope.ResourceItem.item_name) && (n.item_name == item.item_name) && ($scope.ResourceItem.item_name == item.parent_id)) {\r\n              $scope.parent.childParentConflict = true;\r\n              return;\r\n            }\r\n          });\r\n          $scope.ResourceItem.parent_id = n.id;\r\n        } else {\r\n          $scope.ResourceItem.parent_id = '';\r\n        }\r\n      })\r\n\r\n\r\n      $scope.checkItemName = function() {\r\n        if ($scope.ResourceItem.item_name && $scope.ResourceItem.item_name != '') {\r\n          console.log($scope.ResourceItem);\r\n          console.log($scope.ResourceItemList);\r\n          $scope.parent.itemNameExist = false;\r\n          _($scope.ResourceItemList).forEach(function(item) {\r\n            if (($scope.ResourceItem.item_name == item.item_name) && $scope.ResourceItem !== item) {\r\n              $scope.parent.itemNameExist = true;\r\n            }\r\n          })\r\n          if (!$scope.parent.itemNameExist) {\r\n            Http.checkItemName({\r\n              item_name: $scope.ResourceItem.item_name\r\n            }).then(function(res) {\r\n              if (res.data.body[0].isexists == 'true') {\r\n                $scope.parent.itemNameExist = true;\r\n              } else {\r\n                $scope.parent.itemNameExist = false;\r\n              }\r\n            })\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      $scope.parent.ItemsList = $scope.ResourceItemList;\r\n      _.remove($scope.parent.ItemsList, function(item) {\r\n        return item.item_name == '';\r\n      });\r\n      Component.popModal($scope, 'Department.Inventory.Controller.publish', '新增', 'item-add-modal').result.then(function(res) {\r\n        $scope.itemAdded = false;\r\n\r\n        var shareFreqDictName = [];\r\n        _($scope.ResourceItem.shareFreqItemObjSelection).forEach(function(item) {\r\n          var sys_dict = {};\r\n          sys_dict.InfoItemId = $scope.ResourceItem.item_name;\r\n          sys_dict.sys_dict_id = item.id;\r\n          sys_dict.parent_id = $scope.ResourceItem.parent_id;\r\n          $scope.ResourceItemConfigList.push(sys_dict);\r\n        });\r\n        $scope.ResourceItem.resource_id = $scope.InfoResource.id;\r\n        ItemCommitObj.InfoItem = $scope.ResourceItem;\r\n        ItemCommitObj.InfoItem_RelationConfig = $scope.ResourceItemConfigList;\r\n\r\n        // 新增信息项\r\n        Http.addInfoItem(ItemCommitObj).then(function(res) {\r\n          if (200 == res.data.head.status) {\r\n            alert('保存成功！');\r\n            // 获取信息项列表\r\n            getInfoItemList($scope.InfoResource.id);\r\n          } else {\r\n            alert('保存失败！');\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    // update resource item\r\n    $scope.updateItem = function(id) {\r\n      // 根据id查询信息项\r\n      $scope.InfoItem = null;\r\n      $scope.ResourceItemConfigList = [];\r\n      Http.getInfoItemById({\r\n        info_item_id: id\r\n      }).then(function(result) {\r\n        if (200 == result.data.head.status) {\r\n          $scope.InfoItem = result.data.body[0];\r\n\r\n          $scope.Modal = {};\r\n          $scope.itemUpdated = false;\r\n          $scope.ResourceItem = angular.copy($scope.InfoItem);\r\n          $scope.ResourceItem.shareFreqItemSelection = _.map($scope.InfoItem.config, 'id');\r\n          $scope.ResourceItem.shareFreqItemObjSelection = $scope.InfoItem.config;\r\n          $scope.shareFreqEmpty = false;\r\n          $scope.parent = {};\r\n          $scope.parent.itemNameExist = false;\r\n          $scope.parent.ItemsList = angular.copy($scope.ResourceItemList);\r\n          var hasEmpty = false;\r\n          console.log($scope.InfoItem);\r\n          console.log($scope.ResourceItem.shareFreqItemSelection);\r\n          var ItemUpdateObj = {};\r\n\r\n          _($scope.parent.ItemsList).forEach(function(item) {\r\n            if (item.item_name == '') {\r\n              hasEmpty = true;\r\n            }\r\n          })\r\n          if (!hasEmpty) {\r\n            $scope.parent.ItemsList.push({\r\n              'item_name': ''\r\n            });\r\n          }\r\n\r\n          $scope.data = {};\r\n\r\n          _($scope.parent.ItemsList).forEach(function(resourceItem) {\r\n            if ($scope.InfoItem.parent_id == resourceItem.item_name) {\r\n              $scope.data.parent_id = resourceItem;\r\n            }\r\n          })\r\n\r\n          $scope.$watch('data.parent_id', function(n) {\r\n            $scope.parent.childParentConflict = false;\r\n            if (n) {\r\n              _($scope.ResourceItemList).forEach(function(item) {\r\n                if ((n.item_name != $scope.ResourceItem.item_name) && (n.item_name == item.item_name) && ($scope.ResourceItem.item_name == item.parent_id)) {\r\n                  $scope.parent.childParentConflict = true;\r\n                  return;\r\n                }\r\n              });\r\n              $scope.ResourceItem.parent_id = n.id;\r\n            } else {\r\n              $scope.ResourceItem.parent_id = '';\r\n            }\r\n          })\r\n\r\n          $scope.checkItemName = function() {\r\n            if ($scope.ResourceItem.item_name && $scope.ResourceItem.item_name != '') {\r\n              $scope.parent.itemNameExist = false;\r\n              _($scope.ResourceItemList).forEach(function(item) {\r\n                if (($scope.ResourceItem.item_name == item.item_name) && $scope.ResourceItem !== item) {\r\n                  $scope.parent.itemNameExist = true;\r\n                }\r\n              })\r\n              if (!$scope.parent.itemNameExist) {\r\n                Http.checkItemName({\r\n                  item_name: $scope.ResourceItem.item_name\r\n                }).then(function(res) {\r\n                  if (res.data.body[0].isexists == 'true') {\r\n                    $scope.parent.itemNameExist = true;\r\n                  } else {\r\n                    $scope.parent.itemNameExist = false;\r\n                  }\r\n                })\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n\r\n          Component.popModal($scope, 'Department.Inventory.Controller.publish', '修改', 'item-add-modal').result.then(function(res) {\r\n            $scope.itemUpdated = false;\r\n            var shareFreqDictName = [];\r\n\r\n            _($scope.ResourceItem.shareFreqItemObjSelection).forEach(function(item) {\r\n              var sys_dict = {};\r\n              sys_dict.InfoItemId = $scope.ResourceItem.id;\r\n              sys_dict.sys_dict_id = item.id;\r\n              sys_dict.parent_id = $scope.ResourceItem.parent_id;\r\n              $scope.ResourceItemConfigList.push(sys_dict);\r\n            });\r\n\r\n            $scope.ResourceItem.resource_id = $scope.InfoResource.id;\r\n            ItemUpdateObj.InfoItem = $scope.ResourceItem;\r\n            ItemUpdateObj.InfoItem_RelationConfig = $scope.ResourceItemConfigList;\r\n\r\n            // 修改信息项\r\n            Http.updateInfoItem(ItemUpdateObj).then(function(res) {\r\n              if (200 == res.data.head.status) {\r\n                alert('保存成功！');\r\n                // 获取信息项列表\r\n                getInfoItemList($scope.InfoResource.id);\r\n              } else {\r\n                alert('保存失败！');\r\n              }\r\n            })\r\n\r\n          })\r\n        } else {\r\n          alert('查询出错！');\r\n          return;\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    // delete info item\r\n    $scope.deleteItem = function(id) {\r\n      var deleteFlag = confirm('确定删除本条信息项？');\r\n      console.log(id);\r\n      if (deleteFlag && id) {\r\n        Http.deleteInfoItem({\r\n          id: id\r\n        }).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('删除成功！');\r\n            // 获取信息项列表\r\n            getInfoItemList($scope.InfoResource.id);\r\n          } else {\r\n            alert('删除失败！');\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // show or hide department\r\n    $scope.depShow = false;\r\n    $scope.showHideDeps = function(ev) {\r\n      if (LEVEL_ALL_OPEN != $scope.InfoResource.share_level) { // 不为全开放\r\n        if (LEVEL_AUTH == $scope.InfoResource.share_level) { // 授权开放\r\n          $scope.depShow = true;\r\n          $scope.socialOpenFlag = false;\r\n        } else {\r\n          $scope.depShow = false;\r\n          $scope.socialOpenFlag = true;\r\n          $scope.outputDeptList = [];\r\n        }\r\n        $scope.InfoResource.social_open_flag = 0;\r\n      } else {\r\n        $scope.InfoResource.social_open_flag = 1;\r\n        $scope.outputDeptList = [];\r\n      }\r\n\r\n    }\r\n\r\n    $scope.shareMethodOtherShow = false;\r\n    $scope.showHideShareMethodOther = function() {\r\n      if (SHARE_METHOD_OTHER == $scope.InfoResource.share_method) {\r\n        $scope.shareMethodOtherShow = true;\r\n      } else {\r\n        $scope.shareMethodOtherShow = false;\r\n      }\r\n    }\r\n\r\n    //show or hide resource item add button\r\n    $scope.resItemAddBtn = false;\r\n    $scope.resFormatOtherShow = false;\r\n    $scope.showHideResAddBtn = function() {\r\n      $scope.resFormatOtherShow = false;\r\n      if (RESOURCE_FORMAT_DATA == $scope.InfoResource.resource_format) {\r\n        if ($stateParams.item) { // 修改\r\n          $scope.resItemUpdateBtn = true;\r\n        } else { // 新增\r\n          $scope.resItemAddBtn = true;\r\n        }\r\n\r\n        $scope.resFormatOtherShow = false;\r\n        $scope.shareFreqSelection = [];\r\n        $scope.InfoResource.secret_flag = '';\r\n        $scope.InfoResource.meter_unit = \"\";\r\n        $scope.InfoResource.calculate_method = '';\r\n      } else if (RESOURCE_FORMAT_OTHER == $scope.InfoResource.resource_format) {\r\n        $scope.resFormatOtherShow = true;\r\n        $scope.resItemAddBtn = false;\r\n        $scope.resItemUpdateBtn = false;\r\n      } else {\r\n        $scope.resItemAddBtn = false;\r\n        $scope.resFormatOtherShow = false;\r\n        $scope.resItemUpdateBtn = false;\r\n      }\r\n    }\r\n\r\n    $scope.dataLevelSelection = [];\r\n    $scope.toggleDataLevelSelection = function(item) {\r\n      var idx = $scope.dataLevelSelection.indexOf(item.id);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.dataLevelSelection.splice(idx, 1);\r\n      }\r\n\r\n      // is newly selected\r\n      else {\r\n        $scope.dataLevelSelection.push(item.id);\r\n      }\r\n    };\r\n\r\n    $scope.shareFreqSelection = [];\r\n    $scope.toggleShareFreqSelection = function(item) {\r\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.shareFreqSelection.splice(idx, 1);\r\n      }\r\n\r\n      // is newly selected\r\n      else {\r\n        $scope.shareFreqSelection.push(item.id);\r\n      }\r\n    };\r\n\r\n\r\n\r\n    $scope.toggleShareFreqItemSelection = function(item) {\r\n      //var shareFreqItemSelectionIds = _.map($scope.shareFreqItemSelection, 'id');\r\n      var idx = $scope.ResourceItem.shareFreqItemSelection.indexOf(item.id);\r\n      console.log(idx);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.ResourceItem.shareFreqItemSelection.splice(idx, 1);\r\n        $scope.ResourceItem.shareFreqItemObjSelection.splice(idx, 1);\r\n      }\r\n\r\n      // is newly selected\r\n      else {\r\n        $scope.ResourceItem.shareFreqItemSelection.push(item.id);\r\n        $scope.ResourceItem.shareFreqItemObjSelection.push(item);\r\n      }\r\n      console.log($scope.ResourceItem.shareFreqItemObjSelection);\r\n    };\r\n\r\n\r\n  }\r\n\r\n])\r\n\r\n\r\n\r\n/* HTTP */\r\nDInventory.factory('Department.Inventory.Service.Http', ['$http', '$q', 'API',\r\n  function($http, $q, API) {\r\n    var path = API.path;\r\n\r\n    function getDepartmentList() {\r\n      return $http.get(\r\n        path + '/sys_dep'\r\n      )\r\n    }\r\n\r\n    function getDepartInfoResList(params) {\r\n      return $http.get(\r\n        path + '/info_resource_list', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getInfoResourceDetail(params) {\r\n      return $http.get(\r\n        path + '/data_quota_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function saveInfoResource(data) {\r\n      return $http.post(\r\n        path + '/info_resource', {\r\n          data: data\r\n        }\r\n      )\r\n    };\r\n\r\n    function updateInfoResource(data) {\r\n      return $http.put(\r\n        path + '/info_resource', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    function getInfoItemList(params) {\r\n      return $http.get(\r\n        path + '/allitem_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getSystemDictByCatagory(params) {\r\n      return $http.get(\r\n        path + '/sys_dict', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function deleteInfoResource(id) {\r\n      return $http.delete(\r\n        path + '/info_resource', {\r\n          data: id\r\n        }\r\n      )\r\n    }\r\n\r\n    function getResourceAreaLevel(params) {\r\n      return $http.get(\r\n        path + '/resource_area_level', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getResourceUpdatePeriod(params) {\r\n      return $http.get(\r\n        path + '/resource_update_period', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getResourceShareDeps(params) {\r\n      return $http.get(\r\n        path + '/resource_share_dep', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getInfoItemById(id) {\r\n      return $http.get(\r\n        path + '/info_item', {\r\n          params: id\r\n        }\r\n      )\r\n    }\r\n\r\n    function addInfoItem(params) {\r\n      return $http.post(\r\n        path + '/info_item', {\r\n          data: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function updateInfoItem(params) {\r\n      return $http.put(\r\n        path + '/info_item', {\r\n          data: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function deleteInfoItem(id) {\r\n      return $http.delete(\r\n        path + '/info_item', {\r\n          data: id\r\n        }\r\n      )\r\n    }\r\n\r\n    function getItemUpdatePeriod(params) {\r\n      return $http.get(\r\n        path + '/item_update_period', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function checkResName(params) {\r\n      return $http.get(\r\n        path + '/info_resource_name', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function checkItemName(params) {\r\n      return $http.get(\r\n        path + '/info_item_name', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function uploadFile(file, id) {\r\n      var fd = new FormData();\r\n      var uploadUrl = path + '/upload/excel?data_quota_id=' + id;\r\n      fd.append('file', file);\r\n      var promise = $http.post(uploadUrl, fd, {\r\n        transformRequest: angular.identity,\r\n        headers: {\r\n          'Content-Type': undefined\r\n        }\r\n      });\r\n      return promise;\r\n    }\r\n\r\n    return {\r\n      saveInfoResource: saveInfoResource,\r\n      getDepartmentList: getDepartmentList,\r\n      getDepartInfoResList: getDepartInfoResList,\r\n      getInfoResourceDetail: getInfoResourceDetail,\r\n      getSystemDictByCatagory: getSystemDictByCatagory,\r\n      deleteInfoResource: deleteInfoResource,\r\n      updateInfoResource: updateInfoResource,\r\n      getInfoItemList: getInfoItemList,\r\n      getResourceAreaLevel: getResourceAreaLevel,\r\n      getResourceUpdatePeriod: getResourceUpdatePeriod,\r\n      getResourceShareDeps: getResourceShareDeps,\r\n      addInfoItem: addInfoItem,\r\n      updateInfoItem: updateInfoItem,\r\n      deleteInfoItem: deleteInfoItem,\r\n      getItemUpdatePeriod: getItemUpdatePeriod,\r\n      checkResName: checkResName,\r\n      checkItemName: checkItemName,\r\n      uploadFile: uploadFile,\r\n      getInfoItemById: getInfoItemById\r\n    }\r\n  }\r\n]);\r\n\r\n\r\n\r\n/* Component */\r\nDInventory.service('Department.Inventory.Service.Component', ['$uibModal', '$state',\r\n  function($uibModal, $state) {\r\n    // prompt Alert\r\n    function popAlert(scope, info) {\r\n      scope.Alerts = [{\r\n        type: info.type,\r\n        message: info.message,\r\n        timeout: 1200\r\n      }];\r\n      scope.CloseAlert = function(index) {\r\n        scope.Alerts.splice(index, 1);\r\n      };\r\n    };\r\n    // prompt Modal\r\n    function popModal(scope, controller, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        backdrop: 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        controller: controller,\r\n        size: 'lg',\r\n        scope: scope\r\n      });\r\n      scope.Modal.confirm = function() {\r\n        console.log(scope.parent.itemNameExist);\r\n        if (scope.ResourceItem.shareFreqItemSelection.length == 0) {\r\n          scope.shareFreqEmpty = true;\r\n          return;\r\n        }\r\n        if (scope.parent.itemNameExist) {\r\n          return;\r\n        }\r\n        modalInstance.close(scope.Modal);\r\n      };\r\n      scope.Modal.cancel = function() {\r\n        modalInstance.dismiss();\r\n      };\r\n      return modalInstance;\r\n    };\r\n\r\n    return {\r\n      popAlert: popAlert,\r\n      popModal: popModal\r\n    }\r\n  }\r\n])\r\n","'use strict';\r\nvar Department = angular.module('Department', ['ui.router']);\r\n\r\n/** Main Controller */\r\nDepartment.controller('Department.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Service.Http', '$sce','$state',\r\n  function($cookies, $scope, $q, Http, $sce, $state) {\r\n    var LoginUser = JSON.parse($cookies.get('User'));\r\n    console.log(LoginUser);\r\n    var DEP_ID = LoginUser.dep_id;\r\n    var USERNAME = LoginUser.username;\r\n    var SHARE_FREQUENCY = 1;\r\n    var DATA_LEVEL = 2;\r\n    var SHARE_LEVEL = 3;\r\n    var SECRET_FLAG = 5;\r\n    var RESOURCE_FORMAT = 11;\r\n    var SOCIAL_OPEN_FLAG = 14;\r\n    var _httpParams = {};\r\n    _httpParams.limit = 10;\r\n    _httpParams.skip = 0;\r\n    var _httpConfirmParams = {};\r\n    _httpConfirmParams.limit = 10;\r\n    _httpConfirmParams.skip = 0;\r\n\r\n    // follow department\r\n    $scope.depSelect = {};\r\n    $scope.followDeptList = [];\r\n    $scope.parentObj = {};\r\n    function toFollowDep() {\r\n      $scope.depSelect.show = false;\r\n      $scope.followDeptList = $scope.parentObj.outputAllDeptList;\r\n      // send request to add follow department\r\n      var params = [];\r\n      _($scope.followDeptList).forEach(function(item) {\r\n        var followDep = {};\r\n        followDep.follow_dep_id = item.dep_id;\r\n        params.push(followDep);\r\n      });\r\n      Http.followDepts({\r\n        userdep: params\r\n      }).then(function(result) {\r\n\r\n      })\r\n    }\r\n\r\n    // init\r\n    getAuditList();\r\n\r\n    function getAuditList() {\r\n      $scope.mainAuditPromise = Http.getAuditList(_httpParams).then(function(result) {\r\n        $scope.toAuditList = result.data.body[0].results;\r\n        $scope.auditTotal = result.data.body[0].count;\r\n      });\r\n    }\r\n\r\n    // init\r\n    getDeptRequirementConfirmList();\r\n\r\n    function getDeptRequirementConfirmList() {\r\n      _httpConfirmParams.response_dep_id = DEP_ID;\r\n      console.log(_httpConfirmParams);\r\n      $scope.mainReqPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\r\n        $scope.requireToConfirmList = result.data.body[0].results;\r\n        $scope.reqTotal = result.data.body[0].count;\r\n      })\r\n    }\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SECRET_FLAG\r\n    }).then(function(result) {\r\n      $scope.secretFlagList = result.data.body;\r\n    });\r\n\r\n    // Get system dict\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_FREQUENCY\r\n    }).then(function(result) {\r\n      $scope.shareFrequencyList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_LEVEL\r\n    }).then(function(result) {\r\n      $scope.shareLevelList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': RESOURCE_FORMAT\r\n    }).then(function(result) {\r\n      $scope.resourceFormatList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': DATA_LEVEL\r\n    }).then(function(result) {\r\n      $scope.dataLevelList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SOCIAL_OPEN_FLAG\r\n    }).then(function(result) {\r\n      $scope.socialOpenList = result.data.body;\r\n    });\r\n\r\n    Http.getDepDataQuotaTotal().then(function(result) {\r\n      $scope.Count = result.data.body[0];\r\n    });\r\n\r\n    // go to audit list page\r\n    $scope.auditMore = function() {\r\n      $state.go(\"main.department.audit\", {}, {\r\n        reload: true\r\n      });\r\n    }\r\n\r\n    // go to requirement list page\r\n    $scope.reqMore = function() {\r\n      $state.go(\"main.department.requirementConfirm\", {}, {\r\n        reload: true\r\n      });\r\n    }\r\n\r\n    // 已关注部门列表\r\n    Http.getFollowDepList().then(function(result) {\r\n      $scope.parentObj.outputAllDeptList = result.data.body;\r\n      $scope.followDeptList = _.uniq($scope.parentObj.outputAllDeptList);\r\n      //console.log($scope.parentObj.outputAllDeptList);\r\n      Http.getDepartmentFollowList().then(function(result) {\r\n        $scope.parentObj.deptAllList = _.remove(result.data.body, function(item) {\r\n          return item.dep_id != DEP_ID;\r\n        });\r\n        $scope.parentObj.outputDeptList = [];\r\n\r\n        _($scope.parentObj.deptAllList).forEach(function(allItem) {\r\n          allItem.icon = '<img  src=styles/images/bureau/'+ allItem.dep_en_name +' />'\r\n          _($scope.parentObj.outputAllDeptList).forEach(function(outItem) {\r\n            if(allItem.dep_id == outItem.dep_id) {\r\n              allItem.ticked = true;\r\n              $scope.parentObj.outputDeptList.push(allItem);\r\n            }\r\n          })\r\n        });\r\n\r\n         $scope.$broadcast('someEvent', $scope.parentObj.outputDeptList);\r\n        // $scope.parentObj.deptAllList = _.pullAllWith($scope.parentObj.deptAllList, $scope.parentObj.outputAllDeptList,function(arrItem,othItem) {\r\n        //   return arrItem.dep_id == othItem.dep_id || DEP_ID == arrItem.dep_id;\r\n        // });\r\n        // console.log($scope.parentObj.deptAllList);\r\n      });\r\n    })\r\n\r\n    $scope.openFn = function() {\r\n      $scope.parentObj.outputAllDeptList = $scope.parentObj.outputDeptList;\r\n      console.log($scope.parentObj.outputAllDeptList);\r\n    }\r\n\r\n\r\n\r\n    $scope.followDep = function() {\r\n      toFollowDep();\r\n    }\r\n  }\r\n])\r\n\r\n\r\n/* HTTP */\r\nDepartment.factory('Department.Service.Http', ['$http', '$q', 'API',\r\n  function($http, $q, API) {\r\n    var path = API.path;\r\n\r\n    function getDepartmentFollowList() {\r\n      return $http.get(\r\n        path + '/follow_sys_dep'\r\n      )\r\n    }\r\n\r\n    function getDepDataQuotaTotal() {\r\n      return $http.get(\r\n        path + '/depquota/summary'\r\n      )\r\n    };\r\n\r\n    function getSystemDictByCatagory(params) {\r\n      return $http.get(\r\n        path + '/sys_dict', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function getAuditList(params) {\r\n      return $http.get(\r\n        path + '/depresource/wait_audit', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getDepartmentRequirementList(params) {\r\n      return $http.get(\r\n        path + '/data_requiement', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function getFollowDepList() {\r\n      return $http.get(\r\n        path + '/followed_user_dep'\r\n      )\r\n    }\r\n\r\n    function followDepts(params) {\r\n      return $http.post(\r\n        path + '/user_dep_batch', {\r\n          data: params\r\n        }\r\n      )\r\n    }\r\n    return {\r\n      getSystemDictByCatagory: getSystemDictByCatagory,\r\n      getAuditList: getAuditList,\r\n      getDepartmentRequirementList: getDepartmentRequirementList,\r\n      getDepartmentFollowList: getDepartmentFollowList,\r\n      getDepDataQuotaTotal: getDepDataQuotaTotal,\r\n      followDepts: followDepts,\r\n      getFollowDepList: getFollowDepList\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar DepartmentReq = angular.module('Department.Requirement', ['ui.router']);\r\n\r\n/** DepartmentReq Controller */\r\nDepartmentReq.controller('Department.Requirement.Controller.Main', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Component', 'Department.Requirement.Service.Http',\r\n  function($cookies, $scope, $stateParams, Component, Http) {\r\n    var LoginUser = JSON.parse($cookies.get('User'));\r\n    var DEP_ID = LoginUser.dep_id;\r\n    var USERNAME = LoginUser.username;\r\n    var SHARE_FREQUENCY = 1;\r\n    var DATA_LEVEL = 2;\r\n    $scope.DeptRequirement = {};\r\n\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n\r\n    var _httpParams = {};\r\n    _httpParams.limit = 10;\r\n    _httpParams.skip = 0;\r\n\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\r\n      getDeptRequirementList(_httpParams);\r\n    }\r\n\r\n    // init\r\n    getDeptRequirementList();\r\n\r\n    Http.getDepartmentList().then(function(result) {\r\n      $scope.deptList = result.data.body;\r\n      var evens = _.remove($scope.deptList, function(item) {\r\n        return item.id == DEP_ID;\r\n      });\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_FREQUENCY\r\n    }).then(function(result) {\r\n      $scope.shareFrequencyList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': DATA_LEVEL\r\n    }).then(function(result) {\r\n      $scope.dataLevelList = result.data.body;\r\n    });\r\n\r\n    function getDeptRequirementList() {\r\n      _httpParams.dep_id = DEP_ID;\r\n      _httpParams.username = USERNAME;\r\n      $scope.reqPromise = Http.getDepartmentRequirementList(_httpParams).then(function(result) {\r\n        $scope.requirementList = result.data.body[0].results;\r\n        $scope.Paging.totalItems = result.data.body[0].count;\r\n      })\r\n    }\r\n\r\n\r\n    $scope.toggleDataLevelReqSelection = function(item) {\r\n      var idx = $scope.dataLevelReqSelection.indexOf(item.id);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.dataLevelReqSelection.splice(idx, 1);\r\n      }\r\n\r\n      // is newly selected\r\n      else {\r\n        $scope.dataLevelReqSelection.push(item.id);\r\n      }\r\n    };\r\n\r\n\r\n    $scope.toggleShareFreqSelection = function(item) {\r\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.shareFreqSelection.splice(idx, 1);\r\n      }\r\n\r\n      // is newly selected\r\n      else {\r\n        $scope.shareFreqSelection.push(item.id);\r\n      }\r\n    };\r\n\r\n\r\n\r\n    $scope.publishReq = function() {\r\n      $scope.Modal = {};\r\n      $scope.Modal.DepRequirment = {};\r\n\r\n      var _httpPublishParams = {};\r\n      var dataRelationConfig = [];\r\n      $scope.reqParent = {};\r\n      $scope.reqParent.outputDeptList = [];\r\n\r\n      $scope.shareFreqSelection = [];\r\n      $scope.dataLevelReqSelection = [];\r\n\r\n      $scope.error = false;\r\n      $scope.submitted = false;\r\n\r\n      Component.popModal($scope, '发布', 'add-req-modal').result.then(function() {\r\n        _($scope.dataLevelReqSelection).forEach(function(value) {\r\n          var req_sys_dict = {};\r\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\r\n          req_sys_dict.sys_dict_id = value;\r\n          req_sys_dict.obj_type = 2;\r\n          dataRelationConfig.push(req_sys_dict);\r\n        });\r\n\r\n        _($scope.shareFreqSelection).forEach(function(value) {\r\n          var req_sys_dict = {};\r\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\r\n          req_sys_dict.sys_dict_id = value;\r\n          req_sys_dict.obj_type = 2;\r\n          dataRelationConfig.push(req_sys_dict);\r\n        });\r\n\r\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\r\n\r\n        console.log(res_dep_id);\r\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\r\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\r\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\r\n\r\n        Http.publishRequirement(_httpPublishParams).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('发布成功');\r\n          } else {\r\n            alert('发布失败');\r\n          }\r\n          getDeptRequirementList();\r\n        })\r\n      });\r\n    }\r\n\r\n    $scope.searchDeptReqByName = function() {\r\n      _httpParams.requiement_name = $scope.DeptRequirement.req_name_filter;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDeptRequirementList();\r\n    }\r\n\r\n\r\n    // delete requirement\r\n    $scope.deleteReq = function(id) {\r\n      var deleteFlag = confirm('确定删除本条需求？删除后将不可恢复。');\r\n      if (deleteFlag) {\r\n        Http.deleteRequirement({\r\n          requiement_id: id\r\n        }).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('删除成功！');\r\n            getDeptRequirementList();\r\n          } else {\r\n            alert('删除失败！');\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // update requirement\r\n    $scope.updateReq = function(item) {\r\n      $scope.Modal = {};\r\n      $scope.Modal.DepRequirment = item;\r\n\r\n      var _httpPublishParams = {};\r\n      var dataRelationConfig = [];\r\n\r\n      $scope.reqParent = {};\r\n      $scope.reqParent.outputDeptList = [];\r\n\r\n      $scope.shareFreqSelection = [];\r\n      $scope.dataLevelReqSelection = [];\r\n\r\n      _($scope.deptList).forEach(function(outItem) {\r\n        if (item.response_dep_id == outItem.id) {\r\n          outItem.ticked = true;\r\n          $scope.reqParent.outputDeptList.push(outItem);\r\n        }\r\n      })\r\n\r\n      // 获取需求对应的共享频率数据\r\n      Http.getReqUpdatePeriod({\r\n        requiement_id: item.id\r\n      }).then(function(res) {\r\n        $scope.shareFreqSelection = res.data.body[0].id;\r\n      })\r\n\r\n      // 获取需求对应的分地区数据级别\r\n      Http.getReqAreaLevel({\r\n        requiement_id: item.id\r\n      }).then(function(res) {\r\n        $scope.dataLevelReqSelection = res.data.body[0].id;\r\n      })\r\n\r\n      $scope.error = false;\r\n      Component.popModal($scope, '修改', 'add-req-modal').result.then(function() {\r\n        _($scope.dataLevelReqSelection).forEach(function(value) {\r\n          var req_sys_dict = {};\r\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.id;\r\n          req_sys_dict.sys_dict_id = value;\r\n          req_sys_dict.obj_type = 2;\r\n          dataRelationConfig.push(req_sys_dict);\r\n        });\r\n\r\n        _($scope.shareFreqSelection).forEach(function(value) {\r\n          var req_sys_dict = {};\r\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.id;\r\n          req_sys_dict.sys_dict_id = value;\r\n          req_sys_dict.obj_type = 2;\r\n          dataRelationConfig.push(req_sys_dict);\r\n        });\r\n\r\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\r\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\r\n\r\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\r\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\r\n\r\n        Http.updateRequirementInfo(_httpPublishParams).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('修改成功');\r\n          } else {\r\n            alert('修改失败');\r\n          }\r\n          getDeptRequirementList();\r\n        })\r\n      });\r\n    }\r\n\r\n    // 根据确认状态过滤\r\n    $scope.filterByConfirmStatus = function(status) {\r\n      _httpParams.requiement_status = status;\r\n      getDeptRequirementList();\r\n    }\r\n\r\n\r\n\r\n  }\r\n])\r\n\r\n\r\n/** DepartmentReq Controller */\r\nDepartmentReq.controller('Department.Requirement.Controller.confirm', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\r\n  function($cookies, $scope, $stateParams, Http, Component) {\r\n    var RESOURCE_FORMAT = 11;\r\n    $scope.closeShow = false;\r\n    $scope.showIndex = -1;\r\n\r\n    $scope.resParent = {};\r\n    $scope.resParent.dropListShow = false;\r\n\r\n    $scope.Modal = {};\r\n    $scope.DeptRequirementConfirm = {};\r\n\r\n    var LoginUser = JSON.parse($cookies.get('User'));\r\n    var DEP_ID = LoginUser.dep_id;\r\n    var USERNAME = LoginUser.username;\r\n    $scope.DeptRequirement = {};\r\n\r\n    $scope.Paging = {};\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n    $scope.Paging.currentPage = 1;\r\n\r\n    // 模态框信息资源列表分页\r\n    $scope.ModalPaging = {};\r\n    $scope.ModalPaging.currentPage = 1;\r\n    $scope.ModalPaging.maxSize = 5;\r\n    $scope.ModalPaging.itemsPerPage = 10;\r\n\r\n\r\n    var _httpConfirmParams = {};\r\n    _httpConfirmParams.limit = 10;\r\n    _httpConfirmParams.skip = 0;\r\n\r\n    var _httpModalParams = {};\r\n    _httpModalParams.limit = 10;\r\n    _httpModalParams.skip = 0;\r\n\r\n    $scope.checkedResourceName = '';\r\n\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpConfirmParams.skip = ($scope.Paging.currentPage - 1) * _httpConfirmParams.limit;\r\n      getDeptRequirementConfirmList(_httpConfirmParams);\r\n    }\r\n\r\n    // 模态框中信息资源分页\r\n    $scope.ModalPaging.pageChanged = function() {\r\n      _httpModalParams.skip = ($scope.ModalPaging.currentPage - 1) * _httpModalParams.limit;\r\n      Http.getDeptInfoResourceList(_httpModalParams).then(function(result) {\r\n        console.log(result);\r\n        $scope.depInfoResourceList = result.data.body[0].results;\r\n        $scope.ModalPaging.totalItems = result.data.body[0].count;\r\n      });\r\n    }\r\n\r\n    // init\r\n    getDeptRequirementConfirmList();\r\n    getDeptInfoResourceList();\r\n\r\n    function getDeptRequirementConfirmList() {\r\n      _httpConfirmParams.response_dep_id = DEP_ID;\r\n      $scope.reqConfirmPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\r\n        $scope.requirementConfirmList = result.data.body[0].results;\r\n        $scope.Paging.totalItems = result.data.body[0].count;\r\n      })\r\n    }\r\n\r\n    function getDeptInfoResourceList() {\r\n      Http.getDeptInfoResourceList(_httpModalParams).then(function(result) {\r\n        console.log(result);\r\n        if (200 == result.data.head.status) {\r\n          $scope.depInfoResourceList = result.data.body[0].results;\r\n          $scope.ModalPaging.totalItems = result.data.body[0].count;\r\n        }\r\n        else{\r\n          $scope.depInfoResourceList = [];\r\n        }\r\n      });\r\n    }\r\n\r\n    $scope.searchDeptReqConfirmByName = function() {\r\n      _httpConfirmParams.requiement_name = $scope.DeptRequirementConfirm.req_name_filter;\r\n      _httpConfirmParams.limit = 10;\r\n      _httpConfirmParams.skip = 0;\r\n      getDeptRequirementConfirmList();\r\n    }\r\n\r\n    // 获取信息资源格式字典\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': RESOURCE_FORMAT\r\n    }).then(function(result) {\r\n      $scope.resourceFormatList = result.data.body;\r\n    });\r\n\r\n    // 隐藏或显示资源列表\r\n    $scope.togglResourceList = function() {\r\n      if($scope.resParent.dropListShow) {\r\n        $scope.resParent.dropListShow = false;\r\n      }\r\n      else {\r\n        $scope.resParent.dropListShow = true;\r\n      }\r\n    }\r\n\r\n    // filter by resource format\r\n    $scope.resFormatMainSelection = [];\r\n    $scope.getInfoResourceByResFormat = function(item) {\r\n      var idx = $scope.resFormatMainSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.resFormatMainSelection = [];\r\n      } else {\r\n        $scope.resFormatMainSelection = item.id;\r\n      }\r\n      _httpModalParams.resource_format = $scope.resFormatMainSelection;\r\n      _httpModalParams.limit = 10;\r\n      _httpModalParams.skip = 0;\r\n      getDeptInfoResourceList(_httpModalParams);\r\n    }\r\n\r\n    // resource format all\r\n    $scope.getResFormatAll = function() {\r\n      $scope.resFormatMainSelection = [];\r\n      _httpModalParams.resource_format = null;\r\n      _httpModalParams.limit = 10;\r\n      _httpModalParams.skip = 0;\r\n      getDeptInfoResourceList(_httpModalParams);\r\n    }\r\n\r\n    // 点击展开\r\n    $scope.openItems = function(index, resourceId) {\r\n      $scope.collapseIndex = index;\r\n      $scope.closeShow = true;\r\n      $scope.showIndex = index;\r\n      $scope.InfoItems = [];\r\n      Http.getInfoItemList({\r\n        resource_id: resourceId\r\n      }).then(function(result) {\r\n        if (result.data.body.length == 0) {\r\n          $scope.InfoItemShow = false;\r\n        } else {\r\n          $scope.InfoItemShow = true;\r\n          $scope.InfoItems = result.data.body;\r\n\r\n          _($scope.InfoItems).forEach(function(item) {\r\n            var shareFreqDictName = [];\r\n            _(item.config).forEach(function(config) {\r\n              shareFreqDictName.push(config.dict_name);\r\n            })\r\n            item.update_period_name = shareFreqDictName.toString();\r\n          })\r\n        }\r\n\r\n\r\n      })\r\n    }\r\n\r\n    // 点击收起\r\n    $scope.closeItems = function(index) {\r\n      $scope.collapseIndex = -1;\r\n      $scope.closeShow = false;\r\n      $scope.InfoItems = [];\r\n    }\r\n\r\n    // 选中信息资源\r\n    $scope.resourceSelection = [];\r\n    $scope.toggleResourceSelection = function(resourceId, resource_name) {\r\n      var idx = $scope.resourceSelection.indexOf(resourceId);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.resourceSelection = [];\r\n        $scope.checkedResourceName = '';\r\n      }\r\n\r\n      // is newly selected\r\n      else {\r\n        $scope.resourceSelection = resourceId;\r\n        $scope.resource_id = resourceId;\r\n        $scope.resourceItemSelection = []; //清空信息项\r\n        $scope.checkedResourceName = '已选中资源 \"' + resource_name + '\"';\r\n      }\r\n      console.log($scope.resourceItemSelection);\r\n    };\r\n\r\n    // 选中信息项checkbox事件\r\n    $scope.resourceItemSelection = [];\r\n    $scope.toggleResItemSelection = function(resourceId, item, resource_name) {\r\n      if($scope.resource_id != resourceId) {\r\n        $scope.resourceItemSelection = [];\r\n        $scope.resource_id = resourceId;\r\n      }\r\n      var idx = $scope.resourceItemSelection.indexOf(item.id);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.resourceItemSelection.splice(idx, 1);\r\n        var selLength = $scope.resourceItemSelection.length;\r\n        console.log(selLength);\r\n        if(selLength == 0) {\r\n          $scope.checkedResourceName = '';\r\n        }\r\n        else {\r\n          $scope.checkedResourceName = '已选中资源 \"' + resource_name + '\"下的' + selLength +'条信息项';\r\n        }\r\n      }\r\n\r\n      // is newly selected\r\n      else {\r\n        $scope.resourceItemSelection.push(item.id);\r\n        var selLength = $scope.resourceItemSelection.length;\r\n        $scope.checkedResourceName = '已选中资源 \"' + resource_name + '\"下的' + selLength +'条信息项';\r\n        $scope.resourceSelection = [];// 清空信息资源选中项\r\n      }\r\n      console.log($scope.resourceItemSelection);\r\n    };\r\n\r\n    // 保存选中的信息资源或信息项\r\n    $scope.saveChooseResource = function() {\r\n      console.log($scope.resourceItemSelection);\r\n      console.log($scope.resourceSelection);\r\n      if($scope.resourceItemSelection.length == 0 && $scope.resourceSelection.length == 0) {\r\n        $scope.errorMsg = '您未选中任何资源。';\r\n      }\r\n      else{\r\n        $scope.resParent.dropListShow = false;\r\n        $scope.errorMsg = '';\r\n      }\r\n    }\r\n\r\n    $scope.toConfirm = function(item) {\r\n      // get requirement detail\r\n      $scope.Modal.ReqDetail = item;\r\n      // 初始化选项状态\r\n      $scope.Modal.ReqResponse = {};\r\n      $scope.resourceItemSelection = [];\r\n      $scope.resourceSelection = [];\r\n      $scope.resource_id = null;\r\n      $scope.closeShow = false;\r\n      $scope.showIndex = -1;\r\n      $scope.collapseIndex = -1;\r\n\r\n      if ($scope.depInfoResourceList.length == 0) {\r\n        $scope.Modal.ReqResponse.resource_id = '';\r\n        $scope.errorMsg = '本部门还未发布任何信息资源';\r\n        $scope.dataQuotaIdNull = true;\r\n      }\r\n      // else{\r\n      //   $scope.Modal.ReqResponse.resource_id = _.map($scope.outputResource,'id');\r\n      // }\r\n\r\n      Component.popModalConfirm($scope, '', 'confirm-req-modal').result.then(function() {\r\n        $scope.Modal.ReqResponse.resource_id = $scope.resource_id;\r\n\r\n        console.log($scope.Modal.ReqResponse);\r\n        console.log($scope.resourceItemSelection);\r\n        $scope.Modal.ReqResponse.requiement_id = item.id;\r\n\r\n        Http.updateRequirement($scope.Modal.ReqResponse).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            if ($scope.Modal.ReqResponse.status == 1) {\r\n              var http_params = [];\r\n              if($scope.resourceItemSelection.length == 0) {\r\n                var obj = {};\r\n                obj.requiement_id = item.id;\r\n                obj.resource_id = $scope.Modal.ReqResponse.resource_id,\r\n                obj.item_id = '';\r\n                http_params.push(obj);\r\n              }\r\n              else{\r\n                _($scope.resourceItemSelection).forEach(function(value) {\r\n                  var obj = {};\r\n                  obj.requiement_id = item.id;\r\n                  obj.resource_id = $scope.Modal.ReqResponse.resource_id,\r\n                  obj.item_id = value;\r\n                  http_params.push(obj);\r\n                });\r\n              }\r\n              // 保存需求响应\r\n              Http.saveReqResponse(http_params).then(function(saveResult) {\r\n                if (200 == saveResult.data.head.status) {\r\n                  alert('保存成功！');\r\n                  getDeptRequirementConfirmList();\r\n                } else {\r\n                  alert('保存失败！');\r\n                  getDeptRequirementConfirmList();\r\n                }\r\n              })\r\n            } else {\r\n              alert('保存成功！');\r\n              getDeptRequirementConfirmList();\r\n            }\r\n\r\n          } else {\r\n            alert('保存失败');\r\n          }\r\n        })\r\n      });\r\n    }\r\n\r\n    // 根据确认状态过滤\r\n    $scope.filterByConfirmStatus = function(status) {\r\n      _httpConfirmParams.requiement_status = status;\r\n      getDeptRequirementConfirmList();\r\n    }\r\n\r\n  }\r\n])\r\n\r\n/** DepartmentReq Controller */\r\nDepartmentReq.controller('Department.Requirement.Controller.detail', ['$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\r\n    function($scope, $stateParams, Http, Component) {\r\n      console.log($stateParams.ID);\r\n      $scope.InfoItemShow = false;\r\n      $scope.InfoResourceShow = false;\r\n      Http.getReqDetail({\r\n        requiement_id: $stateParams.ID\r\n      }).then(function(result) {\r\n        console.log(result.data.body[0]);\r\n        $scope.ReqDetail = result.data.body[0];\r\n        if($scope.ReqDetail.resource_id) {\r\n          // 查询需求对应的资源\r\n          Http.getDepartInfoResList({\r\n            resource_id: $scope.ReqDetail.resource_id\r\n          }).then(function(ResourceRes) {\r\n            $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\r\n            if($scope.InfoResourceDetail) {\r\n              $scope.InfoResourceShow = true;\r\n            }\r\n          })\r\n\r\n          // 查询需求对应的信息项\r\n          Http.getReqResourceItemList({\r\n            resource_id: $scope.ReqDetail.resource_id,\r\n            requiement_id: $stateParams.ID\r\n          }).then(function(ResItems) {\r\n            if (ResItems.data.body.length == 0) {\r\n              $scope.InfoItemShow = false;\r\n            } else {\r\n              $scope.InfoItemShow = true;\r\n              $scope.InfoItems = ResItems.data.body;\r\n              _($scope.InfoItems).forEach(function(item) {\r\n                var shareFreqDictName = [];\r\n                _(item.config).forEach(function(config) {\r\n                  shareFreqDictName.push(config.dict_name);\r\n                })\r\n                item.update_period_name = shareFreqDictName.toString();\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n\r\n\r\n    }\r\n  ])\r\n  /* HTTP Factory */\r\nDepartmentReq.factory('Department.Requirement.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n\r\n    function getDepartmentRequirementList(params) {\r\n      return $http.get(\r\n        path + '/data_requiement', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function publishRequirement(data) {\r\n      return $http.post(\r\n        path + '/data_requiement', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    // 需求确认修改状态\r\n    function updateRequirement(data) {\r\n      return $http.put(\r\n        path + '/data_requiement_ok', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    // 修改需求信息\r\n    function updateRequirementInfo(data) {\r\n      return $http.put(\r\n        path + '/data_requiement', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    function saveReqResponse(data) {\r\n      return $http.post(\r\n        path + '/data_requiement_response', {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    function getDeptInfoResourceList(params) {\r\n      return $http.get(\r\n        path + '/dep_resource_list', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getReqDetail(params) {\r\n      return $http.get(\r\n        path + '/data_requiement_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getResponseList(params) {\r\n      return $http.get(\r\n        path + '/requirement/requireResponseList', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getDepartmentList() {\r\n      return $http.get(\r\n        path + '/sys_dep'\r\n      )\r\n    }\r\n\r\n    function deleteRequirement(id) {\r\n      return $http.delete(\r\n        path + '/data_requiement', {\r\n          data: id\r\n        }\r\n      )\r\n    }\r\n\r\n    function getSystemDictByCatagory(params) {\r\n      return $http.get(\r\n        path + '/sys_dict', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n\r\n    function getReqUpdatePeriod(params) {\r\n      return $http.get(\r\n        path + '/requiement_update_period', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getReqAreaLevel(params) {\r\n      return $http.get(\r\n        path + '/requiement_area_level', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    function getInfoItemList(params) {\r\n      return $http.get(\r\n        path + '/allitem_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    function getDepartInfoResList(params) {\r\n      return $http.get(\r\n        path + '/info_resource_list', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    function getReqResourceItemList(params) {\r\n      return $http.get(\r\n        path + '/reqResourceItem', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n\r\n    return {\r\n      getDepartmentRequirementList: getDepartmentRequirementList,\r\n      publishRequirement: publishRequirement,\r\n      getReqDetail: getReqDetail,\r\n      getResponseList: getResponseList,\r\n      updateRequirement: updateRequirement,\r\n      updateRequirementInfo: updateRequirementInfo,\r\n      saveReqResponse: saveReqResponse,\r\n      getDeptInfoResourceList: getDeptInfoResourceList,\r\n      getDepartmentList: getDepartmentList,\r\n      deleteRequirement: deleteRequirement,\r\n      getSystemDictByCatagory: getSystemDictByCatagory,\r\n      getReqUpdatePeriod: getReqUpdatePeriod,\r\n      getReqAreaLevel: getReqAreaLevel,\r\n      getInfoItemList: getInfoItemList,\r\n      getDepartInfoResList: getDepartInfoResList,\r\n      getReqResourceItemList: getReqResourceItemList\r\n    }\r\n  }\r\n]);\r\n\r\n\r\n/* Component */\r\nDepartmentReq.service('Department.Requirement.Service.Component', ['$uibModal',\r\n  function($uibModal) {\r\n    // prompt Alert\r\n    function popAlert(scope, info) {\r\n      scope.Alerts = [{\r\n        type: info.type,\r\n        message: info.message,\r\n        timeout: 1200\r\n      }];\r\n      scope.CloseAlert = function(index) {\r\n        scope.Alerts.splice(index, 1);\r\n      };\r\n    };\r\n    // prompt Modal for confirm\r\n    function popModalConfirm(scope, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstanceConfirm = $uibModal.open({\r\n        animation: true,\r\n        backdrop: 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        scope: scope,\r\n        size: 'lg'\r\n      });\r\n      scope.Modal.confirm = function(isValid) {\r\n        console.log(scope);\r\n        if (scope.resourceSelection.length == 0 && scope.resourceItemSelection.length == 0 && scope.Modal.ReqResponse.status == 1) {\r\n          scope.errorMsg = '请选择信息资源！';\r\n          isValid = false;\r\n        }\r\n        else {\r\n          scope.errorMsg = '';\r\n        }\r\n        if (isValid) {\r\n          modalInstanceConfirm.close(scope.Modal);\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      };\r\n      scope.Modal.cancel = function() {\r\n        modalInstanceConfirm.dismiss();\r\n      };\r\n      return modalInstanceConfirm;\r\n    };\r\n    // prompt Modal\r\n    function popModal(scope, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        backdrop: 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        scope: scope,\r\n        size: 'lg'\r\n      });\r\n      scope.Modal.confirm = function(isValid) {\r\n        console.log(scope);\r\n        scope.submitted = true;\r\n        if (scope.reqParent.outputDeptList.length == 0) {\r\n          scope.error = true;\r\n        } else if (scope.shareFreqSelection.length == 0) {} else {\r\n          modalInstance.close(scope.Modal);\r\n        }\r\n\r\n      };\r\n      scope.Modal.cancel = function() {\r\n        modalInstance.dismiss();\r\n      };\r\n      return modalInstance;\r\n    };\r\n\r\n    return {\r\n      popAlert: popAlert,\r\n      popModal: popModal,\r\n      popModalConfirm: popModalConfirm\r\n    }\r\n  }\r\n])\r\n","'use strict';\r\nvar DepartmentShare = angular.module('DepartmentShare', ['ui.router']);\r\n\r\n/** InventoryDetail Controller */\r\nDepartmentShare.controller('DepartmentShare.Controller.Main', [ '$scope', 'DepartmentShare.Service.Http',\r\n  function( $scope, Http) {\r\n    $scope.DepartInfoResource = {};\r\n\r\n    $scope.Paging = {};\r\n    $scope.Paging.currentPage = 1;\r\n    $scope.Paging.maxSize = 5;\r\n    $scope.Paging.itemsPerPage = 10;\r\n\r\n    var _httpParams = {};\r\n    _httpParams.limit = 10;\r\n    _httpParams.skip = 0;\r\n\r\n    $scope.Paging.pageChanged = function() {\r\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    function getDepartmentShareList(_httpParams) {\r\n      $scope.sharePromise = Http.shareInfoResourceList(_httpParams).then(function(result) {\r\n        $scope.depShareList = result.data.body[0].results;\r\n        $scope.resourceCount = result.data.body[0].count[0].resource_count;\r\n        $scope.Paging.totalItems = result.data.body[0].count[0].resource_count;\r\n      });\r\n    }\r\n\r\n    //init\r\n    getDepartmentShareList(_httpParams);\r\n\r\n    // resource format all\r\n    $scope.getResFormatAll = function() {\r\n      $scope.resFormatMainSelection = [];\r\n      _httpParams.re_format = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // share level all\r\n    $scope.getShareLevelAll = function() {\r\n      $scope.shareLvMainSelection = [];\r\n      _httpParams.share_level = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // social open all\r\n    $scope.getSocialOpenAll = function() {\r\n      $scope.socialOpenMainSelection = [];\r\n      _httpParams.social_open_flag = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // share frequency all\r\n    $scope.getShareFreqAll = function() {\r\n      $scope.shareFreqSelection = [];\r\n      _httpParams.update_period = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // secret flag all\r\n    $scope.getSecretFlagAll = function() {\r\n      $scope.secretFlagMainSelection = [];\r\n      _httpParams.issecret = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // filter by resource format\r\n    $scope.resFormatMainSelection = [];\r\n    $scope.getInfoResourceByResFormat = function(item) {\r\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.resFormatMainSelection = [];\r\n      } else {\r\n        $scope.resFormatMainSelection = item.id;\r\n      }\r\n      _httpParams.re_format = $scope.resFormatMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // filter by share frequency\r\n    $scope.shareFreqSelection = [];\r\n    $scope.getInfoResourceListBySF = function(item) {\r\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.shareFreqSelection.splice(idx, 1);\r\n      } else {\r\n        $scope.shareFreqSelection.push(item.id);\r\n      }\r\n      _httpParams.update_period = $scope.shareFreqSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // filter by share level\r\n    $scope.shareLvMainSelection = [];\r\n    $scope.getInfoResourceListBySl = function(item) {\r\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.shareLvMainSelection = [];\r\n      } else {\r\n        $scope.shareLvMainSelection = item.id;\r\n      }\r\n      _httpParams.share_level = $scope.shareLvMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // filter by social open flag\r\n    $scope.socialOpenMainSelection = [];\r\n    $scope.getInfoResourceListBySO = function(item) {\r\n      var idx = $scope.socialOpenMainSelection.indexOf(item.dict_code);\r\n      if (idx > -1) {\r\n        $scope.socialOpenMainSelection = [];\r\n      } else {\r\n        $scope.socialOpenMainSelection = item.dict_code;\r\n      }\r\n      _httpParams.social_open_flag = $scope.socialOpenMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // filter by secret flag\r\n    $scope.secretFlagMainSelection = [];\r\n    $scope.getInfoResourceListBySecFlag = function(item) {\r\n      var idx = $scope.secretFlagMainSelection.indexOf(item.id);\r\n      if (idx > -1) {\r\n        $scope.secretFlagMainSelection = [];\r\n      } else {\r\n        $scope.secretFlagMainSelection = item.id;\r\n      }\r\n      _httpParams.issecret = $scope.secretFlagMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n\r\n    // get spatial all\r\n    $scope.getSpatialAll = function() {\r\n      $scope.areaMainSelection = [];\r\n      _httpParams.area_level = null;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // filter by partial\r\n    $scope.areaMainSelection = [];\r\n    $scope.getInfoResourceListByAP = function(item) {\r\n      var idx = $scope.areaMainSelection.indexOf(item.id);\r\n      // is currently selected\r\n      if (idx > -1) {\r\n        $scope.areaMainSelection.splice(idx, 1);\r\n      }\r\n      // is newly selected\r\n      else {\r\n        $scope.areaMainSelection.push(item.id);\r\n      }\r\n\r\n      _httpParams.area_level = $scope.areaMainSelection;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    // search by name\r\n    $scope.searchDeptInfoResourceByName = function() {\r\n      _httpParams.resource_name = $scope.DepartInfoResource.resource_name_filter;\r\n      _httpParams.limit = 10;\r\n      _httpParams.skip = 0;\r\n      getDepartmentShareList(_httpParams);\r\n    }\r\n\r\n    var SHARE_FREQUENCY = 1;\r\n    var DATA_LEVEL = 2;\r\n    var SHARE_LEVEL = 3;\r\n    var SECRET_FLAG = 5;\r\n    var RESOURCE_FORMAT = 11;\r\n    var SOCIAL_OPEN_FLAG = 14;\r\n    // Get system dict\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SECRET_FLAG\r\n    }).then(function(result) {\r\n      $scope.secretFlagList = result.data.body;\r\n    });\r\n\r\n    // Get system dict\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_FREQUENCY\r\n    }).then(function(result) {\r\n      $scope.shareFrequencyList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SHARE_LEVEL\r\n    }).then(function(result) {\r\n      $scope.shareLevelList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': RESOURCE_FORMAT\r\n    }).then(function(result) {\r\n      $scope.resourceFormatList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': DATA_LEVEL\r\n    }).then(function(result) {\r\n      $scope.dataLevelList = result.data.body;\r\n    });\r\n\r\n    Http.getSystemDictByCatagory({\r\n      'dict_category': SOCIAL_OPEN_FLAG\r\n    }).then(function(result) {\r\n      $scope.socialOpenList = result.data.body;\r\n    });\r\n\r\n  }\r\n])\r\n\r\n\r\n// Department share detail controller\r\nDepartmentShare.controller('DepartmentShare.Controller.detail', [ '$scope', 'DepartmentShare.Service.Http', '$stateParams',\r\n  function( $scope, Http, $stateParams) {\r\n    $scope.InfoItemShow = false;\r\n    Http.shareInfoResourceList({\r\n      resource_id : $stateParams.item\r\n    }).then(function(ResourceRes) {\r\n      $scope.InfoResourceDetail = ResourceRes.data.body[0].results[0];\r\n      Http.getInfoItemList({\r\n        resource_id: $scope.InfoResourceDetail.id\r\n      }).then(function(result) {\r\n        if (result.data.body.length == 0) {\r\n          $scope.InfoItemShow = false;\r\n        } else {\r\n          $scope.InfoItemShow = true;\r\n          $scope.InfoItems = result.data.body;\r\n\r\n          _($scope.InfoItems).forEach(function(item) {\r\n            var shareFreqDictName = [];\r\n            _(item.config).forEach(function(config) {\r\n              shareFreqDictName.push(config.dict_name);\r\n            })\r\n            item.update_period_name = shareFreqDictName.toString();\r\n          })\r\n        }\r\n\r\n\r\n      })\r\n    })\r\n\r\n\r\n  }\r\n])\r\n\r\n/* HTTP Factory */\r\nDepartmentShare.factory('DepartmentShare.Service.Http', ['$http', 'API',\r\n  function($http, API) {\r\n    var path = API.path;\r\n\r\n    function shareInfoResourceList(params) {\r\n      return $http.get(\r\n        path + '/share_list', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n    function getQuotaDetail(params) {\r\n      return $http.get(\r\n        path + '/data_quota_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n    function followDepartment(id) {\r\n      return $http.post(\r\n        path + '/user_dep', {\r\n          data: id\r\n        }\r\n      )\r\n    };\r\n    function getSystemDictByCatagory(params) {\r\n      return $http.get(\r\n        path + '/sys_dict', {\r\n          params: params\r\n        }\r\n      )\r\n    };\r\n    function cancelFollowDepartment(id) {\r\n      return $http.delete(\r\n        path + '/user_dep', {\r\n          data: id\r\n        }\r\n      )\r\n    };\r\n\r\n    function getInfoItemList(params) {\r\n      return $http.get(\r\n        path + '/allitem_detail', {\r\n          params: params\r\n        }\r\n      )\r\n    }\r\n    return {\r\n      getSystemDictByCatagory: getSystemDictByCatagory,\r\n      shareInfoResourceList: shareInfoResourceList,\r\n      getQuotaDetail: getQuotaDetail,\r\n      followDepartment: followDepartment,\r\n      cancelFollowDepartment: cancelFollowDepartment,\r\n      getInfoItemList: getInfoItemList\r\n    }\r\n  }\r\n]);\r\n","'use strict';\r\nvar SystemUser = angular.module('Department.SystemUser', ['ui.router']);\r\n\r\n/** Main Controller */\r\nSystemUser.controller('Department.SystemUser.Controller.Main', ['$scope', '$q', 'Department.SystemUser.Service.Http', 'Department.SystemUser.Service.Component', '$uibModal',\r\n  function($scope, $q, Http, Component, $uibModal) {\r\n    $scope.Modal = {}; // Clean scope of modal\r\n    $scope.deptList = [];\r\n\r\n    function getUserList() {\r\n      Http.getUserList().then(function(result) {\r\n        $scope.users = result.data.body;\r\n        $scope.DepUserTotal =result.data.head.total;\r\n      });\r\n    }\r\n    // Http.getDepartmentList().then(function(result) {\r\n    //   $scope.deptList = result.data.body;\r\n    // });\r\n\r\n    // init\r\n    getUserList();\r\n\r\n    // add user\r\n    $scope.addUserModal = function() {\r\n      $scope.Modal = {}; // Clean scope of modal\r\n      $scope.sysUser = {}; // Clean scope of modal\r\n\r\n      Component.popModal($scope, '添加', 'add-user-modal').result.then(function() {\r\n        Http.saveUser($scope.sysUser).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('添加成功');\r\n            getUserList();\r\n          }\r\n          else{\r\n            alert('添加失败');\r\n          }\r\n        })\r\n      });\r\n\r\n    }\r\n\r\n    $scope.searchUser = function(){\r\n      var username= $scope.username;\r\n      alert(username);\r\n      // http.getUser({\r\n      //   USERNAME: username,\r\n      // })then(function(result) {\r\n      //   if(200 == result.data.head.status){\r\n      //     $scope.users = result.data.body;\r\n      //     $scope.DepUserTotal =result.data.head.total;\r\n      //   }else {\r\n      //     alert(\"输入错误，请\");\r\n      //   }\r\n      //\r\n      // });\r\n    }\r\n\r\n    $scope.updateUser = function(user) {\r\n      user.DEP_NAME = null;\r\n      $scope.sysUser = user;\r\n      Component.popModal($scope, '修改', 'add-user-modal').result.then(function() {\r\n        Http.updateUser($scope.sysUser).then(function(result) {\r\n          if (200 == result.data.head.status) {\r\n            alert('修改成功');\r\n            getUserList();\r\n          }\r\n          else{\r\n            alert('修改失败');\r\n          }\r\n        })\r\n      });\r\n    }\r\n\r\n    $scope.deleteUser = function(user) {\r\n      console.log(user);\r\n      var fig = confirm(\"确定要删除吗？\");\r\n      if (fig) {\r\n        Http.deleteUser(user).then(function(result) {\r\n          console.log(result.data);\r\n          if (200 == result.data.head.status) {\r\n            alert('删除成功');\r\n            getUserList();\r\n          }\r\n          else{\r\n            alert('删除失败！');\r\n          }\r\n          getUserList();\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n])\r\n\r\n\r\n/* HTTP */\r\nSystemUser.factory('Department.SystemUser.Service.Http', ['$http', '$q', 'API',\r\n  function($http, $q, API) {\r\n    var path = API.path;\r\n\r\n    function getUserList() {\r\n      return $http.get(\r\n        path + '/user'\r\n      )\r\n    };\r\n    function getUser(params) {\r\n      return $http.get(\r\n        path + '/user', {\r\n          params: params\r\n        }\r\n\r\n      )\r\n    };\r\n\r\n    function saveUser(data) {\r\n      return $http.post(\r\n        path + '/user', {\r\n          data: data\r\n        }\r\n      )\r\n    };\r\n\r\n    function getDepartmentList() {\r\n      return $http.get(\r\n        path + '/dep/'\r\n      )\r\n    }\r\n\r\n    function updateUser(data) {\r\n      return $http.put(\r\n        path + '/user/' , {\r\n          data: data\r\n        }\r\n      )\r\n    }\r\n\r\n    function deleteUser(data) {\r\n      return $http.delete(\r\n        path + '/user', {\r\n            data: {\"ID\":data.ID}\r\n        }\r\n      )\r\n    }\r\n    return {\r\n      getUserList: getUserList,\r\n      saveUser: saveUser,\r\n      getDepartmentList: getDepartmentList,\r\n      updateUser: updateUser,\r\n      deleteUser: deleteUser,\r\n      getUser:getUser\r\n    }\r\n  }\r\n]);\r\n\r\n/* Component */\r\nSystemUser.service('Department.SystemUser.Service.Component', ['$uibModal',\r\n  function($uibModal) {\r\n    // prompt Alert\r\n    function popAlert(scope, info) {\r\n      scope.Alerts = [{\r\n        type: info.type,\r\n        message: info.message,\r\n        timeout: 1200\r\n      }];\r\n      scope.CloseAlert = function(index) {\r\n        scope.Alerts.splice(index, 1);\r\n      };\r\n    };\r\n    // prompt Modal\r\n    function popModal(scope, type, templateUrl) {\r\n      scope.Modal.type = type;\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        backdrop : 'static',\r\n        templateUrl: templateUrl + '.html',\r\n        scope: scope\r\n      });\r\n      scope.Modal.confirm = function(isValid) {\r\n        if (isValid) {\r\n          modalInstance.close(scope.Modal);\r\n        }\r\n\r\n      };\r\n      scope.Modal.cancel = function() {\r\n        modalInstance.dismiss();\r\n      };\r\n      return modalInstance;\r\n    };\r\n\r\n    return {\r\n      popAlert: popAlert,\r\n      popModal: popModal\r\n    }\r\n  }\r\n])\r\n"],"sourceRoot":"/source/"}