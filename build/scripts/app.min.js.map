{"version":3,"sources":["app.js","config.js","admin/department.js","admin/main.js","admin/user.js","common/dashboard.js","common/login.js","common/main.js","data-quota/detail.js","data-quota/list.js","data-quota/main.js","department/audit.js","department/inventory.js","department/main.js","department/requirement.js","department/share.js","department/user.js"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","$provide","html5Mode","enabled","interceptors","push","$q","request","withCredentials","requestError","rejection","response","responseError","otherwise","state","url","templateUrl","controller","cache","reload","Config","constant","path","AdminDepartment","$rootScope","$scope","$stateParams","Http","Component","$uibModal","$state","getDepartmentList","_httpParams","then","result","AdminDepartments","data","body","getDepTotal","depTotal","number","Paging","totalItems","Modal","previousDepNames","areaNames","maxSize","itemsPerPage","limit","skip","pageChanged","currentPage","AllDepartments","getSysDict","dict_category","types","placeholder","dep_sn","order_by","dep_name","dep_short_name","dep_en_name","contacts","contact_phone","addDepartmentModal","department","parent_id","area_code","dep_type","promise","popModal","opened","TypeArea","index","_","findIndex","o","id","department1","validDepName","depName","deps","i","length","validPhone","reg","test","saveDepartment","head","status","alert","updateDepartment","AdminDep","remove","dep","deleteDepartment","flag","confirm","go","searchDepartment","sysdepname","total","factory","$http","API","params","get","post","put","service","popAlert","scope","info","Alerts","type","message","timeout","CloseAlert","splice","modalInstance","open","animation","backdrop","size","isValid","close","cancel","dismiss","Admin","$cookies","User","JSON","parse","titleName","AdminUser","getUserList","users","getUserTotal","dep_id","console","log","LoginUser","tatol","UserTotal","deptList","name","password","password1","personName","phone","email","addUserModal","sysUser","prom","validUser","user","username","validPword","validEmail","invalid","saveUser","updateUser","deleteUser","Password","password_1","password_2","password_3","password_pre","p2","validPword1","validatePassword","UpdatePassword","searchUser","sysusername","Dashboard","getDepartments","Bureaus","DataquotaSummary","getDataquotaSummary","DataRequirementSummary","getDataRequirementSummary","SummaryDataQuota","SummaryRequirement","getDataQuotaNew","NewIndicators","getDataRequirementNew","Requirements","select","param","departmentID","quota_dep_id","getDataQuota","followDepIndicators","results","getUserDep","followDeps","follow_dep_id","followDepId","directive","restrict","template","link","element","attr","summary","myChart","echarts","init","find","option","tooltip","trigger","formatter","series","radius","label","normal","position","textStyle","color","labelLine","show","value","department_number","department_number_inc","selected","data_quota_number","data_quota_number_inc","setOption","requiement_number","requiement_number_inc","QInventoryStatistic","DEPARTMENT","INVENTORY","REQUIREMENT","legend","xAxis","yAxis","min","max","interval","axisLabel","Login","submit","valid","loginSubmitted","login","loginUser","stringify","loginError","Main","DataQuotaDetail","getDataQuotaDetailByDepID","getDataQuotaExampleByDepID","dataquotaid","data_quota_id","DataQuotaExample","DataQuotaList","StateParams","getDataQuotaList","DataQuotas","DataQuotasTotal","count","getDataQuotaListByFilter","httpParams","currentDepID","initPaging","assign","currentDepName","currentDep","Retrieval","searchTarget","quotaname","TargetDataQuotaName","DataQuotaApplyInfo","getDataQuotaApplyInfo","SHARE_FREQUENCY","DATA_LEVEL","SHARE_LEVEL","getSystemDictByCatagory","ShareLevels","ShareFrequencys","DataLevels","filterParams","ShareLevelFilter","share_level","ShareFrequencyFilter","share_frequency","sys_dict_id","DataLevelFilter","DataQuota","window","scrollTo","treeOptions","nodeChildren","dirSelectable","injectClasses","ul","li","liSelected","iExpanded","iCollapsed","iLeaf","labelSelected","menu","list","Audit","getAuditList","auditPromise","auditList","DeptAudit","searchDeptAuditByName","quota_name","quota_name_filter","TabExampShow","TabRequireShow","Tab","auditInfo","AuditInfo","audit_opinion","getQuotaDetail","DATAQUOTAID","AuditDetail","applydepname","APPLYDEPNAME","applytime","APPLYTIME","getQuotaExamples","res","DataQuotaExamples","DataTitle","file_content","title","DataColumn","column","getQuotaRequirement","reqRes","QuotaReqDetailList","tabSwitcher","num","auditExampData","requirementInfo","submitAudit","audit_status","ID","AUDITID","updateAuditDetail","auditError","DInventory","getDepartmentQuotaList","DEP_NAME","getDepartQuotaList","temp","replace","depQuotaList","DepartDataQuota","delay","minDuration","getShareLevelAll","shareLvMainSelection","getDataQuotaListBySl","item","idx","indexOf","getShareFreqAll","shareFreqSelection","getDataQuotaListBySF","getSpatialAll","areaMainSelection","getDataQuotaListByAP","searchDeptDataQuotaByName","deleteQuota","event","quotaId","deleteFlag","target","checked","deleteDataQuota","delete_flag","DATA_STORE_TYPE","DATA_SHOW_FORMAT","SECRET_FLAG","LEVEL_AUTH","STORE_TYPE_OTHER","DATA_SHOW_OTHER","DEP_ID","data_show_format_add","data_store_type_add","calculate_method","file_name","linkman","quotaTypeList","dataShowFormatList","secretFlagList","addQuota","submitted","DataQuotaAddObj","dataRelationConfig","dataQuotaApplyInfo","dataLevelSelection","dataQuota","forEach","sys_dict","dataQuotaId","obj_type","shareDeps","map","outputDeptList","share_dep","apply_dep","saveDataQuota","depShow","showHideDeps","ev","storeTypeOther","storeTypeChange","data_store_type","dataShowOther","dataShowChange","data_show_format","toggleDataLevelSelection","$sce","uploadPromise","htmlPopover","trustAsHtml","uploadFile","file","myFile","dir","toIndex","fd","FormData","uploadUrl","append","transformRequest","identity","headers","Content-Type","undefined","setTimeout","$parse","attrs","model","fileModel","modelSetter","parentIvntObj","bind","rgx","fileSuffix","files","ext","substring","lastIndexOf","fileNameError","$apply","Department","toFollowDep","depSelect","followDeptList","parentObj","outputAllDeptList","followDep","followDepts","userdep","mainAuditPromise","toAuditList","auditTotal","getDeptRequirementConfirmList","_httpConfirmParams","response_dep_id","mainReqPromise","getDepartmentRequirementList","requireToConfirmList","reqTotal","shareFrequencyList","shareLevelList","dataLevelList","getDepDataQuotaTotal","Count","auditMore","reqMore","getFollowDepList","uniq","getDepartmentFollowList","deptAllList","allItem","icon","outItem","ticked","$broadcast","openFn","DepartmentReq","getDeptRequirementList","reqPromise","requirementList","DeptRequirement","dataLevelReqSelection","toggleDataLevelReqSelection","publishReq","DepRequirment","_httpPublishParams","reqParent","req_sys_dict","datarequiementId","requiement_name","res_dep_id","dataRequiement","publishRequirement","searchDeptReqByName","req_name_filter","deleteReqFlag","deleteReq","deleteRequirement","reqConfirmPromise","requirementConfirmList","DeptRequirementConfirm","searchDeptReqConfirmByName","depQuotaReqList","toConfirm","ReqDetail","ReqResponse","errorMsg","dataQuotaIdNull","popModalConfirm","updateRequirement","saveReqResponse","requiement_id","saveResult","getReqDetail","data_requiement_id","getResponseList","modalInstanceConfirm","error","DepartmentShare","getDepartmentShareList","sharePromise","shareDataQuotaList","depShareList","getShareLevelAllForShare","shareLvShareSelection","getShareDataQuotaListBySl","getDataLevelAllForShare","dataLevelShareSelection","getShareDataQuotaListByAP","searchShareDataQuotaByName","followChange","depId","followDepartment","cancelFollowDepartment","SystemUser","DepUserTotal","fig","getUser"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n/* Bootstrap Application */\nvar app = angular.module('app', [\n  'Config',\n  'ui.router',\n  'ui.bootstrap',\n  'treeControl',\n  'isteven-multi-select',\n  'Login',\n  'Main',\n  'Dashboard',\n  'Admin',\n  'Admin.User',\n  'Admin.Department',\n  'Department',\n  'DataQuota',\n  'DataQuotaList',\n  'DataQuotaDetail',\n  'Department.Inventory',\n  'Department.Audit',\n  'Department.Requirement',\n  'DepartmentShare'\n]);\n\napp.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider', '$provide',\n  function($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider, $provide) {\n    /** URL Location Mode */\n    $locationProvider.html5Mode({enabled: false});\n    /** HTTP Interceptor */\n    $httpProvider.interceptors.push(['$q',\n      function($q) {\n        return {\n          'request': function(config) {\n            config.withCredentials = true;\n            return config;\n          },\n          'requestError': function(rejection) {\n            return response;\n          },\n          'response': function(response) {\n            return response;\n          },\n          'responseError': function(rejection) {\n            return rejection;\n          }\n        };\n      }\n    ]);\n    /** Config Router */\n    $urlRouterProvider.otherwise('/login');\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        templateUrl: 'views/common/login.html',\n        controller: 'Login.Controller.Main'\n      })\n      .state('main', {\n        url: '/main',\n        templateUrl: 'views/common/main.html',\n        controller: 'Main.Controller.Main'\n      })\n      .state('main.dashboard', {\n        url: '/dashboard',\n        templateUrl: 'views/common/dashboard.html',\n        controller: 'Dashboard.Controller.Main'\n      })\n      .state('main.admin', {\n        url: '/admin',\n        templateUrl: 'views/admin/main.html',\n        controller: 'Admin.Controller.Main'\n      })\n      .state('main.admin.department', {\n        url: '/dashboard',\n        templateUrl: 'views/admin/department.html',\n        controller: 'Admin.Department.Controller.Main'\n      })\n      .state('main.admin.user', {\n        url: '/user',\n        templateUrl: 'views/admin/user.html',\n        controller: 'Admin.User.Controller.Main'\n      })\n      .state('main.data-quota', {\n        url: '/data-quota',\n        templateUrl: 'views/data-quota/main.html',\n        controller: 'DataQuota.Controller.Main'\n      })\n      .state('main.data-quota.list', {\n        url: '/list/:quota_dep_id/:dep_name',\n        templateUrl: 'views/data-quota/list.html',\n        controller: 'DataQuotaList.Controller.Main'\n      })\n      .state('main.data-quota.detail', {\n        url: '/detail/:data_quota_id',\n        templateUrl: 'views/data-quota/detail.html',\n        controller: 'DataQuotaDetail.Controller.Main'\n      })\n      .state('main.department', {\n        url: '/department',\n        cache:'false',\n        reload: true,\n        templateUrl: 'views/department/main.html',\n        controller: 'Department.Controller.Main'\n      })\n      .state('main.department.inventory', {\n        url: '/inventory',\n        cache:'false',\n        templateUrl: 'views/department/inventory.html',\n        controller: 'Department.Inventory.Controller.Main'\n      })\n      .state('main.department.inventory.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/inventory-publish.html',\n        controller: 'Department.Inventory.Controller.publish'\n      })\n      .state('main.department.inventory.detail', {\n        url: '/detail?ID',\n        cache:'false',\n        templateUrl: 'views/department/inventory-detail.html',\n        controller: 'Department.Inventory.Controller.detail'\n      })\n      .state('main.department.inventory.upload', {\n        url: '/upload?ID',\n        cache:'false',\n        templateUrl: 'views/department/inventory-upload.html',\n        controller: 'Department.Inventory.Controller.upload'\n      })\n      .state('main.department.share', {\n        url: '/share',\n        templateUrl: 'views/department/share.html',\n        controller: 'DepartmentShare.Controller.Main'\n      })\n      .state('main.department.share.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/share-detail.html',\n        controller: 'DepartmentShare.Controller.detail'\n      })\n      .state('main.department.requirementConfirm', {\n        url: '/requirement-confirm',\n        templateUrl: 'views/department/requirement-confirm.html',\n        controller: 'Department.Requirement.Controller.confirm'\n      })\n      .state('main.department.requirement', {\n        url: '/requirement',\n        templateUrl: 'views/department/requirement.html',\n        controller: 'Department.Requirement.Controller.Main'\n      })\n      .state('main.department.requirement.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/requirement-publish.html'\n      })\n      .state('main.department.requirement.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/requirement-detail.html',\n        controller: 'Department.Requirement.Controller.detail'\n      })\n      .state('main.department.audit', {\n        url: '/audit',\n        cache:'false',\n        templateUrl: 'views/department/audit.html',\n        controller: 'Department.Audit.Controller.Main'\n      })\n      .state('main.department.audit.info', {\n        url: '/info/:AUDITID/:DATAQUOTAID/:APPLYDEPNAME/:APPLYTIME',\n        templateUrl: 'views/department/audit-info.html',\n        controller: 'Department.Audit.Controller.info'\n      })\n\n  }\n]);\n","'use strict';\n/* Application Configration */\nvar Config = angular.module('Config', []);\n\nConfig.constant('API', {\n  // path: 'http://localhost:8080/drrp/api' //发布\n  path: 'http://172.16.1.78:8080/api' //测试\n});\n","'use strict';\nvar AdminDepartment = angular.module('Admin.Department', ['ui.router']);\n\n/** DepartmentReq Controller */\nAdminDepartment.controller('Admin.Department.Controller.Main', ['$rootScope', '$scope', '$stateParams','AdminDepartment.Service.Http', 'AdminDepartment.Service.Component', '$uibModal', '$state',\n  function($rootScope, $scope, $stateParams, Http, Component, $uibModal, $state) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.previousDepNames = [];\n    $scope.areaNames = [];\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentList(_httpParams);\n    }\n    //pagination\n    function getDepartmentList(_httpParams) {\n      Http.getDepartmentList(_httpParams).then(function(result) {\n        $scope.AdminDepartments = result.data.body;\n      });\n    }\n\n    // init\n    getDepartmentList(_httpParams);\n    function getDepTotal(){\n      Http.getDepTotal({\n      }).then(function(result) {\n        $scope.depTotal = result.data.body[0].number;\n        $scope.Paging.totalItems = $scope.depTotal;\n      });\n    }\n    getDepTotal();\n    Http.getDepartmentList().then(function(result) {\n      $scope.AllDepartments = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"7\"\n    }).then(function(result) {\n      $scope.types = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"9\"\n    }).then(function(result) {\n      $scope.areaNames = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.dep_sn = \"必填\";\n    $scope.placeholder.order_by = \"必填\";\n    $scope.placeholder.dep_name = \"必填\";\n    $scope.placeholder.dep_short_name = \"必填\";\n    $scope.placeholder.dep_en_name = \"必填\";\n    $scope.placeholder.contacts = \"必填\";\n    $scope.placeholder.contact_phone = \"必填\";\n\n    // add Department\n    $scope.addDepartmentModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.department = {}; // Clean scope of modal\n      $scope.department.dep_en_name=\"anquanting.png\";\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      var promise = Component.popModal($scope, '添加', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n      });\n      promise.result.then(function() {\n        Http.saveDepartment($scope.department).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('添加失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getDepartmentList(_httpParams);\n          getDepTotal();\n        })\n      });\n    }\n    $scope.updateDepartment = function(AdminDep) {\n      $scope.department = AdminDep;\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      $scope.department.dep_en_name=\"anquanting.png\";\n      _.remove($scope.AllDepartments, function(dep) {\n        return (dep.dep_name == AdminDep.dep_name);\n     });\n      var promise = Component.popModal($scope, '修改', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n\n      });\n      promise.result.then(function() {\n        Http.updateDepartment($scope.department).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getDepartmentList(_httpParams);\n        })\n    });\n    }\n\n    $scope.deleteDepartment = function(AdminDep) {\n      var flag = confirm(\"确定要删除吗？\");\n      if (flag) {\n        Http.deleteDepartment(AdminDep).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n          }\n          else{\n            alert('删除失败！');\n          }\n          $state.go(\"main.admin.department\", {}, {\n            reload: true\n          });\n        })\n      }\n    }\n\n    //search department\n    $scope.searchDepartment = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.sysdepname = $scope.dep_name;\n      if($scope.dep_name==null){\n        getDepTotal();\n        getDepartmentList(_httpParams);\n      }else{\n        Http.getDepartmentList(_httpParams).then(function(result) {\n          if(result.data.head.total >=1){\n            $scope.AdminDepartments = result.data.body;\n            $scope.depTotal = result.data.head.total;\n            $scope.Paging.totalItems =  $scope.depTotal;\n          }else {\n            alert(\"系统没有查到'\"+$scope.dep_name+\"'这个部门，请重新输入\");\n            $scope.dep_name = \"\";\n            $state.go(\"main.admin.department\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n\n\n/* HTTP */\nAdminDepartment.factory('AdminDepartment.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params:params\n        }\n      )\n    };\n\n    function getDepTotal() {\n      return $http.get(\n        path + '/sys_dep/count'\n      )\n    };\n    function saveDepartment(data) {\n      return $http.post(\n        path + '/sys_dep', {\n          data: data\n        }\n      )\n    };\n    function getSysDict(params){\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    }\n    function updateDepartment(data) {\n      return $http.put(\n        path + '/sys_dep' , {\n          data: data\n        }\n      )\n    }\n    function deleteDepartment(data) {\n      return $http.delete(\n        path + '/sys_dep', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n\n    return {\n      getDepartmentList: getDepartmentList,\n      getDepTotal: getDepTotal,\n      saveDepartment: saveDepartment,\n      getSysDict: getSysDict,\n      updateDepartment: updateDepartment,\n      deleteDepartment: deleteDepartment\n    }\n  }\n]);\n\n/* Component */\nAdminDepartment.service('AdminDepartment.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.department\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Admin = angular.module('Admin', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdmin.controller('Admin.Controller.Main', ['$cookies', '$scope', '$stateParams',\n  function($cookies, $scope, $stateParams) {\n       var User = JSON.parse($cookies.get('User'));\n       if(User.id === \"e147f177-1e83-11e6-ac02-507b9d1b58bb\"){\n         $scope.titleName =\"用户/部门管理\";\n       }else{\n         $scope.titleName = \"用户管理\";\n       }\n  }\n])\n","'use strict';\nvar AdminUser = angular.module('Admin.User', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdminUser.controller('Admin.User.Controller.Main', ['$cookies', '$scope', '$q', '$stateParams','AdminUser.Service.Http', 'AdminUser.Service.Component','$uibModal','$state',\n  function($cookies, $scope, $q, $stateParams, Http, Component, $uibModal, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_id);\n    var dep_name= ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_name);\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit =10;\n    _httpParams.skip = 0;\n    _httpParams.dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : dep_id);\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getUserList(_httpParams);\n    }\n\n\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n    function getUserList(_httpParams) {\n      Http.getUserList(_httpParams).then(function(result) {\n        $scope.users = result.data.body;\n      });\n    }\n    function getUserTotal(){\n      Http.getUserTotal({\n        \"dep_id\" : dep_id\n      }).then(function(result) {\n        console.log(LoginUser.id);\n        if (LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') {\n          var tatol =  result.data.body[0].number - 1 ;\n          $scope.UserTotal = tatol;\n        }else {\n          $scope.UserTotal = result.data.body[0].number;\n        }\n        $scope.Paging.totalItems = $scope.UserTotal;\n      });\n    }\n    // init\n    getUserTotal();\n    getUserList(_httpParams);\n\n    //department\n    Http.getDepartmentList({\n      'dep_name': dep_name\n    }).then(function(result) {\n      $scope.deptList = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.name = \"必填\";\n    $scope.placeholder.password = \"必填\";\n    $scope.placeholder.password1 = \"必填\";\n    $scope.placeholder.personName = \"必填\";\n    $scope.placeholder.phone = \"必填\";\n    $scope.placeholder.email = \"必填\";\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n      var prom = Component.popModal($scope, '添加', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPword = function (){\n          $scope.placeholder.password1 =\"必填\";\n          $scope.validPword = false;\n          if($scope.sysUser.password!=$scope.sysUser.password1&&$scope.sysUser.password1!=null){\n            $scope.validPword = true;\n            $scope.placeholder.password1 =\"两次输入的密码不同,请重新输入\";\n            $scope.sysUser.password1 =\"\";\n          }\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&($scope.sysUser.phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('保存数据库失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n\n\n\n    }\n    $scope.updateUser = function(user) {\n      $scope.sysUser = user;\n      $scope.sysUser.password1 =0;\n      $scope.sysUser.password = 0;\n      var prom = Component.popModal($scope, '修改', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&$scope.sysUser.phone!=null){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getUserList(_httpParams);\n        })\n      });\n    }\n\n    $scope.deleteUser = function(user) {\n      var flag = confirm(\"确定要删除吗？\");\n      if (flag) {\n        Http.deleteUser(user).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n            getUserTotal();\n            getUserList(_httpParams);\n          }\n          else{\n            alert('删除失败！');\n          }\n          $state.go(\"main.admin.user\", {}, {\n            reload: true\n          });\n        })\n      }\n    }\n\n    $scope.Password = function(user) {\n      $scope.placeholder.password_1 = \"必填\";\n      $scope.placeholder.password_2 = \"必填\";\n      $scope.placeholder.password_3 = \"必填\";\n      var id = 0;\n      id = user.id;\n      $scope.Modal.password_pre = \"\";\n      $scope.Modal.p2 = \"\";\n      $scope.Modal.password = \"\";\n      $scope.password_1 = false;\n      $scope.password_2 = false;\n      $scope.password_3 = false;\n      var prom = Component.popModal($scope, '密码', 'update-password-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validPword1 = function (){\n          $scope.password_1 = false;\n          $scope.placeholder.password_1 =\"必填\";\n          Http.validatePassword({\n            \"id\":id,\n            \"password\":$scope.Modal.password_pre\n          }).then(function(result) {\n            if(result.data.head.total == 0) {\n              $scope.password_1 = true;\n              $scope.placeholder.password_1 =\"原密码不对,请重新输入\";\n              $scope.Modal.password_pre = \"\";\n            }\n          });\n        }\n        $scope.Modal.validPword = function (){\n             $scope.password_3 = false;\n             $scope.placeholder.password_3 =\"必填\";\n             if($scope.Modal.p2!=$scope.Modal.password){\n               $scope.password_3 = true;\n               $scope.placeholder.password_3 = \"两次输入的密码不同,请重新输入\";\n               $scope.Modal.password =\"\";\n             }\n        }\n      });\n\n      prom.result.then(function() {\n        Http.UpdatePassword({\n          \"id\": id,\n          \"password\":$scope.Modal.password\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n    }\n\n    //search user\n    $scope.searchUser = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.dep_id = dep_id;\n      _httpParams.sysusername = $scope.username;\n      if($scope.username==null){\n        getUserTotal();\n        getUserList(_httpParams);\n      }else{\n        Http.getUserList(_httpParams).then(function(result) {\n          if(result.data.head.total >= 1){\n            $scope.users = result.data.body;\n            $scope.UserTotal = result.data.head.total;\n            $scope.Paging.totalItems = $scope.UserTotal;\n          }else{\n            alert(\"系统没有查到'\"+$scope.username+\"'这个用户名，请重新输入\");\n            $state.go(\"main.admin.user\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n/* HTTP */\nAdminUser.factory('AdminUser.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getUserList(params) {\n      return $http.get(\n        path + '/sys_user',{\n           params: params\n        }\n      )\n    };\n    function getUserTotal(params) {\n      return $http.get(\n        path + '/sys_user/count',{\n           params: params\n        }\n      )\n    };\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params: params\n        }\n      )\n    }\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/sys_user', {\n          data: data\n        }\n      )\n    };\n\n\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/sys_user' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/sys_user', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n    function validatePassword(params){\n      return $http.get(\n        path + '/sys_user/password', {\n            params: params\n        }\n      )\n    }\n    function UpdatePassword(data) {\n      return $http.put(\n        path + '/sys_user/password' , {\n          data: data\n        }\n      )\n    }\n    return {\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUserTotal: getUserTotal,\n      validatePassword: validatePassword,\n      UpdatePassword: UpdatePassword\n    }\n  }\n]);\n\n/* Component */\nAdminUser.service('AdminUser.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.user\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Dashboard = angular.module('Dashboard', ['ui.router','ui.bootstrap']);\n\n/** Dashboard Controller */\nDashboard.controller('Dashboard.Controller.Main', ['$scope', 'Dashboard.Service.Http',\n  function($scope, Http) {\n    <!-- Bureaus logo grid -->\n    Http.getDepartments().then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Bureaus = result.data.body;\n      }\n    });\n    <!-- #Bureaus logo grid -->\n\n    <!-- ECharts -->\n    $scope.DataquotaSummary = Http.getDataquotaSummary();\n    $scope.DataRequirementSummary = Http.getDataRequirementSummary();\n    Http.getDataquotaSummary().then(function(result){\n      $scope.SummaryDataQuota = result.data.body[0];\n    })\n    Http.getDataRequirementSummary().then(function(result){\n      $scope.SummaryRequirement = result.data.body[0];\n    })\n    <!-- #ECharts -->\n\n    <!-- DataQuota & Requirement Summary -->\n    Http.getDataQuotaNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.NewIndicators = result.data.body;\n      }\n    });\n    Http.getDataRequirementNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Requirements = result.data.body;\n      }\n    });\n    <!-- #DataQuota & Requirement Summary -->\n\n    <!-- DataQuota for Concerned Departments -->\n    // Handle Selected Department\n    $scope.select = function(param){\n      $scope.departmentID = {quota_dep_id: param};\n      Http.getDataQuota({\n        skip: 0, limit: 5,  dep_name: param\n      }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n      });\n    }\n    // Generoted Department\n    Http.getUserDep().then(function(result) {\n        if (200 === result.data.head.status && result.data.body.length !== 0) {\n          $scope.followDeps = result.data.body;\n          return result.data.body[0].follow_dep_id;\n        }\n      }).then(function(followDepId){\n        Http.getDataQuota({\n          skip: 0,\n          limit: 5,\n          dep_name: followDepId\n        }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n        });\n     });\n     <!-- #DataQuota for Concerned Departments -->\n\n }\n])\n\n/* HTTP Factory */\nDashboard.factory('Dashboard.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaNew(params) {\n      return $http.get(\n        path + '/data_quota/new', {params: params}\n      )\n    };\n    function getDataRequirementNew(params) {\n      return $http.get(\n        path + '/data_requiement/new', {params: params}\n      )\n    };\n    function getDepartments() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    };\n    function getDataquotaSummary(){\n      return $http.get(\n        path + '/data_quota/summary'\n      )\n    };\n    function getDataRequirementSummary(){\n      return $http.get(\n        path + '/data_requiement/summary'\n      )\n    };\n    function getUserDep(params){\n      return $http.get(\n        path + '/user_dep',{params: params}\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/data_quota',{params: params}\n      )\n    };\n\n    return {\n      getDataQuotaNew: getDataQuotaNew,\n      getDataRequirementNew: getDataRequirementNew,\n      getDepartments: getDepartments,\n      getDataquotaSummary: getDataquotaSummary,\n      getDataRequirementSummary: getDataRequirementSummary,\n      getUserDep: getUserDep,\n      getDataQuota: getDataQuota\n    };\n\n  }\n]);\n\n/** Dashboard Directive */\nDashboard.directive('wiservDataQuotaOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataquotaSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '指标提供部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '60%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: summary.department_number,\n                  name: '指标提供部门'\n                }, {\n                  value: summary.department_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '指标总数',\n                type: 'pie',\n                radius: ['70%', '85%'],\n                data: [{\n                  value: summary.data_quota_number,\n                  name: '指标总数'\n                }, {\n                  value: summary.data_quota_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservRequirementOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataRequirementSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '需求涉及部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '60%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: summary.department_number,\n                  name: '需求涉及部门'\n                }, {\n                  value: summary.department_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '需求总数',\n                type: 'pie',\n                radius: ['70%', '85%'],\n                data: [{\n                  value: summary.requiement_number,\n                  name: '需求总数'\n                }, {\n                  value: summary.requiement_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservStatisticChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:100%;height:240px;'></div>\",\n      link: function(scope, element, attr) {\n        scope.QInventoryStatistic.then(function(result) {\n          var DEPARTMENT = result.data.body[0];\n          var INVENTORY = result.data.body[1];\n          var REQUIREMENT = result.data.body[2];\n          var myChart = echarts.init((element.find('div'))[0]);\n          var option = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['指标', '需求']\n            },\n            xAxis: [{\n              type: 'category',\n              name: '数量',\n              data: DEPARTMENT.DEPARTMENT\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '单位',\n              min: 0,\n              max: 30,\n              interval: 30,\n              axisLabel: {\n                formatter: '{value} 个'\n              }\n            }],\n            series: [{\n              name: '指标',\n              type: 'bar',\n              data: INVENTORY.INVENTORY\n            }, {\n              name: '需求',\n              type: 'bar',\n              data: REQUIREMENT.REQUIREMENT\n            }]\n          };\n          myChart.setOption(option);\n        });\n\n      }\n    };\n  }\n]);\n","'use strict';\nvar Login = angular.module('Login', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nLogin.controller('Login.Controller.Main', ['$rootScope', '$cookies', '$scope', '$state', 'Login.Service.Http',\n  function($rootScope, $cookies, $scope, $state, Http) {\n    $scope.Login = {};\n\n    $scope.Login.submit = function(valid) {\n      $scope.loginSubmitted = false;\n      if (valid) {\n        var username = $scope.Login.username;\n        var password = $scope.Login.password;\n        Http.login({\n          username: username,\n          password: password\n        }).then(function(result) {\n          var loginUser = result.data.body[0];\n          $rootScope.User = loginUser;\n          $cookies.put('User', JSON.stringify(loginUser));\n          if (200 == result.data.head.status) {\n            $state.go(\"main.dashboard\");\n          } else {\n            //$state.go(\"login\");\n            $scope.loginError = true;\n          }\n        });\n      } else {\n        $scope.loginSubmitted = true;\n      }\n\n    }\n  }\n\n])\n\n\n/* HTTP Factory */\nLogin.factory('Login.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function login(params) {\n      return $http.get(\n        path + '/login', {\n          params: params\n        }\n      )\n    };\n    return {\n      login: login\n    }\n  }\n]);\n","'use strict';\nvar Main = angular.module('Main', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nMain.controller('Main.Controller.Main', ['$scope', '$cookies',\n  function($scope, $cookies) {\n    $scope.User = JSON.parse($cookies.get('User'));\n  }\n]);\n","'use strict';\nvar DataQuotaDetail = angular.module('DataQuotaDetail', ['ui.router']);\n\n/** Main Controller */\nDataQuotaDetail.controller('DataQuotaDetail.Controller.Main', ['$scope', '$state', 'DataQuotaDetail.Service.Http', '$stateParams',\n  function($scope, $state, Http, $stateParams) {\n    // Data Quota Detail\n    Http.getDataQuotaDetailByDepID(\n      $stateParams\n    ).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n    });\n    // Data Quota Example\n    Http.getDataQuotaExampleByDepID(\n      {dataquotaid: $stateParams.data_quota_id}\n    ).then(function(result) {\n      $scope.DataQuotaExample = result.data.body[0];\n    });\n\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaDetail.factory('DataQuotaDetail.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaDetailByDepID(params){\n      return $http.get(\n        path + '/data_quota_detail', { params: params }\n      )\n    };\n    function getDataQuotaExampleByDepID(params){\n      return $http.get(\n        path + '/examples_detail', { params: params }\n      )\n    };\n    return {\n      getDataQuotaDetailByDepID: getDataQuotaDetailByDepID,\n      getDataQuotaExampleByDepID: getDataQuotaExampleByDepID\n    }\n  }\n]);\n","'use strict';\nvar DataQuotaList = angular.module('DataQuotaList', ['ui.router']);\n\n/** Main Controller */\nDataQuotaList.controller('DataQuotaList.Controller.Main', ['$scope', '$state', 'DataQuotaList.Service.Http', '$stateParams',\n  function($scope, $state, Http, StateParams) {\n    // Get the parameters form ui-router\n    var currentDepID = {quota_dep_id:StateParams.quota_dep_id};\n    var currentDepName = {dep_name:StateParams.dep_name};\n    // Selected department name\n    $scope.currentDep = currentDepName.dep_name;\n    // Params for pagin\n    var initPaging = {limit:10, skip: 0};\n    $scope.Paging = {};\n    $scope.Paging.currentPage = 1;\n    $scope.Paging.itemsPerPage = 10;\n    $scope.Paging.pageChanged = function() {\n      var httpParams = {};\n      _.assign(httpParams, currentDepID, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n      getDataQuotaList(httpParams);\n    };\n    // Get data quota list\n    function getDataQuotaList(_httpParams){\n      Http.getDataQuota(_httpParams).then(function(result) {\n        $scope.DataQuotas = result.data.body[0].results;\n        $scope.DataQuotasTotal = result.data.body[0].count;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    };\n    // Init data quota talbe\n    (function initDataQuotaList(){\n        var httpParams = {};\n        (currentDepID==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n        getDataQuotaList(httpParams);\n    })();\n    // Fetch data quota list by filter\n    function getDataQuotaListByFilter(params){\n      var httpParams = {};\n      (currentDepID.dep_name==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n      _.assign(httpParams, params);\n      getDataQuotaList(httpParams);\n    };\n    // Search for Data Quota Name\n    $scope.Retrieval = function(){\n      var httpParams = {};\n      var searchTarget = {quotaname: $scope.TargetDataQuotaName};\n      (currentDepID==='') ? (_.assign(httpParams, initPaging, searchTarget)) : (_.assign(httpParams, currentDepID, initPaging, searchTarget));\n      getDataQuotaList(httpParams);\n    };\n    // Data quota apply info\n    $scope.DataQuotaApplyInfo = function(data_quota_id) {\n      Http.getDataQuotaApplyInfo({data_quota_id: data_quota_id}).then(function() {\n        alert('申请查看成功');\n        var httpParams = {};\n        _.assign(httpParams, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n        getDataQuotaList(httpParams);\n      });\n    };\n    // Filter generator\n    var SHARE_FREQUENCY = 1,\n        DATA_LEVEL = 2,\n        SHARE_LEVEL = 3;\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.ShareLevels = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.ShareFrequencys = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.DataLevels = result.data.body;\n    });\n    // Handle above filter\n    var filterParams = {};\n    /* 共享级别 */\n    $scope.ShareLevelFilter = function(id, index){\n      console.log(index);\n      filterParams.share_level = id;\n      if('ALL'===id){\n        delete filterParams.share_level;\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 共享频率 */\n    $scope.ShareFrequencyFilter = function(id, index){\n      console.log(index);\n      filterParams.share_frequency = id;\n      if('ALL'===id){\n        delete filterParams.share_frequency;\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 分地区数据级别 */\n    filterParams.sys_dict_id = [];\n    $scope.DataLevelFilter = function(id, index){\n      console.log(index);\n      if('ALL'===id){\n        filterParams.sys_dict_id = [];\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        filterParams.sys_dict_id.push(id);\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaList.factory('DataQuotaList.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', { params: params }\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/data_quota/sys_dict', { params: params }\n      )\n    };\n    function getDataQuotaApplyInfo(data){\n      return $http.post(\n        path + '/data_quota_apply_info', { data: data }\n      )\n    };\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getDataQuotaApplyInfo: getDataQuotaApplyInfo,\n      getDataQuota: getDataQuota\n    }\n  }\n]);\n","'use strict';\nvar DataQuota = angular.module('DataQuota', ['ui.router']);\n\n/** Main Controller */\nDataQuota.controller('DataQuota.Controller.Main', ['$scope', '$state', 'DataQuota.Service.Http',\n  function($scope, $state, Http) {\n    window.scrollTo(0,0);\n    // Menu configration\n    $scope.treeOptions = {\n      nodeChildren: \"nodes\",\n      dirSelectable: false,\n      injectClasses: {\n        ul: \"a1\",\n        li: \"a2\",\n        liSelected: \"a7\",\n        iExpanded: \"a3\",\n        iCollapsed: \"a4\",\n        iLeaf: \"a5\",\n        label: \"a6\",\n        labelSelected: \"a8\"\n      }\n    }\n    // Menu Generator\n    Http.menu().then(function(result) {\n      if (200 === result.data.head.status) {\n        $scope.list = result.data.body;\n      }\n    })\n  }\n]);\n\n/* DataQuota Http Factory */\nDataQuota.factory('DataQuota.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function menu(params) {\n      return $http.get(\n        path + '/menu', { params: params }\n      )\n    };\n    return {\n      menu: menu\n    }\n  }\n]);\n","'use strict';\nvar Audit = angular.module('Department.Audit', ['ui.router']);\n\n/** Main Controller */\nAudit.controller('Department.Audit.Controller.Main', ['$scope', '$q', 'Department.Audit.Service.Http',\n  function($scope, $q, Http) {\n    $scope.DeptAudit = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getAuditList(_httpParams);\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      $scope.auditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.auditList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n    $scope.searchDeptAuditByName = function() {\n      _httpParams.quota_name = $scope.DeptAudit.quota_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList();\n    }\n\n\n  }\n])\n\n\nAudit.controller('Department.Audit.Controller.info', ['$scope', '$state', '$q', 'Department.Audit.Service.Http', '$stateParams',\n  function( $scope, $state, $q, Http, $stateParams) {\n    $scope.TabExampShow = true;\n    $scope.TabRequireShow = true;\n    $scope.Tab = {};\n    $scope.Tab.show = {};\n    $scope.Tab.show.auditInfo = true;\n    $scope.AuditInfo = {};\n    $scope.AuditInfo.audit_opinion = '';\n\n    // get audit detail by id\n    Http.getQuotaDetail({\n      data_quota_id: $stateParams.DATAQUOTAID\n    }).then(function(result) {\n      $scope.AuditDetail = result.data.body[0];\n      $scope.AuditDetail.applydepname = $stateParams.APPLYDEPNAME;\n      $scope.AuditDetail.applytime = $stateParams.APPLYTIME;\n      console.log($scope.AuditDetail);\n      Http.getQuotaExamples({\n        dataquotaid: $stateParams.DATAQUOTAID\n      }).then(function(res) {\n        $scope.DataQuotaExamples = res.data.body[0];\n        if (res.data.head.total == 0) {\n          $scope.TabExampShow = false;\n        }\n        else{\n          $scope.DataTitle = $scope.DataQuotaExamples.file_content.title;\n          $scope.DataColumn = $scope.DataQuotaExamples.file_content.column;\n        }\n        Http.getQuotaRequirement({\n          dataquotaid: $stateParams.DATAQUOTAID\n        }).then(function(reqRes) {\n\n          if(reqRes.data.body.length == 0) {\n            $scope.TabRequireShow = false;\n          }\n          else {\n            $scope.QuotaReqDetailList = reqRes.data.body;\n          }\n\n        })\n\n      })\n    })\n\n\n    $scope.tabSwitcher = function(num) {\n      switch (num) {\n        case 'auditInfo':\n          $scope.Tab.show = {};\n          $scope.Tab.show.auditInfo = true;\n          break;\n        case 'auditExampData':\n          $scope.Tab.show = {};\n          $scope.Tab.show.auditExampData = true;\n          break;\n        case 'requirementInfo':\n          $scope.Tab.show = {};\n          $scope.Tab.show.requirementInfo = true;\n          break;\n        default:\n        case 2:\n          $scope.Tab = {};\n          $scope.Tab.auditInfo.show = true;\n          break;\n\n      }\n    }\n\n\n\n    $scope.submitAudit = function() {\n      console.log($scope.AuditInfo.audit_status);\n      if(!$scope.AuditInfo.audit_status) {\n        $scope.auditError = true;\n        return;\n      }\n      $scope.AuditInfo.ID = $stateParams.AUDITID;\n      Http.updateAuditDetail($scope.AuditInfo).then(function(result) {\n        if (200 == result.data.head.status) {\n          alert('审核成功');\n          $state.go(\"main.department.audit\", {}, {\n            reload: true\n          });\n        } else {\n          alert('审核失败');\n        }\n      });\n    }\n  }\n])\n\n/* HTTP */\nAudit.factory('Department.Audit.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/opendata_quotalist', {\n          params: params\n        }\n      )\n    }\n\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function updateAuditDetail(data) {\n      return $http.put(\n        path + '/data_quota_apply_info', {\n          data: data\n        }\n      )\n    }\n\n    function getQuotaExamples(params) {\n      return $http.get(\n        path + '/examples_detail', {\n          params: params\n        }\n      )\n    }\n    function getQuotaRequirement(params) {\n      return $http.get(\n        path + '/requiement_detail', {\n          params: params\n        }\n      )\n    }\n    return {\n      getAuditList: getAuditList,\n      getQuotaDetail: getQuotaDetail,\n      updateAuditDetail: updateAuditDetail,\n      getQuotaExamples: getQuotaExamples,\n      getQuotaRequirement: getQuotaRequirement\n    }\n  }\n]);\n","'use strict';\nvar DInventory = angular.module('Department.Inventory', ['ui.router', 'ngCookies', 'cgBusy']);\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $q, Http) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_NAME = LoginUser.dep_id;\n    $scope.DepartDataQuota = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    $scope.delay = 0;\n    $scope.minDuration = 0;\n    $scope.message = '加载中...';\n    $scope.backdrop = true;\n    $scope.promise = null;\n\n    function getDepartmentQuotaList(_httpParams) {\n      _httpParams.dep_name = DEP_NAME;\n      $scope.promise = Http.getDepartQuotaList(_httpParams).then(function(result) {\n        console.log(result);\n        var temp = _.replace('  Hi', ' ', '0');\n        console.log(temp);\n        $scope.depQuotaList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n\n    //init\n    getDepartmentQuotaList(_httpParams);\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvMainSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvMainSelection = [];\n    $scope.getDataQuotaListBySl = function(item) {\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvMainSelection = [];\n      } else {\n        $scope.shareLvMainSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // share frequency all\n    $scope.getShareFreqAll = function() {\n      $scope.shareFreqSelection = [];\n      _httpParams.share_frequency = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // filter by share frequency\n    $scope.shareFreqSelection = [];\n    $scope.getDataQuotaListBySF = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareFreqSelection = [];\n      } else {\n        $scope.shareFreqSelection = item.id;\n      }\n      _httpParams.share_frequency = $scope.shareFreqSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaMainSelection = [];\n      _httpParams.sys_dict_id = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaMainSelection = [];\n    $scope.getDataQuotaListByAP = function(item) {\n      var idx = $scope.areaMainSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaMainSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaMainSelection.push(item.id);\n      }\n\n      _httpParams.sys_dict_id = $scope.areaMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchDeptDataQuotaByName = function() {\n      _httpParams.quota_name = $scope.DepartDataQuota.quota_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // delete data quota\n    $scope.deleteQuota = function(event, quotaId) {\n      var deleteFlag = event.target.checked;\n      Http.deleteDataQuota({\n        id: quotaId,\n        delete_flag: deleteFlag ? 'true' : 'false'\n      }).then(function(result) {\n        if (200 == result.data.head.status) {\n\n        }\n      })\n    }\n  }\n])\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.detail', ['$scope', '$q', 'Department.Inventory.Service.Http', '$stateParams', '$state',\n  function($scope, $q, Http, $stateParams, $state) {\n    console.log($stateParams.ID);\n    Http.getQuotaDetail({\n      data_quota_id: $stateParams.ID\n    }).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n      Http.getQuotaExamples({\n        dataquotaid: $stateParams.ID\n      }).then(function(res) {\n        $scope.DataQuotaExamples = res.data.body[0];\n        $scope.DataTitle = $scope.DataQuotaExamples.file_content.title;\n        $scope.DataColumn = $scope.DataQuotaExamples.file_content.column;\n        console.log($scope.DataTitle);\n        console.log($scope.DataColumn);\n      })\n    })\n  }\n])\n\nDInventory.controller('Department.Inventory.Controller.publish', ['$cookies', '$scope', '$state', '$q', '$uibModal', 'Department.Inventory.Service.Component', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $state, $q, $uibModal, Component, Http) {\n    var DATA_STORE_TYPE = 4;\n    var DATA_SHOW_FORMAT = 6;\n    var SECRET_FLAG = 5;\n    var LEVEL_AUTH = '250375bd-02f0-11e6-a52a-5cf9dd40ad7e';\n    var STORE_TYPE_OTHER = '25098ff3-02f0-11e6-a52a-5cf9dd40ad7e';\n    var DATA_SHOW_OTHER = '2515e9b5-02f0-11e6-a52a-5cf9dd40ad7e';\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DEP_NAME = LoginUser.dep_name;\n    $scope.DataQuota = {};\n    $scope.DataQuota.data_show_format_add = '';\n    $scope.DataQuota.data_store_type_add = '';\n    $scope.DataQuota.calculate_method = '';\n    $scope.DataQuota.file_name = '';\n    $scope.DataQuota.linkman = '';\n    $scope.DataQuota.contact_phone = '';\n\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_STORE_TYPE\n    }).then(function(result) {\n      $scope.quotaTypeList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_SHOW_FORMAT\n    }).then(function(result) {\n      $scope.dataShowFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    $scope.close = function(isValid) {\n      $state.go(\"main.department.inventory\", {}, {\n        reload: true\n      });\n    }\n\n    // submit add\n    $scope.addQuota = function(isValid) {\n      $scope.submitted = false;\n      var DataQuotaAddObj = {};\n      var dataRelationConfig = [];\n      var dataQuotaApplyInfo = [];\n      if (isValid) {\n\n        console.log($scope.dataLevelSelection);\n        DataQuotaAddObj.dataQuota = $scope.DataQuota;\n\n        _($scope.dataLevelSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.dataQuotaId = $scope.DataQuota.quota_name;\n          sys_dict.sys_dict_id = value;\n          sys_dict.obj_type = 1;\n          dataRelationConfig.push(sys_dict);\n        });\n\n        var shareDeps = _.map($scope.outputDeptList, 'id');\n        _(shareDeps).forEach(function(value) {\n          var share_dep = {};\n          share_dep.dataQuotaId = $scope.DataQuota.quota_name;\n          share_dep.apply_dep = value;\n          dataQuotaApplyInfo.push(share_dep);\n        });\n\n        DataQuotaAddObj.dataRelationConfig = dataRelationConfig;\n        DataQuotaAddObj.dataQuotaApplyInfo = dataQuotaApplyInfo;\n\n        console.log(DataQuotaAddObj);\n        Http.saveDataQuota(DataQuotaAddObj).then(function(result) {\n            console.log(result.data);\n            if (200 == result.data.head.status) {\n              $scope.Modal = {};\n\n              var modalInstance = Component.popModal($scope, 'Department.Inventory.Controller.publish', '', 'import-example-modal').result.then(function(res) {\n                $state.go(\"main.department.inventory.upload\", {\n                  ID: result.data.body[0].id\n                }, {\n                  reload: true\n                });\n\n              })\n\n            }\n            else{\n              alert('保存失败');\n              // $state.go(\"main.department.inventory\", {}, {\n              //   reload: true\n              // });\n            }\n          })\n          // .then(function() {\n          //   $state.go(\"main.department.inventory\", {}, {\n          //     reload: true\n          //   });\n          // })\n      }\n      else{\n        $scope.submitted = true;\n      }\n    }\n\n\n    // show or hide department\n    $scope.depShow = false;\n    $scope.showHideDeps = function(ev) {\n      if (LEVEL_AUTH == $scope.DataQuota.share_level) {\n        $scope.depShow = true;\n      } else {\n        $scope.depShow = false;\n      }\n    }\n\n    $scope.storeTypeOther = false;\n    $scope.storeTypeChange = function() {\n      if (STORE_TYPE_OTHER == $scope.DataQuota.data_store_type) {\n        $scope.storeTypeOther = true;\n      } else {\n        $scope.storeTypeOther = false;\n      }\n    }\n\n    $scope.dataShowOther = false;\n    $scope.dataShowChange = function() {\n      if (DATA_SHOW_OTHER == $scope.DataQuota.data_show_format) {\n        $scope.dataShowOther = true;\n      } else {\n        $scope.dataShowOther = false;\n      }\n    }\n\n    $scope.dataLevelSelection = [];\n    $scope.toggleDataLevelSelection = function(item) {\n      var idx = $scope.dataLevelSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelSelection.push(item.id);\n      }\n    };\n  }\n\n])\n\n// upload file\nDInventory.controller('Department.Inventory.Controller.upload', ['$scope', '$q', 'Department.Inventory.Service.Http', '$stateParams', '$state', '$sce',\n    function($scope, $q, Http, $stateParams, $state ,$sce) {\n      $scope.uploadPromise = null;\n\n      $scope.htmlPopover = $sce.trustAsHtml(\"<table class='table table-hover table-striped '>\"+\n        \"<thead><tr><th>序号</th><th>城市</th><th>GDP(亿元)</th><th>增长</th>\"+\n        \"<th>地方公共财政收入(亿元)</th><th>增长</th><th>城镇登记失业率</th>\"+\n        \"<th>农村居民人均纯收入(元)</th><th>增长</th></tr></thead>\"+\n        \"<tbody><tr><td>1</td><td>成都</td><td>9000</td><td>8.54%</td><td>8000</td><td>7.51%</td>\"+\n        \"<td>1.39</td><td>5678</td><td>3.40%</td></tr>\"+\n        \"</tbody></table>\");\n\n      $scope.uploadFile = function() {\n        var file = $scope.myFile;\n        console.log('file is ');\n        console.dir(file);\n        if (!file) {\n          alert('您还未选择文件');\n          return;\n        }\n        $scope.uploadPromise = Http.uploadFile(file, $stateParams.ID).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('上传成功!');\n            $state.go(\"main.department.inventory\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n\n      $scope.toIndex = function() {\n        $state.go(\"main.department.inventory\", {}, {\n          reload: true\n        });\n      }\n    }\n  ])\n  /* HTTP */\nDInventory.factory('Department.Inventory.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function getDepartQuotaList(params) {\n      return $http.get(\n        path + '/data_quota', {\n          params: params\n        }\n      )\n    }\n\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function saveDataQuota(data) {\n      return $http.post(\n        path + '/data_quota', {\n          data: data\n        }\n      )\n    };\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getQuotaExamples(params) {\n      return $http.get(\n        path + '/examples_detail', {\n          params: params\n        }\n      )\n    }\n\n    function uploadFile(file, id) {\n      var fd = new FormData();\n      var uploadUrl = path + '/upload/excel?data_quota_id=' + id;\n      fd.append('file', file);\n      var promise = $http.post(uploadUrl, fd, {\n        transformRequest: angular.identity,\n        headers: {\n          'Content-Type': undefined\n        }\n      });\n      return promise;\n    }\n\n    function deleteDataQuota(id) {\n      return $http.put(\n        path + '/data_quota_delete_flag', {\n          data: id\n        }\n      )\n    }\n    return {\n      saveDataQuota: saveDataQuota,\n      getDepartmentList: getDepartmentList,\n      getDepartQuotaList: getDepartQuotaList,\n      getQuotaDetail: getQuotaDetail,\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      uploadFile: uploadFile,\n      getQuotaExamples: getQuotaExamples,\n      deleteDataQuota: deleteDataQuota\n    }\n  }\n]);\n\n\n\n/* Component */\nDInventory.service('Department.Inventory.Service.Component', ['$uibModal', '$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, controller, type, templateUrl) {\n      //scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        controller: controller,\n        scope: scope\n      });\n      scope.Modal.confirm = function() {\n        modalInstance.close(scope.Modal);\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        setTimeout(function(){\n          alert('保存成功！');\n          $state.go(\"main.department.inventory\", {}, {\n            reload: true\n          });\n        },600)\n\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n\n\nDInventory.directive('fileModel', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var model = $parse(attrs.fileModel);\n      var modelSetter = model.assign;\n      scope.parentIvntObj = {};\n      element.bind('change', function() {\n        var rgx=/(xls|xlsx)/i;\n        var fileSuffix = element[0].files[0].name;\n        var ext=fileSuffix.substring(fileSuffix.lastIndexOf(\".\")+1);\n        if(!rgx.test(ext)) {\n          scope.$apply(function() {\n              scope.parentIvntObj.fileNameError = true;\n          })\n\n        }\n        else {\n          scope.parentIvntObj.fileNameError = false;\n          scope.$apply(function() {\n            modelSetter(scope, element[0].files[0]);\n          });\n        }\n\n      });\n    }\n  };\n}]);\n","'use strict';\nvar Department = angular.module('Department', ['ui.router']);\n\n/** Main Controller */\nDepartment.controller('Department.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Service.Http', '$sce','$state',\n  function($cookies, $scope, $q, Http, $sce, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    // follow department\n    $scope.depSelect = {};\n    $scope.followDeptList = [];\n    $scope.parentObj = {};\n    function toFollowDep() {\n      $scope.depSelect.show = false;\n      $scope.followDeptList = $scope.parentObj.outputAllDeptList;\n      // send request to add follow department\n      var params = [];\n      _($scope.followDeptList).forEach(function(item) {\n        var followDep = {};\n        followDep.follow_dep_id = item.dep_id;\n        params.push(followDep);\n      });\n      Http.followDepts({\n        userdep: params\n      }).then(function(result) {\n\n      })\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      _httpParams.audit_status = 0;\n      $scope.mainAuditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.toAuditList = result.data.body[0].results;\n        $scope.auditTotal = result.data.body[0].count;\n      });\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      console.log(_httpConfirmParams);\n      $scope.mainReqPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requireToConfirmList = result.data.body[0].results;\n        $scope.reqTotal = result.data.body[0].count;\n      })\n    }\n\n\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getDepDataQuotaTotal().then(function(result) {\n      $scope.Count = result.data.body[0];\n    });\n\n    // go to audit list page\n    $scope.auditMore = function() {\n      $state.go(\"main.department.audit\", {}, {\n        reload: true\n      });\n    }\n\n    // go to requirement list page\n    $scope.reqMore = function() {\n      $state.go(\"main.department.requirement\", {}, {\n        reload: true\n      });\n    }\n\n    // 已关注部门列表\n    Http.getFollowDepList().then(function(result) {\n      $scope.parentObj.outputAllDeptList = result.data.body;\n      $scope.followDeptList = _.uniq($scope.parentObj.outputAllDeptList);\n      //console.log($scope.parentObj.outputAllDeptList);\n      Http.getDepartmentFollowList().then(function(result) {\n        $scope.parentObj.deptAllList = _.remove(result.data.body, function(item) {\n          return item.dep_id != DEP_ID;\n        });\n        $scope.parentObj.outputDeptList = [];\n        console.log($scope.parentObj.deptAllList);\n        console.log($scope.parentObj.outputAllDeptList);\n        _($scope.parentObj.deptAllList).forEach(function(allItem) {\n          allItem.icon = '<img  src=styles/images/bureau/'+ allItem.dep_en_name +' />'\n          _($scope.parentObj.outputAllDeptList).forEach(function(outItem) {\n            if(allItem.dep_id == outItem.dep_id) {\n              allItem.ticked = true;\n              $scope.parentObj.outputDeptList.push(allItem);\n            }\n          })\n        });\n        console.log($scope.parentObj.outputDeptList);\n         $scope.$broadcast('someEvent', $scope.parentObj.outputDeptList);\n        // $scope.parentObj.deptAllList = _.pullAllWith($scope.parentObj.deptAllList, $scope.parentObj.outputAllDeptList,function(arrItem,othItem) {\n        //   return arrItem.dep_id == othItem.dep_id || DEP_ID == arrItem.dep_id;\n        // });\n        // console.log($scope.parentObj.deptAllList);\n      });\n    })\n\n    $scope.openFn = function() {\n      $scope.parentObj.outputAllDeptList = $scope.parentObj.outputDeptList;\n      console.log($scope.parentObj.outputAllDeptList);\n    }\n\n\n\n    $scope.followDep = function() {\n      toFollowDep();\n    }\n  }\n])\n\n\n/* HTTP */\nDepartment.factory('Department.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentFollowList() {\n      return $http.get(\n        path + '/follow_sys_dep'\n      )\n    }\n\n    function getDepDataQuotaTotal() {\n      return $http.get(\n        path + '/depquota/summary'\n      )\n    };\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/opendata_quotalist', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function getFollowDepList() {\n      return $http.get(\n        path + '/followed_user_dep'\n      )\n    }\n\n    function followDepts(params) {\n      return $http.post(\n        path + '/user_dep_batch', {\n          data: params\n        }\n      )\n    }\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getAuditList: getAuditList,\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      getDepartmentFollowList: getDepartmentFollowList,\n      getDepDataQuotaTotal: getDepDataQuotaTotal,\n      followDepts: followDepts,\n      getFollowDepList: getFollowDepList\n    }\n  }\n]);\n","'use strict';\nvar DepartmentReq = angular.module('Department.Requirement', ['ui.router']);\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.Main', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Component', 'Department.Requirement.Service.Http',\n  function($cookies, $scope, $stateParams, Component, Http) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\n      getDeptRequirementList(_httpParams);\n    }\n\n    // init\n    getDeptRequirementList();\n\n    function getDeptRequirementList() {\n      _httpParams.dep_id = DEP_ID;\n      $scope.reqPromise = Http.getDepartmentRequirementList(_httpParams).then(function(result) {\n        $scope.requirementList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n    $scope.dataLevelReqSelection = [];\n    $scope.toggleDataLevelReqSelection = function(item) {\n      var idx = $scope.dataLevelReqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelReqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelReqSelection.push(item.id);\n      }\n    };\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    $scope.publishReq = function() {\n      $scope.Modal = {};\n      $scope.Modal.DepRequirment = {};\n      var _httpPublishParams = {};\n      var dataRelationConfig = [];\n      $scope.reqParent = {};\n\n      Component.popModal($scope, '发布', 'add-req-modal').result.then(function() {\n        _($scope.dataLevelReqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\n\n        console.log(res_dep_id);\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\n\n        Http.publishRequirement(_httpPublishParams).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('发布成功');\n            getDeptRequirementList();\n          } else {\n            alert('发布失败');\n          }\n        })\n      });\n    }\n\n    $scope.searchDeptReqByName = function() {\n      _httpParams.requiement_name = $scope.DeptRequirement.req_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptRequirementList();\n    }\n\n\n    // delete requirement\n    $scope.deleteReqFlag = false;\n    $scope.deleteReq = function(id) {\n      $scope.deleteReqFlag = !$scope.deleteReqFlag;\n      Http.deleteRequirement({\n        id: id,\n        delete_flag: $scope.deleteReqFlag\n      }).then(function(result) {\n\n      })\n    }\n  }\n])\n\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.confirm', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n  function($cookies, $scope, $stateParams, Http, Component) {\n    $scope.Modal = {};\n    $scope.DeptRequirementConfirm = {};\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpConfirmParams.skip = ($scope.Paging.currentPage - 1) * _httpConfirmParams.limit;\n      getDeptRequirementConfirmList(_httpConfirmParams);\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      $scope.reqConfirmPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requirementConfirmList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n    $scope.searchDeptReqConfirmByName = function() {\n      _httpConfirmParams.requiement_name = $scope.DeptRequirementConfirm.req_name_filter;\n      _httpConfirmParams.limit = 10;\n      _httpConfirmParams.skip = 0;\n      getDeptRequirementConfirmList();\n    }\n\n    Http.getDepartQuotaList({\n      dep_name: DEP_ID\n    }).then(function(result) {\n      console.log(result);\n      $scope.depQuotaReqList = result.data.body[0].results;\n\n      //  $scope.Paging.totalItems = data.head.total;\n    });\n\n    $scope.toConfirm = function(item) {\n      // get requirement detail\n      $scope.Modal.ReqDetail = item;\n      $scope.Modal.ReqResponse = {};\n      console.log($scope.depQuotaReqList.length);\n      if($scope.depQuotaReqList.length == 0) {\n        $scope.Modal.ReqResponse.data_quota_id = '';\n        $scope.errorMsg = '本部门还未添加任何指标';\n        $scope.dataQuotaIdNull = true;\n      }\n      else{\n        $scope.Modal.ReqResponse.data_quota_id = $scope.depQuotaReqList[0].id;\n      }\n\n      Component.popModalConfirm($scope, '', 'confirm-req-modal').result.then(function() {\n        console.log($scope.Modal.ReqResponse);\n        $scope.Modal.ReqResponse.id = item.id;\n\n        Http.updateRequirement($scope.Modal.ReqResponse).then(function(result) {\n          if (200 == result.data.head.status) {\n            if ($scope.Modal.ReqResponse.status == 1) {\n              // 保存需求响应\n              Http.saveReqResponse({\n                requiement_id: item.id,\n                data_quota_id: $scope.Modal.ReqResponse.data_quota_id\n              }).then(function(saveResult) {\n                if (200 == saveResult.data.head.status) {\n                  alert('保存成功！');\n                  getDeptRequirementConfirmList();\n                } else {\n                  alert('保存失败！');\n                  getDeptRequirementConfirmList();\n                }\n              })\n            } else {\n              alert('保存成功！');\n              getDeptRequirementConfirmList();\n            }\n\n          } else {\n            alert('保存失败');\n          }\n        })\n      });\n    }\n\n  }\n])\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.detail', [ '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n    function( $scope, $stateParams, Http, Component) {\n      Http.getReqDetail({\n        data_requiement_id: $stateParams.ID\n      }).then(function(result) {\n        console.log(result.data.body[0]);\n        $scope.ReqDetail = result.data.body[0];\n      })\n    }\n  ])\n  /* HTTP Factory */\nDepartmentReq.factory('Department.Requirement.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function publishRequirement(data) {\n      return $http.post(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    function updateRequirement(data) {\n      return $http.put(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    function saveReqResponse(data) {\n      return $http.post(\n        path + '/data_requiement_response', {\n          data: data\n        }\n      )\n    }\n\n    function getDepartQuotaList(params) {\n      return $http.get(\n        path + '/data_quota', {\n          params: params\n        }\n      )\n    }\n\n    function getReqDetail(params) {\n      return $http.get(\n        path + '/data_requiement_detail', {\n          params: params\n        }\n      )\n    }\n\n    function getResponseList(params) {\n      return $http.get(\n        path + '/requirement/requireResponseList', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function deleteRequirement(id) {\n      return $http.put(\n        path + '/data_requiement_delete', {\n          data: data\n        }\n      )\n    }\n    return {\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      publishRequirement: publishRequirement,\n      getReqDetail: getReqDetail,\n      getResponseList: getResponseList,\n      updateRequirement: updateRequirement,\n      saveReqResponse: saveReqResponse,\n      getDepartQuotaList: getDepartQuotaList,\n      getDepartmentList: getDepartmentList,\n      deleteRequirement: deleteRequirement\n    }\n  }\n]);\n\n\n/* Component */\nDepartmentReq.service('Department.Requirement.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal for confirm\n    function popModalConfirm(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstanceConfirm = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        if (isValid) {\n          modalInstanceConfirm.close(scope.Modal);\n        } else {\n          return;\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstanceConfirm.dismiss();\n      };\n      return modalInstanceConfirm;\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        if (isValid && scope.reqParent.outputDeptList.length > 0) {\n          modalInstance.close(scope.Modal);\n        } else {\n          scope.error = true;\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal,\n      popModalConfirm: popModalConfirm\n    }\n  }\n])\n","'use strict';\nvar DepartmentShare = angular.module('DepartmentShare', ['ui.router']);\n\n/** InventoryDetail Controller */\nDepartmentShare.controller('DepartmentShare.Controller.Main', [ '$scope', 'DepartmentShare.Service.Http',\n  function( $scope, Http) {\n    $scope.DepartmentShare = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentShareList(_httpParams);\n    }\n\n    function getDepartmentShareList(_httpParams) {\n      $scope.sharePromise = Http.shareDataQuotaList(_httpParams).then(function(result) {\n        $scope.depShareList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n    //init\n    getDepartmentShareList(_httpParams);\n\n    // share level all\n    $scope.getShareLevelAllForShare = function() {\n      $scope.shareLvShareSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvShareSelection = [];\n    $scope.getShareDataQuotaListBySl = function(item) {\n      var idx = $scope.shareLvShareSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvShareSelection = [];\n      } else {\n        $scope.shareLvShareSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvShareSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // get data level all\n    $scope.getDataLevelAllForShare = function() {\n      $scope.dataLevelShareSelection = [];\n      _httpParams.sys_dict_id = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.dataLevelShareSelection = [];\n    $scope.getShareDataQuotaListByAP = function(item) {\n      var idx = $scope.dataLevelShareSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelShareSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.dataLevelShareSelection.push(item.id);\n      }\n\n      _httpParams.sys_dict_id = $scope.dataLevelShareSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchShareDataQuotaByName = function() {\n      _httpParams.quota_name = $scope.DepartmentShare.quota_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // follow department\n    $scope.followChange = function(event,depId) {\n      var value = event.target.checked;\n      console.log(value);\n      if(value) {// follow\n        Http.followDepartment({\n          follow_dep_id: depId\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n\n          }\n          else {\n\n          }\n        })\n      }\n      else{// cancel follow\n        Http.cancelFollowDepartment({\n          follow_dep_id: depId\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n\n          }\n          else {\n\n          }\n        })\n      }\n\n    }\n  }\n])\n\n\n// Department share detail controller\nDepartmentShare.controller('DepartmentShare.Controller.detail', [ '$scope', 'DepartmentShare.Service.Http', '$stateParams',\n  function( $scope, Http, $stateParams) {\n    // get department share detail\n    Http.getQuotaDetail({\n      data_quota_id: $stateParams.ID\n    }).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n    })\n\n  }\n])\n\n/* HTTP Factory */\nDepartmentShare.factory('DepartmentShare.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function shareDataQuotaList(params) {\n      return $http.get(\n        path + '/sharedata_quotalist', {\n          params: params\n        }\n      )\n    };\n\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function followDepartment(id) {\n      return $http.post(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    }\n\n    function cancelFollowDepartment(id) {\n      return $http.delete(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    }\n    return {\n      shareDataQuotaList: shareDataQuotaList,\n      getQuotaDetail: getQuotaDetail,\n      followDepartment: followDepartment,\n      cancelFollowDepartment: cancelFollowDepartment\n    }\n  }\n]);\n","'use strict';\nvar SystemUser = angular.module('Department.SystemUser', ['ui.router']);\n\n/** Main Controller */\nSystemUser.controller('Department.SystemUser.Controller.Main', ['$scope', '$q', 'Department.SystemUser.Service.Http', 'Department.SystemUser.Service.Component', '$uibModal',\n  function($scope, $q, Http, Component, $uibModal) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n\n    function getUserList() {\n      Http.getUserList().then(function(result) {\n        $scope.users = result.data.body;\n        $scope.DepUserTotal =result.data.head.total;\n      });\n    }\n    // Http.getDepartmentList().then(function(result) {\n    //   $scope.deptList = result.data.body;\n    // });\n\n    // init\n    getUserList();\n\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n\n      Component.popModal($scope, '添加', 'add-user-modal').result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n            getUserList();\n          }\n          else{\n            alert('添加失败');\n          }\n        })\n      });\n\n    }\n\n    $scope.searchUser = function(){\n      var username= $scope.username;\n      alert(username);\n      // http.getUser({\n      //   USERNAME: username,\n      // })then(function(result) {\n      //   if(200 == result.data.head.status){\n      //     $scope.users = result.data.body;\n      //     $scope.DepUserTotal =result.data.head.total;\n      //   }else {\n      //     alert(\"输入错误，请\");\n      //   }\n      //\n      // });\n    }\n\n    $scope.updateUser = function(user) {\n      user.DEP_NAME = null;\n      $scope.sysUser = user;\n      Component.popModal($scope, '修改', 'add-user-modal').result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getUserList();\n          }\n          else{\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n    $scope.deleteUser = function(user) {\n      console.log(user);\n      var fig = confirm(\"确定要删除吗？\");\n      if (fig) {\n        Http.deleteUser(user).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n            getUserList();\n          }\n          else{\n            alert('删除失败！');\n          }\n          getUserList();\n        })\n      }\n    }\n\n\n  }\n])\n\n\n/* HTTP */\nSystemUser.factory('Department.SystemUser.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getUserList() {\n      return $http.get(\n        path + '/user'\n      )\n    };\n    function getUser(params) {\n      return $http.get(\n        path + '/user', {\n          params: params\n        }\n\n      )\n    };\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/user', {\n          data: data\n        }\n      )\n    };\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/dep/'\n      )\n    }\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/user/' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/user', {\n            data: {\"ID\":data.ID}\n        }\n      )\n    }\n    return {\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUser:getUser\n    }\n  }\n]);\n\n/* Component */\nSystemUser.service('Department.SystemUser.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n"],"sourceRoot":"/source/"}