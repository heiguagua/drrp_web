{"version":3,"sources":["app.js","config.js","admin/department.js","admin/main.js","admin/user.js","common/dashboard.js","common/login.js","common/main.js","data-quota/detail.js","data-quota/list.js","data-quota/main.js","department/audit.js","department/inventory.js","department/main.js","department/requirement.js","department/share.js","department/user.js"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","$httpProvider","$provide","interceptors","push","$q","request","withCredentials","requestError","rejection","response","when","result","data","head","status","sessionStorage","message","window","location","href","responseError","otherwise","state","url","templateUrl","controller","cache","reload","run","$rootScope","$on","event","toState","toParams","fromState","fromParams","name","token","Config","constant","path","AdminDepartment","$scope","$stateParams","Http","Component","$uibModal","$state","getDepartmentList","_httpParams","then","AdminDepartments","body","getDepTotal","depTotal","number","Paging","totalItems","Modal","previousDepNames","areaNames","maxSize","itemsPerPage","limit","skip","pageChanged","currentPage","AllDepartments","getSysDict","dict_category","types","placeholder","dep_sn","order_by","dep_name","dep_short_name","dep_en_name","contacts","contact_phone","addDepartmentModal","department","parent_id","area_code","dep_type","promise","popModal","opened","TypeArea","index","_","findIndex","o","id","department1","validDepName","depName","deps","i","length","validPhone","reg","test","saveDepartment","alert","updateDepartment","AdminDep","remove","dep","deleteDepartment","flag","confirm","go","searchDepartment","sysdepname","total","factory","$http","API","params","get","post","put","service","popAlert","scope","info","Alerts","type","timeout","CloseAlert","splice","modalInstance","open","animation","backdrop","size","isValid","close","cancel","dismiss","Admin","$cookies","User","JSON","parse","titleName","AdminUser","getUserList","users","getUserTotal","dep_id","console","log","LoginUser","tatol","UserTotal","deptList","password","password1","personName","phone","email","addUserModal","sysUser","prom","validUser","user","username","validPword","validEmail","invalid","saveUser","updateUser","deleteUser","Password","password_1","password_2","password_3","password_pre","p2","validPword1","validatePassword","UpdatePassword","searchUser","sysusername","Dashboard","getDepartments","Bureaus","DataquotaSummary","getDataquotaSummary","DataRequirementSummary","getDataRequirementSummary","SummaryDataQuota","SummaryRequirement","getDataQuotaNew","NewIndicators","getDataRequirementNew","Requirements","select","param","departmentID","quota_dep_id","getDataQuota","followDepIndicators","results","getUserDep","followDeps","follow_dep_id","followDepId","directive","restrict","template","link","element","attr","summary","myChart","echarts","init","find","option","tooltip","trigger","formatter","series","radius","label","normal","position","textStyle","color","labelLine","show","value","department_number","department_number_inc","selected","data_quota_number","data_quota_number_inc","setOption","requiement_number","requiement_number_inc","QInventoryStatistic","DEPARTMENT","INVENTORY","REQUIREMENT","legend","xAxis","yAxis","min","max","interval","axisLabel","Login","alerts","msg","closeAlert","removeItem","submit","valid","loginSubmitted","login","loginUser","stringify","sessionToken","loginError","Main","DataQuotaDetail","getDataQuotaDetailByDepID","getDataQuotaExampleByDepID","dataquotaid","data_quota_id","DataQuotaExample","DataQuotaList","StateParams","getDataQuotaList","DataQuotas","DataQuotasTotal","count","getDataQuotaListByFilter","httpParams","currentDepID","initPaging","assign","currentDepName","currentDep","ShareLevelActiveAll","ShareFrequencyActiveAll","DataLevelActiveAll","Retrieval","searchTarget","quotaname","TargetDataQuotaName","DataQuotaApplyInfo","getDataQuotaApplyInfo","SHARE_FREQUENCY","DATA_LEVEL","SHARE_LEVEL","getSystemDictByCatagory","ShareLevels","ShareFrequencys","DataLevels","filterParams","ShareLevelFilter","ShareLevelActive","share_level","ShareFrequencyFilter","ShareFrequencyActive","share_frequency","sys_dict_id","DataLevelActive","DataLevelFilter","DataQuota","scrollTo","treeOptions","nodeChildren","dirSelectable","injectClasses","ul","li","liSelected","iExpanded","iCollapsed","iLeaf","labelSelected","menu","list","Audit","getAuditList","auditPromise","auditList","DeptAudit","searchDeptAuditByName","quota_name","quota_name_filter","TabExampShow","TabRequireShow","Tab","auditInfo","AuditInfo","audit_opinion","getQuotaDetail","DATAQUOTAID","AuditDetail","applydepname","APPLYDEPNAME","applytime","APPLYTIME","getQuotaExamples","res","DataQuotaExamples","DataTitle","file_content","title","DataColumn","column","getQuotaRequirement","reqRes","QuotaReqDetailList","tabSwitcher","num","auditExampData","requirementInfo","submitAudit","audit_status","ID","AUDITID","updateAuditDetail","auditError","DInventory","getDepartmentQuotaList","DEP_NAME","getDepartQuotaList","temp","replace","depQuotaList","DepartDataQuota","delay","minDuration","getShareLevelAll","shareLvMainSelection","getDataQuotaListBySl","item","idx","indexOf","getShareFreqAll","shareFreqSelection","getDataQuotaListBySF","getSpatialAll","areaMainSelection","getDataQuotaListByAP","searchDeptDataQuotaByName","deleteQuota","quotaId","deleteFlag","target","checked","deleteDataQuota","delete_flag","DATA_STORE_TYPE","DATA_SHOW_FORMAT","SECRET_FLAG","LEVEL_AUTH","STORE_TYPE_OTHER","DATA_SHOW_OTHER","DEP_ID","data_show_format_add","data_store_type_add","calculate_method","file_name","linkman","quotaTypeList","dataShowFormatList","secretFlagList","addQuota","submitted","DataQuotaAddObj","dataRelationConfig","dataQuotaApplyInfo","dataLevelSelection","dataQuota","forEach","sys_dict","dataQuotaId","obj_type","shareDeps","map","outputDeptList","share_dep","apply_dep","saveDataQuota","depShow","showHideDeps","ev","storeTypeOther","storeTypeChange","data_store_type","dataShowOther","dataShowChange","data_show_format","toggleDataLevelSelection","$sce","uploadPromise","htmlPopover","trustAsHtml","uploadFile","file","myFile","dir","toIndex","fd","FormData","uploadUrl","append","transformRequest","identity","headers","Content-Type","undefined","setTimeout","$parse","attrs","model","fileModel","modelSetter","parentIvntObj","bind","rgx","fileSuffix","files","ext","substring","lastIndexOf","fileNameError","$apply","Department","toFollowDep","depSelect","followDeptList","parentObj","outputAllDeptList","followDep","followDepts","userdep","mainAuditPromise","toAuditList","auditTotal","getDeptRequirementConfirmList","_httpConfirmParams","response_dep_id","mainReqPromise","getDepartmentRequirementList","requireToConfirmList","reqTotal","shareFrequencyList","shareLevelList","dataLevelList","getDepDataQuotaTotal","Count","auditMore","reqMore","getFollowDepList","uniq","getDepartmentFollowList","deptAllList","allItem","icon","outItem","ticked","$broadcast","openFn","DepartmentReq","getDeptRequirementList","reqPromise","requirementList","DeptRequirement","dataLevelReqSelection","toggleDataLevelReqSelection","publishReq","DepRequirment","_httpPublishParams","reqParent","req_sys_dict","datarequiementId","requiement_name","res_dep_id","dataRequiement","publishRequirement","searchDeptReqByName","req_name_filter","deleteReqFlag","deleteReq","deleteRequirement","reqConfirmPromise","requirementConfirmList","DeptRequirementConfirm","searchDeptReqConfirmByName","depQuotaReqList","toConfirm","ReqDetail","ReqResponse","errorMsg","dataQuotaIdNull","popModalConfirm","updateRequirement","saveReqResponse","requiement_id","saveResult","getReqDetail","data_requiement_id","getResponseList","modalInstanceConfirm","error","DepartmentShare","getDepartmentShareList","sharePromise","shareDataQuotaList","depShareList","getShareLevelAllForShare","shareLvShareSelection","getShareDataQuotaListBySl","getDataLevelAllForShare","dataLevelShareSelection","getShareDataQuotaListByAP","searchShareDataQuotaByName","followChange","depId","followDepartment","cancelFollowDepartment","SystemUser","DepUserTotal","fig","getUser"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n/* Bootstrap Application */\nvar app = angular.module('app', [\n  'Config',\n  'ui.router',\n  'ui.bootstrap',\n  'treeControl',\n  'isteven-multi-select',\n  'Login',\n  'Main',\n  'Dashboard',\n  'Admin',\n  'Admin.User',\n  'Admin.Department',\n  'Department',\n  'DataQuota',\n  'DataQuotaList',\n  'DataQuotaDetail',\n  'Department.Inventory',\n  'Department.Audit',\n  'Department.Requirement',\n  'DepartmentShare'\n]);\n\napp.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$provide',\n  function($stateProvider, $urlRouterProvider, $httpProvider, $provide) {\n    /** HTTP Interceptor */\n    $httpProvider.interceptors.push(['$q',\n      function($q) {\n        return {\n          'request': function(config) {\n            config.withCredentials = true;\n            return config;\n          },\n          'requestError': function(rejection) {\n            return rejection;\n          },\n          'response': function(response) {\n            $q.when(response, function(result){\n              if( response.data && typeof response.data==='object'){\n                if(result.data.head.status===300){\n                  sessionStorage.message = '登陆超时，请重新登陆！';\n                  window.location.href='/';\n                };\n              };\n            });\n            return response;\n          },\n          'responseError': function(rejection) {\n            return rejection;\n          }\n        };\n      }\n    ]);\n    /** Config Router */\n    $urlRouterProvider.otherwise('/login');\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        templateUrl: 'views/common/login.html',\n        controller: 'Login.Controller.Main'\n      })\n      .state('main', {\n        url: '/main',\n        templateUrl: 'views/common/main.html',\n        controller: 'Main.Controller.Main'\n      })\n      .state('main.dashboard', {\n        url: '/dashboard',\n        templateUrl: 'views/common/dashboard.html',\n        controller: 'Dashboard.Controller.Main'\n      })\n      .state('main.admin', {\n        url: '/admin',\n        templateUrl: 'views/admin/main.html',\n        controller: 'Admin.Controller.Main'\n      })\n      .state('main.admin.department', {\n        url: '/dashboard',\n        templateUrl: 'views/admin/department.html',\n        controller: 'Admin.Department.Controller.Main'\n      })\n      .state('main.admin.user', {\n        url: '/user',\n        templateUrl: 'views/admin/user.html',\n        controller: 'Admin.User.Controller.Main'\n      })\n      .state('main.data-quota', {\n        url: '/data-quota',\n        templateUrl: 'views/data-quota/main.html',\n        controller: 'DataQuota.Controller.Main'\n      })\n      .state('main.data-quota.list', {\n        url: '/list/:quota_dep_id/:dep_name',\n        templateUrl: 'views/data-quota/list.html',\n        controller: 'DataQuotaList.Controller.Main'\n      })\n      .state('main.data-quota.detail', {\n        url: '/detail/:data_quota_id',\n        templateUrl: 'views/data-quota/detail.html',\n        controller: 'DataQuotaDetail.Controller.Main'\n      })\n      .state('main.department', {\n        url: '/department',\n        cache:'false',\n        reload: true,\n        templateUrl: 'views/department/main.html',\n        controller: 'Department.Controller.Main'\n      })\n      .state('main.department.inventory', {\n        url: '/inventory',\n        cache:'false',\n        templateUrl: 'views/department/inventory.html',\n        controller: 'Department.Inventory.Controller.Main'\n      })\n      .state('main.department.inventory.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/inventory-publish.html',\n        controller: 'Department.Inventory.Controller.publish'\n      })\n      .state('main.department.inventory.detail', {\n        url: '/detail?ID',\n        cache:'false',\n        templateUrl: 'views/department/inventory-detail.html',\n        controller: 'Department.Inventory.Controller.detail'\n      })\n      .state('main.department.inventory.upload', {\n        url: '/upload?ID',\n        cache:'false',\n        templateUrl: 'views/department/inventory-upload.html',\n        controller: 'Department.Inventory.Controller.upload'\n      })\n      .state('main.department.share', {\n        url: '/share',\n        templateUrl: 'views/department/share.html',\n        controller: 'DepartmentShare.Controller.Main'\n      })\n      .state('main.department.share.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/share-detail.html',\n        controller: 'DepartmentShare.Controller.detail'\n      })\n      .state('main.department.requirementConfirm', {\n        url: '/requirement-confirm',\n        templateUrl: 'views/department/requirement-confirm.html',\n        controller: 'Department.Requirement.Controller.confirm'\n      })\n      .state('main.department.requirement', {\n        url: '/requirement',\n        templateUrl: 'views/department/requirement.html',\n        controller: 'Department.Requirement.Controller.Main'\n      })\n      .state('main.department.requirement.publish', {\n        url: '/publish',\n        templateUrl: 'views/department/requirement-publish.html'\n      })\n      .state('main.department.requirement.detail', {\n        url: '/detail?ID',\n        templateUrl: 'views/department/requirement-detail.html',\n        controller: 'Department.Requirement.Controller.detail'\n      })\n      .state('main.department.audit', {\n        url: '/audit',\n        cache:'false',\n        templateUrl: 'views/department/audit.html',\n        controller: 'Department.Audit.Controller.Main'\n      })\n      .state('main.department.audit.info', {\n        url: '/info/:AUDITID/:DATAQUOTAID/:APPLYDEPNAME/:APPLYTIME',\n        templateUrl: 'views/department/audit-info.html',\n        controller: 'Department.Audit.Controller.info'\n      })\n\n  }\n]);\n\napp.run(['$rootScope', function($rootScope){\n  $rootScope.$on('$stateChangeStart',\n    function(event, toState, toParams, fromState, fromParams){\n      if(toState.name!=='login'){\n        if(!sessionStorage.token){\n          window.location.href='/';\n        };\n      };\n    });\n}]);\n","'use strict';\n/* Application Configration */\nvar Config = angular.module('Config', []);\n\nConfig.constant('API', {\n  path: 'http://localhost:8080/drrp/api' //发布\n  // path: 'http://172.16.1.78:8080/api' //测试\n  // path: 'http://localhost:5001/api' //本机\n});\n","'use strict';\nvar AdminDepartment = angular.module('Admin.Department', ['ui.router']);\n\n/** DepartmentReq Controller */\nAdminDepartment.controller('Admin.Department.Controller.Main', ['$rootScope', '$scope', '$stateParams','AdminDepartment.Service.Http', 'AdminDepartment.Service.Component', '$uibModal', '$state',\n  function($rootScope, $scope, $stateParams, Http, Component, $uibModal, $state) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.previousDepNames = [];\n    $scope.areaNames = [];\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentList(_httpParams);\n    }\n    //pagination\n    function getDepartmentList(_httpParams) {\n      Http.getDepartmentList(_httpParams).then(function(result) {\n        $scope.AdminDepartments = result.data.body;\n      });\n    }\n\n    // init\n    getDepartmentList(_httpParams);\n    function getDepTotal(){\n      Http.getDepTotal({\n      }).then(function(result) {\n        $scope.depTotal = result.data.body[0].number;\n        $scope.Paging.totalItems = $scope.depTotal;\n      });\n    }\n    getDepTotal();\n    Http.getDepartmentList().then(function(result) {\n      $scope.AllDepartments = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"7\"\n    }).then(function(result) {\n      $scope.types = result.data.body;\n    });\n    Http.getSysDict({\n      dict_category:\"9\"\n    }).then(function(result) {\n      $scope.areaNames = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.dep_sn = \"必填\";\n    $scope.placeholder.order_by = \"必填\";\n    $scope.placeholder.dep_name = \"必填\";\n    $scope.placeholder.dep_short_name = \"必填\";\n    $scope.placeholder.dep_en_name = \"必填\";\n    $scope.placeholder.contacts = \"必填\";\n    $scope.placeholder.contact_phone = \"必填\";\n\n    // add Department\n    $scope.addDepartmentModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.department = {}; // Clean scope of modal\n      $scope.department.dep_en_name=\"anquanting.png\";\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      var promise = Component.popModal($scope, '添加', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n      });\n      promise.result.then(function() {\n        Http.saveDepartment($scope.department).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('添加失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getDepartmentList(_httpParams);\n          getDepTotal();\n        })\n      });\n    }\n    $scope.updateDepartment = function(AdminDep) {\n      $scope.department = AdminDep;\n      $scope.department.parent_id = \"0\";\n      $scope.department.area_code =\"c9cf130a-1e2f-11e6-ac02-507b9d1b58bb\";\n      $scope.department.dep_type = \"aa7772bb-10de-11e6-9b44-507b9d1b58bb\";\n      $scope.department.dep_en_name=\"anquanting.png\";\n      _.remove($scope.AllDepartments, function(dep) {\n        return (dep.dep_name == AdminDep.dep_name);\n     });\n      var promise = Component.popModal($scope, '修改', 'add-department-modal');\n      promise.opened.then(function() {\n        $scope.Modal.TypeArea = function(){\n          <!--parent_id is selected -->\n          if($scope.department.parent_id!=\"0\"){\n            var index = _.findIndex($scope.AllDepartments, function(o) { return o.id == $scope.department.parent_id; } );\n            $scope.department1 = $scope.AllDepartments[index];\n          }\n          <!--parent_id is selected -->\n        }\n        $scope.Modal.validDepName = function (depName){\n          $scope.validDepName = false;\n          $scope.placeholder.dep_name = \"必填\";\n          Http.getDepartmentList().then(function(result) {\n             var deps = result.data.body;\n             for (var i = 0; i < deps.length; i++) {\n               if(deps[i].dep_name === depName){\n                 $scope.validDepName = true;\n                 $scope.placeholder.dep_name =\"该部门已存在,请重新输入\";\n                 $scope.department.dep_name =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.contact_phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.department.contact_phone)&&($scope.department.contact_phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.contact_phone = \"电话格式不对\";\n            $scope.department.contact_phone =\"\";\n          }\n        }\n\n      });\n      promise.result.then(function() {\n        Http.updateDepartment($scope.department).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getDepartmentList(_httpParams);\n        })\n    });\n    }\n\n    $scope.deleteDepartment = function(AdminDep) {\n      var flag = confirm(\"确定要删除吗？\");\n      if (flag) {\n        Http.deleteDepartment(AdminDep).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n          }\n          else{\n            alert('删除失败！');\n          }\n          $state.go(\"main.admin.department\", {}, {\n            reload: true\n          });\n        })\n      }\n    }\n\n    //search department\n    $scope.searchDepartment = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.sysdepname = $scope.dep_name;\n      if($scope.dep_name==null){\n        getDepTotal();\n        getDepartmentList(_httpParams);\n      }else{\n        Http.getDepartmentList(_httpParams).then(function(result) {\n          if(result.data.head.total >=1){\n            $scope.AdminDepartments = result.data.body;\n            $scope.depTotal = result.data.head.total;\n            $scope.Paging.totalItems =  $scope.depTotal;\n          }else {\n            alert(\"系统没有查到'\"+$scope.dep_name+\"'这个部门，请重新输入\");\n            $scope.dep_name = \"\";\n            $state.go(\"main.admin.department\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n\n\n/* HTTP */\nAdminDepartment.factory('AdminDepartment.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params:params\n        }\n      )\n    };\n\n    function getDepTotal() {\n      return $http.get(\n        path + '/sys_dep/count'\n      )\n    };\n    function saveDepartment(data) {\n      return $http.post(\n        path + '/sys_dep', {\n          data: data\n        }\n      )\n    };\n    function getSysDict(params){\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    }\n    function updateDepartment(data) {\n      return $http.put(\n        path + '/sys_dep' , {\n          data: data\n        }\n      )\n    }\n    function deleteDepartment(data) {\n      return $http.delete(\n        path + '/sys_dep', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n\n    return {\n      getDepartmentList: getDepartmentList,\n      getDepTotal: getDepTotal,\n      saveDepartment: saveDepartment,\n      getSysDict: getSysDict,\n      updateDepartment: updateDepartment,\n      deleteDepartment: deleteDepartment\n    }\n  }\n]);\n\n/* Component */\nAdminDepartment.service('AdminDepartment.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.department\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Admin = angular.module('Admin', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdmin.controller('Admin.Controller.Main', ['$cookies', '$scope', '$stateParams',\n  function($cookies, $scope, $stateParams) {\n       var User = JSON.parse($cookies.get('User'));\n       if(User.id === \"e147f177-1e83-11e6-ac02-507b9d1b58bb\"){\n         $scope.titleName =\"用户/部门管理\";\n       }else{\n         $scope.titleName = \"用户管理\";\n       }\n  }\n])\n","'use strict';\nvar AdminUser = angular.module('Admin.User', ['ui.router','ngCookies']);\n\n/** DepartmentReq Controller */\nAdminUser.controller('Admin.User.Controller.Main', ['$cookies', '$scope', '$q', '$stateParams','AdminUser.Service.Http', 'AdminUser.Service.Component','$uibModal','$state',\n  function($cookies, $scope, $q, $stateParams, Http, Component, $uibModal, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_id);\n    var dep_name= ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : LoginUser.dep_name);\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit =10;\n    _httpParams.skip = 0;\n    _httpParams.dep_id = ((LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') ? null : dep_id);\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getUserList(_httpParams);\n    }\n\n\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n    function getUserList(_httpParams) {\n      Http.getUserList(_httpParams).then(function(result) {\n        $scope.users = result.data.body;\n      });\n    }\n    function getUserTotal(){\n      Http.getUserTotal({\n        \"dep_id\" : dep_id\n      }).then(function(result) {\n        console.log(LoginUser.id);\n        if (LoginUser.id==='e147f177-1e83-11e6-ac02-507b9d1b58bb') {\n          var tatol =  result.data.body[0].number - 1 ;\n          $scope.UserTotal = tatol;\n        }else {\n          $scope.UserTotal = result.data.body[0].number;\n        }\n        $scope.Paging.totalItems = $scope.UserTotal;\n      });\n    }\n    // init\n    getUserTotal();\n    getUserList(_httpParams);\n\n    //department\n    Http.getDepartmentList({\n      'dep_name': dep_name\n    }).then(function(result) {\n      $scope.deptList = result.data.body;\n    });\n\n    $scope.placeholder = {};\n    $scope.placeholder.name = \"必填\";\n    $scope.placeholder.password = \"必填\";\n    $scope.placeholder.password1 = \"必填\";\n    $scope.placeholder.personName = \"必填\";\n    $scope.placeholder.phone = \"必填\";\n    $scope.placeholder.email = \"必填\";\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n      var prom = Component.popModal($scope, '添加', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPword = function (){\n          $scope.placeholder.password1 =\"必填\";\n          $scope.validPword = false;\n          if($scope.sysUser.password!=$scope.sysUser.password1&&$scope.sysUser.password1!=null){\n            $scope.validPword = true;\n            $scope.placeholder.password1 =\"两次输入的密码不同,请重新输入\";\n            $scope.sysUser.password1 =\"\";\n          }\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&($scope.sysUser.phone!=null)){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n          }\n          else{\n            alert('保存数据库失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n\n\n\n    }\n    $scope.updateUser = function(user) {\n      $scope.sysUser = user;\n      $scope.sysUser.password1 =0;\n      $scope.sysUser.password = 0;\n      var prom = Component.popModal($scope, '修改', 'add-user-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validUser = function (user){\n          $scope.placeholder.name =\"必填\";\n          $scope.validUser = false;\n          Http.getUserList({\n            \"dep_id\":dep_id\n          }).then(function(result) {\n             var users = result.data.body;\n             for (var i = 0; i < users.length; i++) {\n               if(users[i].username === user){\n                 $scope.validUser = true;\n                 $scope.placeholder.name =\"用户名已存在,请重新输入\";\n                 $scope.sysUser.username =\"\";\n               }\n             }\n          });\n        }\n        $scope.Modal.validPhone = function (){\n          $scope.placeholder.phone = \"必填\";\n          $scope.validPhone = false ;\n          var reg =/^((\\d{11})|^((\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})|(\\d{4}|\\d{3})-(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1})|(\\d{7,8})-(\\d{4}|\\d{3}|\\d{2}|\\d{1}))$)/;\n          if(!reg.test($scope.sysUser.phone)&&$scope.sysUser.phone!=null){\n            $scope.validPhone = true ;\n            $scope.placeholder.phone = \"电话格式不对\";\n            $scope.sysUser.phone =\"\";\n          }\n        }\n        $scope.Modal.validEmail = function (invalid){\n          $scope.placeholder.email = \"必填\";\n          $scope.validEmail = false ;\n          if(invalid){\n            $scope.validEmail = true ;\n            $scope.placeholder.email = \"邮箱格式不对\";\n            $scope.sysUser.email =\"\";\n          }\n        }\n\n      });\n      prom.result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          getUserList(_httpParams);\n        })\n      });\n    }\n\n    $scope.deleteUser = function(user) {\n      var flag = confirm(\"确定要删除吗？\");\n      if (flag) {\n        Http.deleteUser(user).then(function(result) {\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n            getUserTotal();\n            getUserList(_httpParams);\n          }\n          else{\n            alert('删除失败！');\n          }\n          $state.go(\"main.admin.user\", {}, {\n            reload: true\n          });\n        })\n      }\n    }\n\n    $scope.Password = function(user) {\n      $scope.placeholder.password_1 = \"必填\";\n      $scope.placeholder.password_2 = \"必填\";\n      $scope.placeholder.password_3 = \"必填\";\n      var id = 0;\n      id = user.id;\n      $scope.Modal.password_pre = \"\";\n      $scope.Modal.p2 = \"\";\n      $scope.Modal.password = \"\";\n      $scope.password_1 = false;\n      $scope.password_2 = false;\n      $scope.password_3 = false;\n      var prom = Component.popModal($scope, '密码', 'update-password-modal');\n      prom.opened.then(function() {\n        $scope.Modal.validPword1 = function (){\n          $scope.password_1 = false;\n          $scope.placeholder.password_1 =\"必填\";\n          Http.validatePassword({\n            \"id\":id,\n            \"password\":$scope.Modal.password_pre\n          }).then(function(result) {\n            if(result.data.head.total == 0) {\n              $scope.password_1 = true;\n              $scope.placeholder.password_1 =\"原密码不对,请重新输入\";\n              $scope.Modal.password_pre = \"\";\n            }\n          });\n        }\n        $scope.Modal.validPword = function (){\n             $scope.password_3 = false;\n             $scope.placeholder.password_3 =\"必填\";\n             if($scope.Modal.p2!=$scope.Modal.password){\n               $scope.password_3 = true;\n               $scope.placeholder.password_3 = \"两次输入的密码不同,请重新输入\";\n               $scope.Modal.password =\"\";\n             }\n        }\n      });\n\n      prom.result.then(function() {\n        Http.UpdatePassword({\n          \"id\": id,\n          \"password\":$scope.Modal.password\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n          }\n          else{\n            alert('修改失败');\n          }\n          _httpParams.limit = 10;\n          _httpParams.skip = 0;\n          $scope.Paging.currentPage = 0 ;\n          getUserList(_httpParams);\n          getUserTotal();\n        })\n      });\n    }\n\n    //search user\n    $scope.searchUser = function(){\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      _httpParams.dep_id = dep_id;\n      _httpParams.sysusername = $scope.username;\n      if($scope.username==null){\n        getUserTotal();\n        getUserList(_httpParams);\n      }else{\n        Http.getUserList(_httpParams).then(function(result) {\n          if(result.data.head.total >= 1){\n            $scope.users = result.data.body;\n            $scope.UserTotal = result.data.head.total;\n            $scope.Paging.totalItems = $scope.UserTotal;\n          }else{\n            alert(\"系统没有查到'\"+$scope.username+\"'这个用户名，请重新输入\");\n            $state.go(\"main.admin.user\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n    }\n\n  }\n])\n\n/* HTTP */\nAdminUser.factory('AdminUser.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getUserList(params) {\n      return $http.get(\n        path + '/sys_user',{\n           params: params\n        }\n      )\n    };\n    function getUserTotal(params) {\n      return $http.get(\n        path + '/sys_user/count',{\n           params: params\n        }\n      )\n    };\n\n    function getDepartmentList(params) {\n      return $http.get(\n        path + '/sys_dep',{\n          params: params\n        }\n      )\n    }\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/sys_user', {\n          data: data\n        }\n      )\n    };\n\n\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/sys_user' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/sys_user', {\n            data: {\"id\":data.id}\n        }\n      )\n    }\n    function validatePassword(params){\n      return $http.get(\n        path + '/sys_user/password', {\n            params: params\n        }\n      )\n    }\n    function UpdatePassword(data) {\n      return $http.put(\n        path + '/sys_user/password' , {\n          data: data\n        }\n      )\n    }\n    return {\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUserTotal: getUserTotal,\n      validatePassword: validatePassword,\n      UpdatePassword: UpdatePassword\n    }\n  }\n]);\n\n/* Component */\nAdminUser.service('AdminUser.Service.Component', ['$uibModal','$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'md'\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        $state.go(\"main.admin.user\", {}, {\n          reload: true\n        });\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n","'use strict';\nvar Dashboard = angular.module('Dashboard', ['ui.router','ui.bootstrap']);\n\n/** Dashboard Controller */\nDashboard.controller('Dashboard.Controller.Main', ['$scope', 'Dashboard.Service.Http',\n  function($scope, Http) {\n    <!-- Bureaus logo grid -->\n    Http.getDepartments().then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Bureaus = result.data.body;\n      }\n    });\n    <!-- #Bureaus logo grid -->\n\n    <!-- ECharts -->\n    $scope.DataquotaSummary = Http.getDataquotaSummary();\n    $scope.DataRequirementSummary = Http.getDataRequirementSummary();\n    Http.getDataquotaSummary().then(function(result){\n      $scope.SummaryDataQuota = result.data.body[0];\n    })\n    Http.getDataRequirementSummary().then(function(result){\n      $scope.SummaryRequirement = result.data.body[0];\n    })\n    <!-- #ECharts -->\n\n    <!-- DataQuota & Requirement Summary -->\n    Http.getDataQuotaNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.NewIndicators = result.data.body;\n      }\n    });\n    Http.getDataRequirementNew({\n      skip: 0, limit: 7\n    }).then(function(result) {\n      if (200 == result.data.head.status) {\n        $scope.Requirements = result.data.body;\n      }\n    });\n    <!-- #DataQuota & Requirement Summary -->\n\n    <!-- DataQuota for Concerned Departments -->\n    // Handle Selected Department\n    $scope.select = function(param){\n      $scope.departmentID = {quota_dep_id: param};\n      Http.getDataQuota({\n        skip: 0, limit: 5,  dep_name: param\n      }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n      });\n    }\n    // Generoted Department\n    Http.getUserDep().then(function(result) {\n        if (200 === result.data.head.status && result.data.body.length !== 0) {\n          $scope.followDeps = result.data.body;\n          return result.data.body[0].follow_dep_id;\n        }\n      }).then(function(followDepId){\n        Http.getDataQuota({\n          skip: 0,\n          limit: 5,\n          dep_name: followDepId\n        }).then(function(result){\n          $scope.followDepIndicators = result.data.body[0].results;\n        });\n     });\n     <!-- #DataQuota for Concerned Departments -->\n\n }\n])\n\n/* HTTP Factory */\nDashboard.factory('Dashboard.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaNew(params) {\n      return $http.get(\n        path + '/data_quota/new', {params: params}\n      )\n    };\n    function getDataRequirementNew(params) {\n      return $http.get(\n        path + '/data_requiement/new', {params: params}\n      )\n    };\n    function getDepartments() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    };\n    function getDataquotaSummary(){\n      return $http.get(\n        path + '/data_quota/summary'\n      )\n    };\n    function getDataRequirementSummary(){\n      return $http.get(\n        path + '/data_requiement/summary'\n      )\n    };\n    function getUserDep(params){\n      return $http.get(\n        path + '/user_dep',{params: params}\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/data_quota',{params: params}\n      )\n    };\n\n    return {\n      getDataQuotaNew: getDataQuotaNew,\n      getDataRequirementNew: getDataRequirementNew,\n      getDepartments: getDepartments,\n      getDataquotaSummary: getDataquotaSummary,\n      getDataRequirementSummary: getDataRequirementSummary,\n      getUserDep: getUserDep,\n      getDataQuota: getDataQuota\n    };\n\n  }\n]);\n\n/** Dashboard Directive */\nDashboard.directive('wiservDataQuotaOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataquotaSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '指标提供部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '60%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: summary.department_number,\n                  name: '指标提供部门'\n                }, {\n                  value: summary.department_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '指标总数',\n                type: 'pie',\n                radius: ['70%', '85%'],\n                data: [{\n                  value: summary.data_quota_number,\n                  name: '指标总数'\n                }, {\n                  value: summary.data_quota_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservRequirementOverviewChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:300;height:155px;position:relative;top:-8px'></div>\",\n      link: function(scope, element, attr) {\n        scope.DataRequirementSummary.then(function(result) {\n          if (200 == result.data.head.status) {\n            var summary = result.data.body[0];\n            var myChart = echarts.init((element.find('div'))[0]);\n            var option = {\n              tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n              },\n              series: [{\n                name: '需求涉及部门',\n                type: 'pie',\n                // selectedMode: 'single',\n                radius: [0, '60%'],\n                label: {\n                  normal: {\n                    position: 'inner',\n                    textStyle :{\n                        color:'#FFAD38'\n                      }\n                  }\n                },\n                labelLine: {\n                  normal: {\n                    show: false\n                  }\n                },\n                data: [{\n                  value: summary.department_number,\n                  name: '需求涉及部门'\n                }, {\n                  value: summary.department_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }, {\n                name: '需求总数',\n                type: 'pie',\n                radius: ['70%', '85%'],\n                data: [{\n                  value: summary.requiement_number,\n                  name: '需求总数'\n                }, {\n                  value: summary.requiement_number_inc,\n                  name: '本月新增',\n                  selected: true\n                }]\n              }]\n            };\n            myChart.setOption(option);\n          }\n        });\n      }\n    };\n  }\n]);\n\nDashboard.directive('wiservStatisticChart', [\n  function() {\n    return {\n      restrict: 'AE',\n      template: \"<div style='width:100%;height:240px;'></div>\",\n      link: function(scope, element, attr) {\n        scope.QInventoryStatistic.then(function(result) {\n          var DEPARTMENT = result.data.body[0];\n          var INVENTORY = result.data.body[1];\n          var REQUIREMENT = result.data.body[2];\n          var myChart = echarts.init((element.find('div'))[0]);\n          var option = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['指标', '需求']\n            },\n            xAxis: [{\n              type: 'category',\n              name: '数量',\n              data: DEPARTMENT.DEPARTMENT\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '单位',\n              min: 0,\n              max: 30,\n              interval: 30,\n              axisLabel: {\n                formatter: '{value} 个'\n              }\n            }],\n            series: [{\n              name: '指标',\n              type: 'bar',\n              data: INVENTORY.INVENTORY\n            }, {\n              name: '需求',\n              type: 'bar',\n              data: REQUIREMENT.REQUIREMENT\n            }]\n          };\n          myChart.setOption(option);\n        });\n\n      }\n    };\n  }\n]);\n","'use strict';\nvar Login = angular.module('Login', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nLogin.controller('Login.Controller.Main', ['$rootScope', '$cookies', '$scope', '$state', 'Login.Service.Http',\n  function($rootScope, $cookies, $scope, $state, Http) {\n    // Decide login or session delay\n    if(sessionStorage.message){\n      $scope.alerts = [\n        {type: 'danger', msg: sessionStorage.message}\n      ];\n      $scope.closeAlert = function(index) {\n        $scope.alerts.splice(index, 1);\n      };\n      sessionStorage.removeItem('message');\n    }\n    // Login validation\n    $scope.Login = {};\n    $scope.Login.submit = function(valid) {\n      $scope.loginSubmitted = false;\n      if (valid) {\n        var username = $scope.Login.username;\n        var password = $scope.Login.password;\n        Http.login({\n          username: username,\n          password: password\n        }).then(function(result) {\n          var loginUser = result.data.body[0];\n          $rootScope.User = loginUser;\n          $cookies.put('User', JSON.stringify(loginUser));\n          var sessionToken = result.data.head.token;\n          if(sessionToken){\n            sessionStorage.token = sessionToken;\n          }\n          if (200 == result.data.head.status) {\n            $state.go(\"main.dashboard\");\n          } else {\n            $scope.loginError = true;\n          }\n        });\n      } else {\n        $scope.loginSubmitted = true;\n      }\n    }\n  }\n]);\n\n/* HTTP Factory */\nLogin.factory('Login.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function login(params) {\n      return $http.get(\n        path + '/login', {\n          params: params\n        }\n      )\n    };\n    return {\n      login: login\n    }\n  }\n]);\n","'use strict';\nvar Main = angular.module('Main', ['ui.router', 'ngCookies']);\n\n/** Main Controller */\nMain.controller('Main.Controller.Main', ['$scope', '$cookies',\n  function($scope, $cookies) {\n    $scope.User = JSON.parse($cookies.get('User'));\n  }\n]);\n","'use strict';\nvar DataQuotaDetail = angular.module('DataQuotaDetail', ['ui.router']);\n\n/** Main Controller */\nDataQuotaDetail.controller('DataQuotaDetail.Controller.Main', ['$scope', '$state', 'DataQuotaDetail.Service.Http', '$stateParams',\n  function($scope, $state, Http, $stateParams) {\n    // Data Quota Detail\n    Http.getDataQuotaDetailByDepID(\n      $stateParams\n    ).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n    });\n    // Data Quota Example\n    Http.getDataQuotaExampleByDepID(\n      {dataquotaid: $stateParams.data_quota_id}\n    ).then(function(result) {\n      $scope.DataQuotaExample = result.data.body[0];\n    });\n\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaDetail.factory('DataQuotaDetail.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getDataQuotaDetailByDepID(params){\n      return $http.get(\n        path + '/data_quota_detail', { params: params }\n      )\n    };\n    function getDataQuotaExampleByDepID(params){\n      return $http.get(\n        path + '/examples_detail', { params: params }\n      )\n    };\n    return {\n      getDataQuotaDetailByDepID: getDataQuotaDetailByDepID,\n      getDataQuotaExampleByDepID: getDataQuotaExampleByDepID\n    }\n  }\n]);\n","'use strict';\nvar DataQuotaList = angular.module('DataQuotaList', ['ui.router']);\n\n/** Main Controller */\nDataQuotaList.controller('DataQuotaList.Controller.Main', ['$scope', '$state', 'DataQuotaList.Service.Http', '$stateParams',\n  function($scope, $state, Http, StateParams) {\n    // Get the parameters form ui-router\n    var currentDepID = {quota_dep_id:StateParams.quota_dep_id};\n    var currentDepName = {dep_name:StateParams.dep_name};\n    // Selected department name\n    $scope.currentDep = currentDepName.dep_name;\n    // Params for pagin\n    var initPaging = {limit:10, skip: 0};\n    $scope.Paging = {};\n    $scope.Paging.currentPage = 1;\n    $scope.Paging.itemsPerPage = 10;\n    $scope.Paging.pageChanged = function() {\n      var httpParams = {};\n      _.assign(httpParams, currentDepID, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n      getDataQuotaList(httpParams);\n    };\n    // Get data quota list\n    function getDataQuotaList(_httpParams){\n      Http.getDataQuota(_httpParams).then(function(result) {\n        $scope.DataQuotas = result.data.body[0].results;\n        $scope.DataQuotasTotal = result.data.body[0].count;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    };\n    // Init data quota talbe\n    (function initDataQuotaList(){\n        /* Init selected status for filter */\n        $scope.ShareLevelActiveAll = $scope.ShareFrequencyActiveAll = $scope.DataLevelActiveAll = 'active';\n        /* Init ajax parameters*/\n        var httpParams = {};\n        (currentDepID==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n        getDataQuotaList(httpParams);\n    })();\n    // Fetch data quota list by filter\n    function getDataQuotaListByFilter(params){\n      var httpParams = {};\n      (currentDepID.dep_name==='') ? (httpParams = initPaging) : (httpParams = _.assign(httpParams, currentDepID, initPaging));\n      _.assign(httpParams, params);\n      getDataQuotaList(httpParams);\n    };\n    // Search for Data Quota Name\n    $scope.Retrieval = function(){\n      var httpParams = {};\n      var searchTarget = {quotaname: $scope.TargetDataQuotaName};\n      (currentDepID==='') ? (_.assign(httpParams, initPaging, searchTarget)) : (_.assign(httpParams, currentDepID, initPaging, searchTarget));\n      getDataQuotaList(httpParams);\n    };\n    // Data quota apply info\n    $scope.DataQuotaApplyInfo = function(data_quota_id) {\n      Http.getDataQuotaApplyInfo({data_quota_id: data_quota_id}).then(function() {\n        alert('申请查看成功');\n        var httpParams = {};\n        _.assign(httpParams, {limit:10, skip: ($scope.Paging.currentPage-1) * 10});\n        getDataQuotaList(httpParams);\n      });\n    };\n    // Filter generator\n    var SHARE_FREQUENCY = 1,\n        DATA_LEVEL = 2,\n        SHARE_LEVEL = 3;\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.ShareLevels = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.ShareFrequencys = result.data.body;\n    });\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.DataLevels = result.data.body;\n    });\n    // Handle above filter\n    var filterParams = {};\n    /* 共享级别 */\n    $scope.ShareLevelFilter = function(id, index){\n      $scope.ShareLevelActive = [];\n      $scope.ShareLevelActiveAll = '';\n      $scope.ShareLevelActive[index] = 'active';\n      filterParams.share_level = id;\n      if('ALL'===id){\n        delete filterParams.share_level;\n        $scope.ShareLevelActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 共享频率 */\n    $scope.ShareFrequencyFilter = function(id, index){\n      $scope.ShareFrequencyActive = [];\n      $scope.ShareFrequencyActiveAll = '';\n      $scope.ShareFrequencyActive[index] = 'active';\n      filterParams.share_frequency = id;\n      if('ALL'===id){\n        delete filterParams.share_frequency;\n        $scope.ShareFrequencyActiveAll = 'active';\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        getDataQuotaListByFilter(filterParams);\n      }\n    };\n    /* 分地区数据级别 */\n    filterParams.sys_dict_id = [];\n    $scope.DataLevelActive = [];\n    $scope.DataLevelFilter = function(id, index){\n      if('ALL'===id){\n        filterParams.sys_dict_id = [];\n        $scope.DataLevelActiveAll = 'active';\n        $scope.DataLevelActive=[];\n        getDataQuotaListByFilter(filterParams);\n      }else{\n        $scope.DataLevelActiveAll = '';\n        ($scope.DataLevelActive[index]==='active')?($scope.DataLevelActive[index]=''):($scope.DataLevelActive[index]='active');\n        filterParams.sys_dict_id.push(id);\n        getDataQuotaListByFilter(filterParams);\n      };\n    };\n  }\n]);\n\n\n/* HTTP Factory */\nDataQuotaList.factory('DataQuotaList.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', { params: params }\n      )\n    };\n    function getDataQuota(params){\n      return $http.get(\n        path + '/data_quota/sys_dict', { params: params }\n      )\n    };\n    function getDataQuotaApplyInfo(data){\n      return $http.post(\n        path + '/data_quota_apply_info', { data: data }\n      )\n    };\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getDataQuotaApplyInfo: getDataQuotaApplyInfo,\n      getDataQuota: getDataQuota\n    }\n  }\n]);\n","'use strict';\nvar DataQuota = angular.module('DataQuota', ['ui.router']);\n\n/** Main Controller */\nDataQuota.controller('DataQuota.Controller.Main', ['$scope', '$state', 'DataQuota.Service.Http',\n  function($scope, $state, Http) {\n    window.scrollTo(0,0);\n    // Menu configration\n    $scope.treeOptions = {\n      nodeChildren: \"nodes\",\n      dirSelectable: false,\n      injectClasses: {\n        ul: \"a1\",\n        li: \"a2\",\n        liSelected: \"a7\",\n        iExpanded: \"a3\",\n        iCollapsed: \"a4\",\n        iLeaf: \"a5\",\n        label: \"a6\",\n        labelSelected: \"a8\"\n      }\n    }\n    // Menu Generator\n    Http.menu().then(function(result) {\n      if (200 === result.data.head.status) {\n        $scope.list = result.data.body;\n      }\n    })\n  }\n]);\n\n/* DataQuota Http Factory */\nDataQuota.factory('DataQuota.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function menu(params) {\n      return $http.get(\n        path + '/menu', { params: params }\n      )\n    };\n    return {\n      menu: menu\n    }\n  }\n]);\n","'use strict';\nvar Audit = angular.module('Department.Audit', ['ui.router']);\n\n/** Main Controller */\nAudit.controller('Department.Audit.Controller.Main', ['$scope', '$q', 'Department.Audit.Service.Http',\n  function($scope, $q, Http) {\n    $scope.DeptAudit = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getAuditList(_httpParams);\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      $scope.auditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.auditList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n    $scope.searchDeptAuditByName = function() {\n      _httpParams.quota_name = $scope.DeptAudit.quota_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getAuditList();\n    }\n\n\n  }\n])\n\n\nAudit.controller('Department.Audit.Controller.info', ['$scope', '$state', '$q', 'Department.Audit.Service.Http', '$stateParams',\n  function( $scope, $state, $q, Http, $stateParams) {\n    $scope.TabExampShow = true;\n    $scope.TabRequireShow = true;\n    $scope.Tab = {};\n    $scope.Tab.show = {};\n    $scope.Tab.show.auditInfo = true;\n    $scope.AuditInfo = {};\n    $scope.AuditInfo.audit_opinion = '';\n\n    // get audit detail by id\n    Http.getQuotaDetail({\n      data_quota_id: $stateParams.DATAQUOTAID\n    }).then(function(result) {\n      $scope.AuditDetail = result.data.body[0];\n      $scope.AuditDetail.applydepname = $stateParams.APPLYDEPNAME;\n      $scope.AuditDetail.applytime = $stateParams.APPLYTIME;\n      console.log($scope.AuditDetail);\n      Http.getQuotaExamples({\n        dataquotaid: $stateParams.DATAQUOTAID\n      }).then(function(res) {\n        $scope.DataQuotaExamples = res.data.body[0];\n        if (res.data.head.total == 0) {\n          $scope.TabExampShow = false;\n        }\n        else{\n          $scope.DataTitle = $scope.DataQuotaExamples.file_content.title;\n          $scope.DataColumn = $scope.DataQuotaExamples.file_content.column;\n        }\n        Http.getQuotaRequirement({\n          dataquotaid: $stateParams.DATAQUOTAID\n        }).then(function(reqRes) {\n\n          if(reqRes.data.body.length == 0) {\n            $scope.TabRequireShow = false;\n          }\n          else {\n            $scope.QuotaReqDetailList = reqRes.data.body;\n          }\n\n        })\n\n      })\n    })\n\n\n    $scope.tabSwitcher = function(num) {\n      switch (num) {\n        case 'auditInfo':\n          $scope.Tab.show = {};\n          $scope.Tab.show.auditInfo = true;\n          break;\n        case 'auditExampData':\n          $scope.Tab.show = {};\n          $scope.Tab.show.auditExampData = true;\n          break;\n        case 'requirementInfo':\n          $scope.Tab.show = {};\n          $scope.Tab.show.requirementInfo = true;\n          break;\n        default:\n        case 2:\n          $scope.Tab = {};\n          $scope.Tab.auditInfo.show = true;\n          break;\n\n      }\n    }\n\n\n\n    $scope.submitAudit = function() {\n      console.log($scope.AuditInfo.audit_status);\n      if(!$scope.AuditInfo.audit_status) {\n        $scope.auditError = true;\n        return;\n      }\n      $scope.AuditInfo.ID = $stateParams.AUDITID;\n      Http.updateAuditDetail($scope.AuditInfo).then(function(result) {\n        if (200 == result.data.head.status) {\n          alert('审核成功');\n          $state.go(\"main.department.audit\", {}, {\n            reload: true\n          });\n        } else {\n          alert('审核失败');\n        }\n      });\n    }\n  }\n])\n\n/* HTTP */\nAudit.factory('Department.Audit.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/opendata_quotalist', {\n          params: params\n        }\n      )\n    }\n\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function updateAuditDetail(data) {\n      return $http.put(\n        path + '/data_quota_apply_info', {\n          data: data\n        }\n      )\n    }\n\n    function getQuotaExamples(params) {\n      return $http.get(\n        path + '/examples_detail', {\n          params: params\n        }\n      )\n    }\n    function getQuotaRequirement(params) {\n      return $http.get(\n        path + '/requiement_detail', {\n          params: params\n        }\n      )\n    }\n    return {\n      getAuditList: getAuditList,\n      getQuotaDetail: getQuotaDetail,\n      updateAuditDetail: updateAuditDetail,\n      getQuotaExamples: getQuotaExamples,\n      getQuotaRequirement: getQuotaRequirement\n    }\n  }\n]);\n","'use strict';\nvar DInventory = angular.module('Department.Inventory', ['ui.router', 'ngCookies', 'cgBusy']);\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $q, Http) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_NAME = LoginUser.dep_id;\n    $scope.DepartDataQuota = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    $scope.delay = 0;\n    $scope.minDuration = 0;\n    $scope.message = '加载中...';\n    $scope.backdrop = true;\n    $scope.promise = null;\n\n    function getDepartmentQuotaList(_httpParams) {\n      _httpParams.dep_name = DEP_NAME;\n      $scope.promise = Http.getDepartQuotaList(_httpParams).then(function(result) {\n        console.log(result);\n        var temp = _.replace('  Hi', ' ', '0');\n        console.log(temp);\n        $scope.depQuotaList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n\n    //init\n    getDepartmentQuotaList(_httpParams);\n\n    // share level all\n    $scope.getShareLevelAll = function() {\n      $scope.shareLvMainSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvMainSelection = [];\n    $scope.getDataQuotaListBySl = function(item) {\n      var idx = $scope.shareLvMainSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvMainSelection = [];\n      } else {\n        $scope.shareLvMainSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // share frequency all\n    $scope.getShareFreqAll = function() {\n      $scope.shareFreqSelection = [];\n      _httpParams.share_frequency = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // filter by share frequency\n    $scope.shareFreqSelection = [];\n    $scope.getDataQuotaListBySF = function(item) {\n      var idx = $scope.shareFreqSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareFreqSelection = [];\n      } else {\n        $scope.shareFreqSelection = item.id;\n      }\n      _httpParams.share_frequency = $scope.shareFreqSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n\n    // get spatial all\n    $scope.getSpatialAll = function() {\n      $scope.areaMainSelection = [];\n      _httpParams.sys_dict_id = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.areaMainSelection = [];\n    $scope.getDataQuotaListByAP = function(item) {\n      var idx = $scope.areaMainSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.areaMainSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.areaMainSelection.push(item.id);\n      }\n\n      _httpParams.sys_dict_id = $scope.areaMainSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchDeptDataQuotaByName = function() {\n      _httpParams.quota_name = $scope.DepartDataQuota.quota_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentQuotaList(_httpParams);\n    }\n\n    // delete data quota\n    $scope.deleteQuota = function(event, quotaId) {\n      var deleteFlag = event.target.checked;\n      Http.deleteDataQuota({\n        id: quotaId,\n        delete_flag: deleteFlag ? 'true' : 'false'\n      }).then(function(result) {\n        if (200 == result.data.head.status) {\n\n        }\n      })\n    }\n  }\n])\n\n/** Inventory Controller */\nDInventory.controller('Department.Inventory.Controller.detail', ['$scope', '$q', 'Department.Inventory.Service.Http', '$stateParams', '$state',\n  function($scope, $q, Http, $stateParams, $state) {\n    console.log($stateParams.ID);\n    Http.getQuotaDetail({\n      data_quota_id: $stateParams.ID\n    }).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n      Http.getQuotaExamples({\n        dataquotaid: $stateParams.ID\n      }).then(function(res) {\n        $scope.DataQuotaExamples = res.data.body[0];\n        $scope.DataTitle = $scope.DataQuotaExamples.file_content.title;\n        $scope.DataColumn = $scope.DataQuotaExamples.file_content.column;\n        console.log($scope.DataTitle);\n        console.log($scope.DataColumn);\n      })\n    })\n  }\n])\n\nDInventory.controller('Department.Inventory.Controller.publish', ['$cookies', '$scope', '$state', '$q', '$uibModal', 'Department.Inventory.Service.Component', 'Department.Inventory.Service.Http',\n  function($cookies, $scope, $state, $q, $uibModal, Component, Http) {\n    var DATA_STORE_TYPE = 4;\n    var DATA_SHOW_FORMAT = 6;\n    var SECRET_FLAG = 5;\n    var LEVEL_AUTH = '250375bd-02f0-11e6-a52a-5cf9dd40ad7e';\n    var STORE_TYPE_OTHER = '25098ff3-02f0-11e6-a52a-5cf9dd40ad7e';\n    var DATA_SHOW_OTHER = '2515e9b5-02f0-11e6-a52a-5cf9dd40ad7e';\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DEP_NAME = LoginUser.dep_name;\n    $scope.DataQuota = {};\n    $scope.DataQuota.data_show_format_add = '';\n    $scope.DataQuota.data_store_type_add = '';\n    $scope.DataQuota.calculate_method = '';\n    $scope.DataQuota.file_name = '';\n    $scope.DataQuota.linkman = '';\n    $scope.DataQuota.contact_phone = '';\n\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_STORE_TYPE\n    }).then(function(result) {\n      $scope.quotaTypeList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_SHOW_FORMAT\n    }).then(function(result) {\n      $scope.dataShowFormatList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SECRET_FLAG\n    }).then(function(result) {\n      $scope.secretFlagList = result.data.body;\n    });\n\n    $scope.close = function(isValid) {\n      $state.go(\"main.department.inventory\", {}, {\n        reload: true\n      });\n    }\n\n    // submit add\n    $scope.addQuota = function(isValid) {\n      $scope.submitted = false;\n      var DataQuotaAddObj = {};\n      var dataRelationConfig = [];\n      var dataQuotaApplyInfo = [];\n      if (isValid) {\n\n        console.log($scope.dataLevelSelection);\n        DataQuotaAddObj.dataQuota = $scope.DataQuota;\n\n        _($scope.dataLevelSelection).forEach(function(value) {\n          var sys_dict = {};\n          sys_dict.dataQuotaId = $scope.DataQuota.quota_name;\n          sys_dict.sys_dict_id = value;\n          sys_dict.obj_type = 1;\n          dataRelationConfig.push(sys_dict);\n        });\n\n        var shareDeps = _.map($scope.outputDeptList, 'id');\n        _(shareDeps).forEach(function(value) {\n          var share_dep = {};\n          share_dep.dataQuotaId = $scope.DataQuota.quota_name;\n          share_dep.apply_dep = value;\n          dataQuotaApplyInfo.push(share_dep);\n        });\n\n        DataQuotaAddObj.dataRelationConfig = dataRelationConfig;\n        DataQuotaAddObj.dataQuotaApplyInfo = dataQuotaApplyInfo;\n\n        console.log(DataQuotaAddObj);\n        Http.saveDataQuota(DataQuotaAddObj).then(function(result) {\n            console.log(result.data);\n            if (200 == result.data.head.status) {\n              $scope.Modal = {};\n\n              var modalInstance = Component.popModal($scope, 'Department.Inventory.Controller.publish', '', 'import-example-modal').result.then(function(res) {\n                $state.go(\"main.department.inventory.upload\", {\n                  ID: result.data.body[0].id\n                }, {\n                  reload: true\n                });\n\n              })\n\n            }\n            else{\n              alert('保存失败');\n              // $state.go(\"main.department.inventory\", {}, {\n              //   reload: true\n              // });\n            }\n          })\n          // .then(function() {\n          //   $state.go(\"main.department.inventory\", {}, {\n          //     reload: true\n          //   });\n          // })\n      }\n      else{\n        $scope.submitted = true;\n      }\n    }\n\n\n    // show or hide department\n    $scope.depShow = false;\n    $scope.showHideDeps = function(ev) {\n      if (LEVEL_AUTH == $scope.DataQuota.share_level) {\n        $scope.depShow = true;\n      } else {\n        $scope.depShow = false;\n      }\n    }\n\n    $scope.storeTypeOther = false;\n    $scope.storeTypeChange = function() {\n      if (STORE_TYPE_OTHER == $scope.DataQuota.data_store_type) {\n        $scope.storeTypeOther = true;\n      } else {\n        $scope.storeTypeOther = false;\n      }\n    }\n\n    $scope.dataShowOther = false;\n    $scope.dataShowChange = function() {\n      if (DATA_SHOW_OTHER == $scope.DataQuota.data_show_format) {\n        $scope.dataShowOther = true;\n      } else {\n        $scope.dataShowOther = false;\n      }\n    }\n\n    $scope.dataLevelSelection = [];\n    $scope.toggleDataLevelSelection = function(item) {\n      var idx = $scope.dataLevelSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelSelection.push(item.id);\n      }\n    };\n  }\n\n])\n\n// upload file\nDInventory.controller('Department.Inventory.Controller.upload', ['$scope', '$q', 'Department.Inventory.Service.Http', '$stateParams', '$state', '$sce',\n    function($scope, $q, Http, $stateParams, $state ,$sce) {\n      $scope.uploadPromise = null;\n\n      $scope.htmlPopover = $sce.trustAsHtml(\"<table class='table table-hover table-striped '>\"+\n        \"<thead><tr><th>序号</th><th>城市</th><th>GDP(亿元)</th><th>增长</th>\"+\n        \"<th>地方公共财政收入(亿元)</th><th>增长</th><th>城镇登记失业率</th>\"+\n        \"<th>农村居民人均纯收入(元)</th><th>增长</th></tr></thead>\"+\n        \"<tbody><tr><td>1</td><td>成都</td><td>9000</td><td>8.54%</td><td>8000</td><td>7.51%</td>\"+\n        \"<td>1.39</td><td>5678</td><td>3.40%</td></tr>\"+\n        \"</tbody></table>\");\n\n      $scope.uploadFile = function() {\n        var file = $scope.myFile;\n        console.log('file is ');\n        console.dir(file);\n        if (!file) {\n          alert('您还未选择文件');\n          return;\n        }\n        $scope.uploadPromise = Http.uploadFile(file, $stateParams.ID).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('上传成功!');\n            $state.go(\"main.department.inventory\", {}, {\n              reload: true\n            });\n          }\n        });\n      }\n\n      $scope.toIndex = function() {\n        $state.go(\"main.department.inventory\", {}, {\n          reload: true\n        });\n      }\n    }\n  ])\n  /* HTTP */\nDInventory.factory('Department.Inventory.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function getDepartQuotaList(params) {\n      return $http.get(\n        path + '/data_quota', {\n          params: params\n        }\n      )\n    }\n\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function saveDataQuota(data) {\n      return $http.post(\n        path + '/data_quota', {\n          data: data\n        }\n      )\n    };\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getQuotaExamples(params) {\n      return $http.get(\n        path + '/examples_detail', {\n          params: params\n        }\n      )\n    }\n\n    function uploadFile(file, id) {\n      var fd = new FormData();\n      var uploadUrl = path + '/upload/excel?data_quota_id=' + id;\n      fd.append('file', file);\n      var promise = $http.post(uploadUrl, fd, {\n        transformRequest: angular.identity,\n        headers: {\n          'Content-Type': undefined\n        }\n      });\n      return promise;\n    }\n\n    function deleteDataQuota(id) {\n      return $http.put(\n        path + '/data_quota_delete_flag', {\n          data: id\n        }\n      )\n    }\n    return {\n      saveDataQuota: saveDataQuota,\n      getDepartmentList: getDepartmentList,\n      getDepartQuotaList: getDepartQuotaList,\n      getQuotaDetail: getQuotaDetail,\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      uploadFile: uploadFile,\n      getQuotaExamples: getQuotaExamples,\n      deleteDataQuota: deleteDataQuota\n    }\n  }\n]);\n\n\n\n/* Component */\nDInventory.service('Department.Inventory.Service.Component', ['$uibModal', '$state',\n  function($uibModal,$state) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, controller, type, templateUrl) {\n      //scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        controller: controller,\n        scope: scope\n      });\n      scope.Modal.confirm = function() {\n        modalInstance.close(scope.Modal);\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n        setTimeout(function(){\n          alert('保存成功！');\n          $state.go(\"main.department.inventory\", {}, {\n            reload: true\n          });\n        },600)\n\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n\n\nDInventory.directive('fileModel', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var model = $parse(attrs.fileModel);\n      var modelSetter = model.assign;\n      scope.parentIvntObj = {};\n      element.bind('change', function() {\n        var rgx=/(xls|xlsx)/i;\n        var fileSuffix = element[0].files[0].name;\n        var ext=fileSuffix.substring(fileSuffix.lastIndexOf(\".\")+1);\n        if(!rgx.test(ext)) {\n          scope.$apply(function() {\n              scope.parentIvntObj.fileNameError = true;\n          })\n\n        }\n        else {\n          scope.parentIvntObj.fileNameError = false;\n          scope.$apply(function() {\n            modelSetter(scope, element[0].files[0]);\n          });\n        }\n\n      });\n    }\n  };\n}]);\n","'use strict';\nvar Department = angular.module('Department', ['ui.router']);\n\n/** Main Controller */\nDepartment.controller('Department.Controller.Main', ['$cookies', '$scope', '$q', 'Department.Service.Http', '$sce','$state',\n  function($cookies, $scope, $q, Http, $sce, $state) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    var SHARE_FREQUENCY = 1;\n    var DATA_LEVEL = 2;\n    var SHARE_LEVEL = 3;\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    // follow department\n    $scope.depSelect = {};\n    $scope.followDeptList = [];\n    $scope.parentObj = {};\n    function toFollowDep() {\n      $scope.depSelect.show = false;\n      $scope.followDeptList = $scope.parentObj.outputAllDeptList;\n      // send request to add follow department\n      var params = [];\n      _($scope.followDeptList).forEach(function(item) {\n        var followDep = {};\n        followDep.follow_dep_id = item.dep_id;\n        params.push(followDep);\n      });\n      Http.followDepts({\n        userdep: params\n      }).then(function(result) {\n\n      })\n    }\n\n    // init\n    getAuditList();\n\n    function getAuditList() {\n      _httpParams.audit_status = 0;\n      $scope.mainAuditPromise = Http.getAuditList(_httpParams).then(function(result) {\n        $scope.toAuditList = result.data.body[0].results;\n        $scope.auditTotal = result.data.body[0].count;\n      });\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      console.log(_httpConfirmParams);\n      $scope.mainReqPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requireToConfirmList = result.data.body[0].results;\n        $scope.reqTotal = result.data.body[0].count;\n      })\n    }\n\n\n\n    // Get system dict\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_FREQUENCY\n    }).then(function(result) {\n      $scope.shareFrequencyList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': SHARE_LEVEL\n    }).then(function(result) {\n      $scope.shareLevelList = result.data.body;\n    });\n\n    Http.getSystemDictByCatagory({\n      'dict_category': DATA_LEVEL\n    }).then(function(result) {\n      $scope.dataLevelList = result.data.body;\n    });\n\n    Http.getDepDataQuotaTotal().then(function(result) {\n      $scope.Count = result.data.body[0];\n    });\n\n    // go to audit list page\n    $scope.auditMore = function() {\n      $state.go(\"main.department.audit\", {}, {\n        reload: true\n      });\n    }\n\n    // go to requirement list page\n    $scope.reqMore = function() {\n      $state.go(\"main.department.requirement\", {}, {\n        reload: true\n      });\n    }\n\n    // 已关注部门列表\n    Http.getFollowDepList().then(function(result) {\n      $scope.parentObj.outputAllDeptList = result.data.body;\n      $scope.followDeptList = _.uniq($scope.parentObj.outputAllDeptList);\n      //console.log($scope.parentObj.outputAllDeptList);\n      Http.getDepartmentFollowList().then(function(result) {\n        $scope.parentObj.deptAllList = _.remove(result.data.body, function(item) {\n          return item.dep_id != DEP_ID;\n        });\n        $scope.parentObj.outputDeptList = [];\n        console.log($scope.parentObj.deptAllList);\n        console.log($scope.parentObj.outputAllDeptList);\n        _($scope.parentObj.deptAllList).forEach(function(allItem) {\n          allItem.icon = '<img  src=styles/images/bureau/'+ allItem.dep_en_name +' />'\n          _($scope.parentObj.outputAllDeptList).forEach(function(outItem) {\n            if(allItem.dep_id == outItem.dep_id) {\n              allItem.ticked = true;\n              $scope.parentObj.outputDeptList.push(allItem);\n            }\n          })\n        });\n        console.log($scope.parentObj.outputDeptList);\n         $scope.$broadcast('someEvent', $scope.parentObj.outputDeptList);\n        // $scope.parentObj.deptAllList = _.pullAllWith($scope.parentObj.deptAllList, $scope.parentObj.outputAllDeptList,function(arrItem,othItem) {\n        //   return arrItem.dep_id == othItem.dep_id || DEP_ID == arrItem.dep_id;\n        // });\n        // console.log($scope.parentObj.deptAllList);\n      });\n    })\n\n    $scope.openFn = function() {\n      $scope.parentObj.outputAllDeptList = $scope.parentObj.outputDeptList;\n      console.log($scope.parentObj.outputAllDeptList);\n    }\n\n\n\n    $scope.followDep = function() {\n      toFollowDep();\n    }\n  }\n])\n\n\n/* HTTP */\nDepartment.factory('Department.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getDepartmentFollowList() {\n      return $http.get(\n        path + '/follow_sys_dep'\n      )\n    }\n\n    function getDepDataQuotaTotal() {\n      return $http.get(\n        path + '/depquota/summary'\n      )\n    };\n\n    function getSystemDictByCatagory(params) {\n      return $http.get(\n        path + '/sys_dict', {\n          params: params\n        }\n      )\n    };\n\n    function getAuditList(params) {\n      return $http.get(\n        path + '/opendata_quotalist', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function getFollowDepList() {\n      return $http.get(\n        path + '/followed_user_dep'\n      )\n    }\n\n    function followDepts(params) {\n      return $http.post(\n        path + '/user_dep_batch', {\n          data: params\n        }\n      )\n    }\n    return {\n      getSystemDictByCatagory: getSystemDictByCatagory,\n      getAuditList: getAuditList,\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      getDepartmentFollowList: getDepartmentFollowList,\n      getDepDataQuotaTotal: getDepDataQuotaTotal,\n      followDepts: followDepts,\n      getFollowDepList: getFollowDepList\n    }\n  }\n]);\n","'use strict';\nvar DepartmentReq = angular.module('Department.Requirement', ['ui.router']);\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.Main', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Component', 'Department.Requirement.Service.Http',\n  function($cookies, $scope, $stateParams, Component, Http) {\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1) * _httpParams.limit;\n      getDeptRequirementList(_httpParams);\n    }\n\n    // init\n    getDeptRequirementList();\n\n    function getDeptRequirementList() {\n      _httpParams.dep_id = DEP_ID;\n      $scope.reqPromise = Http.getDepartmentRequirementList(_httpParams).then(function(result) {\n        $scope.requirementList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n    $scope.dataLevelReqSelection = [];\n    $scope.toggleDataLevelReqSelection = function(item) {\n      var idx = $scope.dataLevelReqSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelReqSelection.splice(idx, 1);\n      }\n\n      // is newly selected\n      else {\n        $scope.dataLevelReqSelection.push(item.id);\n      }\n    };\n\n    Http.getDepartmentList().then(function(result) {\n      $scope.deptList = result.data.body;\n      var evens = _.remove($scope.deptList, function(item) {\n        return item.id == DEP_ID;\n      });\n    });\n\n    $scope.publishReq = function() {\n      $scope.Modal = {};\n      $scope.Modal.DepRequirment = {};\n      var _httpPublishParams = {};\n      var dataRelationConfig = [];\n      $scope.reqParent = {};\n\n      Component.popModal($scope, '发布', 'add-req-modal').result.then(function() {\n        _($scope.dataLevelReqSelection).forEach(function(value) {\n          var req_sys_dict = {};\n          req_sys_dict.datarequiementId = $scope.Modal.DepRequirment.requiement_name;\n          req_sys_dict.sys_dict_id = value;\n          req_sys_dict.obj_type = 2;\n          dataRelationConfig.push(req_sys_dict);\n        });\n        var res_dep_id = _.map($scope.reqParent.outputDeptList, 'id');\n\n        console.log(res_dep_id);\n        $scope.Modal.DepRequirment.response_dep_id = res_dep_id[0];\n        _httpPublishParams.dataRequiement = $scope.Modal.DepRequirment;\n        _httpPublishParams.dataRelationConfig = dataRelationConfig;\n\n        Http.publishRequirement(_httpPublishParams).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('发布成功');\n            getDeptRequirementList();\n          } else {\n            alert('发布失败');\n          }\n        })\n      });\n    }\n\n    $scope.searchDeptReqByName = function() {\n      _httpParams.requiement_name = $scope.DeptRequirement.req_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDeptRequirementList();\n    }\n\n\n    // delete requirement\n    $scope.deleteReqFlag = false;\n    $scope.deleteReq = function(id) {\n      $scope.deleteReqFlag = !$scope.deleteReqFlag;\n      Http.deleteRequirement({\n        id: id,\n        delete_flag: $scope.deleteReqFlag\n      }).then(function(result) {\n\n      })\n    }\n  }\n])\n\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.confirm', ['$cookies', '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n  function($cookies, $scope, $stateParams, Http, Component) {\n    $scope.Modal = {};\n    $scope.DeptRequirementConfirm = {};\n\n    var LoginUser = JSON.parse($cookies.get('User'));\n    var DEP_ID = LoginUser.dep_id;\n    $scope.DeptRequirement = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpConfirmParams = {};\n    _httpConfirmParams.limit = 10;\n    _httpConfirmParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpConfirmParams.skip = ($scope.Paging.currentPage - 1) * _httpConfirmParams.limit;\n      getDeptRequirementConfirmList(_httpConfirmParams);\n    }\n\n    // init\n    getDeptRequirementConfirmList();\n\n    function getDeptRequirementConfirmList() {\n      _httpConfirmParams.response_dep_id = DEP_ID;\n      $scope.reqConfirmPromise = Http.getDepartmentRequirementList(_httpConfirmParams).then(function(result) {\n        $scope.requirementConfirmList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      })\n    }\n\n    $scope.searchDeptReqConfirmByName = function() {\n      _httpConfirmParams.requiement_name = $scope.DeptRequirementConfirm.req_name_filter;\n      _httpConfirmParams.limit = 10;\n      _httpConfirmParams.skip = 0;\n      getDeptRequirementConfirmList();\n    }\n\n    Http.getDepartQuotaList({\n      dep_name: DEP_ID\n    }).then(function(result) {\n      console.log(result);\n      $scope.depQuotaReqList = result.data.body[0].results;\n\n      //  $scope.Paging.totalItems = data.head.total;\n    });\n\n    $scope.toConfirm = function(item) {\n      // get requirement detail\n      $scope.Modal.ReqDetail = item;\n      $scope.Modal.ReqResponse = {};\n      console.log($scope.depQuotaReqList.length);\n      if($scope.depQuotaReqList.length == 0) {\n        $scope.Modal.ReqResponse.data_quota_id = '';\n        $scope.errorMsg = '本部门还未添加任何指标';\n        $scope.dataQuotaIdNull = true;\n      }\n      else{\n        $scope.Modal.ReqResponse.data_quota_id = $scope.depQuotaReqList[0].id;\n      }\n\n      Component.popModalConfirm($scope, '', 'confirm-req-modal').result.then(function() {\n        console.log($scope.Modal.ReqResponse);\n        $scope.Modal.ReqResponse.id = item.id;\n\n        Http.updateRequirement($scope.Modal.ReqResponse).then(function(result) {\n          if (200 == result.data.head.status) {\n            if ($scope.Modal.ReqResponse.status == 1) {\n              // 保存需求响应\n              Http.saveReqResponse({\n                requiement_id: item.id,\n                data_quota_id: $scope.Modal.ReqResponse.data_quota_id\n              }).then(function(saveResult) {\n                if (200 == saveResult.data.head.status) {\n                  alert('保存成功！');\n                  getDeptRequirementConfirmList();\n                } else {\n                  alert('保存失败！');\n                  getDeptRequirementConfirmList();\n                }\n              })\n            } else {\n              alert('保存成功！');\n              getDeptRequirementConfirmList();\n            }\n\n          } else {\n            alert('保存失败');\n          }\n        })\n      });\n    }\n\n  }\n])\n\n/** DepartmentReq Controller */\nDepartmentReq.controller('Department.Requirement.Controller.detail', [ '$scope', '$stateParams', 'Department.Requirement.Service.Http', 'Department.Requirement.Service.Component',\n    function( $scope, $stateParams, Http, Component) {\n      Http.getReqDetail({\n        data_requiement_id: $stateParams.ID\n      }).then(function(result) {\n        console.log(result.data.body[0]);\n        $scope.ReqDetail = result.data.body[0];\n      })\n    }\n  ])\n  /* HTTP Factory */\nDepartmentReq.factory('Department.Requirement.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function getDepartmentRequirementList(params) {\n      return $http.get(\n        path + '/data_requiement', {\n          params: params\n        }\n      )\n    };\n\n    function publishRequirement(data) {\n      return $http.post(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    function updateRequirement(data) {\n      return $http.put(\n        path + '/data_requiement', {\n          data: data\n        }\n      )\n    }\n\n    function saveReqResponse(data) {\n      return $http.post(\n        path + '/data_requiement_response', {\n          data: data\n        }\n      )\n    }\n\n    function getDepartQuotaList(params) {\n      return $http.get(\n        path + '/data_quota', {\n          params: params\n        }\n      )\n    }\n\n    function getReqDetail(params) {\n      return $http.get(\n        path + '/data_requiement_detail', {\n          params: params\n        }\n      )\n    }\n\n    function getResponseList(params) {\n      return $http.get(\n        path + '/requirement/requireResponseList', {\n          params: params\n        }\n      )\n    }\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/sys_dep'\n      )\n    }\n\n    function deleteRequirement(id) {\n      return $http.put(\n        path + '/data_requiement_delete', {\n          data: data\n        }\n      )\n    }\n    return {\n      getDepartmentRequirementList: getDepartmentRequirementList,\n      publishRequirement: publishRequirement,\n      getReqDetail: getReqDetail,\n      getResponseList: getResponseList,\n      updateRequirement: updateRequirement,\n      saveReqResponse: saveReqResponse,\n      getDepartQuotaList: getDepartQuotaList,\n      getDepartmentList: getDepartmentList,\n      deleteRequirement: deleteRequirement\n    }\n  }\n]);\n\n\n/* Component */\nDepartmentReq.service('Department.Requirement.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal for confirm\n    function popModalConfirm(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstanceConfirm = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        if (isValid) {\n          modalInstanceConfirm.close(scope.Modal);\n        } else {\n          return;\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstanceConfirm.dismiss();\n      };\n      return modalInstanceConfirm;\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop: 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope,\n        size: 'lg'\n      });\n      scope.Modal.confirm = function(isValid) {\n        console.log(scope);\n        if (isValid && scope.reqParent.outputDeptList.length > 0) {\n          modalInstance.close(scope.Modal);\n        } else {\n          scope.error = true;\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal,\n      popModalConfirm: popModalConfirm\n    }\n  }\n])\n","'use strict';\nvar DepartmentShare = angular.module('DepartmentShare', ['ui.router']);\n\n/** InventoryDetail Controller */\nDepartmentShare.controller('DepartmentShare.Controller.Main', [ '$scope', 'DepartmentShare.Service.Http',\n  function( $scope, Http) {\n    $scope.DepartmentShare = {};\n\n    $scope.Paging = {};\n    $scope.Paging.maxSize = 5;\n    $scope.Paging.itemsPerPage = 10;\n\n    var _httpParams = {};\n    _httpParams.limit = 10;\n    _httpParams.skip = 0;\n\n    $scope.Paging.pageChanged = function() {\n      _httpParams.skip = ($scope.Paging.currentPage - 1)*_httpParams.limit;\n      getDepartmentShareList(_httpParams);\n    }\n\n    function getDepartmentShareList(_httpParams) {\n      $scope.sharePromise = Http.shareDataQuotaList(_httpParams).then(function(result) {\n        $scope.depShareList = result.data.body[0].results;\n        $scope.Paging.totalItems = result.data.body[0].count;\n      });\n    }\n\n    //init\n    getDepartmentShareList(_httpParams);\n\n    // share level all\n    $scope.getShareLevelAllForShare = function() {\n      $scope.shareLvShareSelection = [];\n      _httpParams.share_level = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by share level\n    $scope.shareLvShareSelection = [];\n    $scope.getShareDataQuotaListBySl = function(item) {\n      var idx = $scope.shareLvShareSelection.indexOf(item.id);\n      if (idx > -1) {\n        $scope.shareLvShareSelection = [];\n      } else {\n        $scope.shareLvShareSelection = item.id;\n      }\n      _httpParams.share_level = $scope.shareLvShareSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // get data level all\n    $scope.getDataLevelAllForShare = function() {\n      $scope.dataLevelShareSelection = [];\n      _httpParams.sys_dict_id = null;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // filter by partial\n    $scope.dataLevelShareSelection = [];\n    $scope.getShareDataQuotaListByAP = function(item) {\n      var idx = $scope.dataLevelShareSelection.indexOf(item.id);\n      // is currently selected\n      if (idx > -1) {\n        $scope.dataLevelShareSelection.splice(idx, 1);\n      }\n      // is newly selected\n      else {\n        $scope.dataLevelShareSelection.push(item.id);\n      }\n\n      _httpParams.sys_dict_id = $scope.dataLevelShareSelection;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // search by name\n    $scope.searchShareDataQuotaByName = function() {\n      _httpParams.quota_name = $scope.DepartmentShare.quota_name_filter;\n      _httpParams.limit = 10;\n      _httpParams.skip = 0;\n      getDepartmentShareList(_httpParams);\n    }\n\n    // follow department\n    $scope.followChange = function(event,depId) {\n      var value = event.target.checked;\n      console.log(value);\n      if(value) {// follow\n        Http.followDepartment({\n          follow_dep_id: depId\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n\n          }\n          else {\n\n          }\n        })\n      }\n      else{// cancel follow\n        Http.cancelFollowDepartment({\n          follow_dep_id: depId\n        }).then(function(result) {\n          if (200 == result.data.head.status) {\n\n          }\n          else {\n\n          }\n        })\n      }\n\n    }\n  }\n])\n\n\n// Department share detail controller\nDepartmentShare.controller('DepartmentShare.Controller.detail', [ '$scope', 'DepartmentShare.Service.Http', '$stateParams',\n  function( $scope, Http, $stateParams) {\n    // get department share detail\n    Http.getQuotaDetail({\n      data_quota_id: $stateParams.ID\n    }).then(function(result) {\n      $scope.DataQuotaDetail = result.data.body[0];\n    })\n\n  }\n])\n\n/* HTTP Factory */\nDepartmentShare.factory('DepartmentShare.Service.Http', ['$http', 'API',\n  function($http, API) {\n    var path = API.path;\n\n    function shareDataQuotaList(params) {\n      return $http.get(\n        path + '/sharedata_quotalist', {\n          params: params\n        }\n      )\n    };\n\n    function getQuotaDetail(params) {\n      return $http.get(\n        path + '/data_quota_detail', {\n          params: params\n        }\n      )\n    }\n\n    function followDepartment(id) {\n      return $http.post(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    }\n\n    function cancelFollowDepartment(id) {\n      return $http.delete(\n        path + '/user_dep', {\n          data: id\n        }\n      )\n    }\n    return {\n      shareDataQuotaList: shareDataQuotaList,\n      getQuotaDetail: getQuotaDetail,\n      followDepartment: followDepartment,\n      cancelFollowDepartment: cancelFollowDepartment\n    }\n  }\n]);\n","'use strict';\nvar SystemUser = angular.module('Department.SystemUser', ['ui.router']);\n\n/** Main Controller */\nSystemUser.controller('Department.SystemUser.Controller.Main', ['$scope', '$q', 'Department.SystemUser.Service.Http', 'Department.SystemUser.Service.Component', '$uibModal',\n  function($scope, $q, Http, Component, $uibModal) {\n    $scope.Modal = {}; // Clean scope of modal\n    $scope.deptList = [];\n\n    function getUserList() {\n      Http.getUserList().then(function(result) {\n        $scope.users = result.data.body;\n        $scope.DepUserTotal =result.data.head.total;\n      });\n    }\n    // Http.getDepartmentList().then(function(result) {\n    //   $scope.deptList = result.data.body;\n    // });\n\n    // init\n    getUserList();\n\n    // add user\n    $scope.addUserModal = function() {\n      $scope.Modal = {}; // Clean scope of modal\n      $scope.sysUser = {}; // Clean scope of modal\n\n      Component.popModal($scope, '添加', 'add-user-modal').result.then(function() {\n        Http.saveUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('添加成功');\n            getUserList();\n          }\n          else{\n            alert('添加失败');\n          }\n        })\n      });\n\n    }\n\n    $scope.searchUser = function(){\n      var username= $scope.username;\n      alert(username);\n      // http.getUser({\n      //   USERNAME: username,\n      // })then(function(result) {\n      //   if(200 == result.data.head.status){\n      //     $scope.users = result.data.body;\n      //     $scope.DepUserTotal =result.data.head.total;\n      //   }else {\n      //     alert(\"输入错误，请\");\n      //   }\n      //\n      // });\n    }\n\n    $scope.updateUser = function(user) {\n      user.DEP_NAME = null;\n      $scope.sysUser = user;\n      Component.popModal($scope, '修改', 'add-user-modal').result.then(function() {\n        Http.updateUser($scope.sysUser).then(function(result) {\n          if (200 == result.data.head.status) {\n            alert('修改成功');\n            getUserList();\n          }\n          else{\n            alert('修改失败');\n          }\n        })\n      });\n    }\n\n    $scope.deleteUser = function(user) {\n      console.log(user);\n      var fig = confirm(\"确定要删除吗？\");\n      if (fig) {\n        Http.deleteUser(user).then(function(result) {\n          console.log(result.data);\n          if (200 == result.data.head.status) {\n            alert('删除成功');\n            getUserList();\n          }\n          else{\n            alert('删除失败！');\n          }\n          getUserList();\n        })\n      }\n    }\n\n\n  }\n])\n\n\n/* HTTP */\nSystemUser.factory('Department.SystemUser.Service.Http', ['$http', '$q', 'API',\n  function($http, $q, API) {\n    var path = API.path;\n\n    function getUserList() {\n      return $http.get(\n        path + '/user'\n      )\n    };\n    function getUser(params) {\n      return $http.get(\n        path + '/user', {\n          params: params\n        }\n\n      )\n    };\n\n    function saveUser(data) {\n      return $http.post(\n        path + '/user', {\n          data: data\n        }\n      )\n    };\n\n    function getDepartmentList() {\n      return $http.get(\n        path + '/dep/'\n      )\n    }\n\n    function updateUser(data) {\n      return $http.put(\n        path + '/user/' , {\n          data: data\n        }\n      )\n    }\n\n    function deleteUser(data) {\n      return $http.delete(\n        path + '/user', {\n            data: {\"ID\":data.ID}\n        }\n      )\n    }\n    return {\n      getUserList: getUserList,\n      saveUser: saveUser,\n      getDepartmentList: getDepartmentList,\n      updateUser: updateUser,\n      deleteUser: deleteUser,\n      getUser:getUser\n    }\n  }\n]);\n\n/* Component */\nSystemUser.service('Department.SystemUser.Service.Component', ['$uibModal',\n  function($uibModal) {\n    // prompt Alert\n    function popAlert(scope, info) {\n      scope.Alerts = [{\n        type: info.type,\n        message: info.message,\n        timeout: 1200\n      }];\n      scope.CloseAlert = function(index) {\n        scope.Alerts.splice(index, 1);\n      };\n    };\n    // prompt Modal\n    function popModal(scope, type, templateUrl) {\n      scope.Modal.type = type;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        backdrop : 'static',\n        templateUrl: templateUrl + '.html',\n        scope: scope\n      });\n      scope.Modal.confirm = function(isValid) {\n        if (isValid) {\n          modalInstance.close(scope.Modal);\n        }\n\n      };\n      scope.Modal.cancel = function() {\n        modalInstance.dismiss();\n      };\n      return modalInstance;\n    };\n\n    return {\n      popAlert: popAlert,\n      popModal: popModal\n    }\n  }\n])\n"],"sourceRoot":"/source/"}